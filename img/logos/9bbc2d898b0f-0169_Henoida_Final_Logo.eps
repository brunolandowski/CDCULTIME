%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 0169 Henoida Final Logo.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Diane
%%CreationDate: 11/8/13
%%BoundingBox: 0 0 872 672
%%HiResBoundingBox: 0 0 872 672
%%CropBox: 0 0 872 672
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%AI3_Cropmarks: 36.0000 36.0000 836.0000 636.0000
%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                    
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2013-11-08T10:14:19Z</xap:CreateDate>
         <xap:ModifyDate>2013-11-08T10:14:19Z</xap:ModifyDate>
         <xap:MetadataDate>2013-11-08T10:14:19Z</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>204</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYql1lqhuNRuLf&#xA;b00/uj/qmh+/AC1xnciFmvX8lvCkUR4yS1qw6hR4fPElGWdBG2MbRWUKSbMqDlXsab4QziKCFttV&#xA;e7vTFbx1t0/vJmr9FPngtjHJZ25JjhbHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYqg9Xnlg0+SSIlXBWjDtVhgLDIaDWk6iL2AlhSZNpAPfoR88QVxz4gluh2ki&#xA;alcMwoIuSE+5O34DAGrFH1FOJrGCa4jnkHJ4h8A7VrWuSpuMQTas6K6MjCqsCCPY4slsMEMKcIkC&#xA;L4KKYoAAQV3+mZJ+FsEhhH+7WoSfo3/Vg3YS4r2RsKyLEqyP6jgfE9AKn5DCzC/FLsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqjeXcVpF6soJSoU8RWlcWMpUpO1tqNlIk&#xA;MgYOKV8D1FR88HNBqQ2Sfy+ssOpSwuCpCEOp8QRgDTi2lSfXE8NrBJcSfDGg5SECp8K7ZJyCQBaU&#xA;/wCMdErQPIewoh3yPEGn8xFNby7gs7Z7iclYo6ciAT1IHQfPJNspACylkXm3R5ZkhjZy8jBV+A0q&#xA;TQZHiDWNREmk5yTc7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;o3lstzbSQNtzGx8CNwfvxYyjYpiccl1p93tVJYzRlPQjwPiDkHEBMSyq1a3uFS8RQHdKcu9K7qfk&#xA;Rk3LjR3RGLJi+ggf4p1Tbpzp/wAGMgObi4v7wsoyblMX8tgf4h1fbpI9Pb94cgObi4frkyjJuU7F&#xA;XYq7FXYq7FXYql2o22rS31nJaTiO2jatwhP2hUV2pvttgLVOMiRR2cltqw1t52nH6OKALDXetB2p&#xA;/NvXHqvDLiu/SmOFtYhqAvrHzDYwrfXEkNxLGzI8jUo0lCtK0pkDzcOdxmBZZfk3MdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdiqT6hrVzaXJiaBSnVGqfiGAlpnkIPJQfUdL1GiXcZgk6LKDWn00/WMFs&#xA;eOMuaa6dZi0t/SEnqKWLI1KbGnucIbYRoIrCzYXanVR5k1L9GrG0vJ+fq9OPMdNx3yHVwY8XGeFN&#xA;efnT/fdt+P8AXDu3Xl8kH5T9b9Nan64Anq3qhenP1Dyp7VwR5sNPfEbVfMGq3Uupx6RaTC2Bobi4&#xA;J4kVHKldqfD9/TCT0TlyEy4Rsl2o20ujiO7sNTM7cgsicge1akAmo274Ds1zHBuCmmv+vc6MmqwX&#xA;UsFIkZoI3IRuZFQaEbjlhPJty2Y8QKD03StY1fT4pbjUGhtwvGGNasSFqtW3Xv44ACWEMcpjc7K/&#xA;lS6vY9QvNLuJTMlvy4sSTQowU8a9jXDFlgkQTEt6tf3+oayNHsZjBGn9/MtQdhVtxvQdKeOJO9Lk&#xA;mZS4QhdS0nUdDhW/tL2SRUYCVWqBQnYkVIIrtgIphPHKAsFNL95dS0JNRguZbV44XlKxMQGKrupo&#xA;R0K7YTuG2fqhxA035Qmkk0cyTSFyJHqzkk0AHc4x5J059O6XWx1HzHdzuLl7WwhNERNia9K0I37m&#xA;uDm1R4shO9BCXumNp/mHTYjcPcBpImBk6j97SnXARuwlDhmN028waheSajbaPZSmF5qGaVeoBrsC&#xA;PYVyRPRuzTJkIhDajpN/o0A1CzvZZfSI9aOQ1DAmnTwwEUxnjMBYKN8r315fyX11LIxtzJxt426K&#xA;KlqfQCMMSzwSMrPRPsk5DsVdirsVdirsVdirsVdirsVdiqheWVvdxenMtafZYdQfY40xlEHmkNx5&#xA;cvEJ9ErKvbfifx2/HI045wnomOiw6nbgw3MdIQKxkspIPhsTthDbjEhsU0wtrF9BI/xTqm/XnT/g&#xA;xkBzcXF/eFlGTcpi/lsj/EOr79ZHp/yNORHNxcP1yQOsW9oPNpGoAi0n4HlUjYoFBr4BhgPNryAe&#xA;JvyTS48ueV7eL1p29OMioYyHf5b7/RhoNpw4wLKvry20XleSOAj0BHGITXqvJafPbE8mWWhj2VvK&#xA;xH6Btfk//E2wx5JwfQEp8vkf4r1P39X/AJOjIjm1Yv7wqdvMlh5zuPrJCJPyCu3Qc6Mpr9FMeqAe&#xA;HKbTHzjewR6Q9uWBluCgRQd6KwYtTw+HDI7NmokOGl1vA9t5PeKX4XFrKSDtTmGYD5/Fj0SBWP4K&#xA;PlJfU8vyxqfiZ5F+kqMY8mOn3goeR7iNYrm0c8Zw/MIdiRShoPamCLHSnmFHXrm3l80acI5A3ovE&#xA;shB2U+pWhPyxPNGWQOQKupyLaecbS5mPGF0ADnoOSsm59icTzTM1lBKZeZtRtINKmidg0twhSKMG&#xA;pPL9r5DrkpFtzTAj71vlAw/oOH06cuT+qO/Lkev+xpgjyRp64E6yTe7FXYq7FXYq7FXYq7FXYq7F&#xA;XYqp3P1j0W+r8fW/Z59PwxRK62YzdXGtq59ZpUP+TVR9HHbIbuLIy6q2n32tmQBFadO4cbf8F2wg&#xA;llCUk/uLdLq1eCYELKtHCnf6DknIIsUUoHk3RQahZAR0PM5HhDT+Wim17Zw3lq9tNX0pKcuJodiD&#xA;1+jJFtlESFFLIfKWjwzJKiyB42DKeZ6g1yPCGoaeINo3U9IsdSjCXKVK/YkU0Za+BwkW2TxiXNL7&#xA;fybo0MgdhJNTcLIw4/coXBwhrGmiEVqXl/T9QaMzh1ES8EVDxUD5UwkMp4hLm3Y6BY2UNxDAX4XK&#xA;8ZOTVNKEbbbfaxAWOIRBA6oWHyhpMMySoZecbBlPPuDXwwcLEaeIKN1TRdP1JV+soea7LKhowHhX&#xA;+uEi2c8QlzQdl5R0i1mEtHmZTVRKQQD40AX8cAiGEdPEFGapo9pqaxrcl6RElQhp1p1+7CRbOeMS&#xA;5qemeX7DTZ2mtufNlKHk1RQkHw9sQKRDCImwpah5V0q9nM7h4pGNXMRADHxIIOJiieCMjaxvKGiG&#xA;NE9Nhwr8QY8mr4nBwhH5eKJm0DTZrCOykQtFDX0mr8a18Gw0zOKJFKNj5V0i0kMio0rkEAyGvGvh&#xA;QDERDGOCIVNP8u6dYXAnt/UDgEULkg1FNxiAmGGMTYTPC2uxV2KrZpViieVvsoCx+QFcUE0gtI1B&#xA;r2F2cAOjEEDwO4/pgBYY58QQmv6hKjLaQkhmFZCOu+wUYCWGWfQJtCvpW6K5+wgDH5DfJNw2CAg1&#xA;g3V8ILaPlEKl5W/lHcDBbWMlmgmeFtdirsVdiriQBU9MVSO/8xFXMdoAQNjK24P+qMiS0TzdztLu&#xA;tZu5gzSUtwfjYotD7Lt1xFrCUifJNZ760gYLLKFY9F6tv7CpyVtpkArMyqpZiFUbknYAYsmopY5Y&#xA;1kjPJG3U+OKAbQmm6j9ce4FKCJ6L/qnp+rACxhO7RuFm7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYqluqao9lcwLx5RMCZB36jp8sBLVOfCQraiwm0uZojyVo+Skdx1xLKe8UD5YjYQzyH7Lsqj/Yg/&#xA;81YIteAbFGnS4m1A3kh5HbglNgQKVPjhps4PVaJuIFnheFiVVxRiuxphZEWKW2tlbWqcIU4g/aPU&#xA;n5nFEYgckNe3moJN6NpbFztWVx8O/huP14CWMpG6ARkHr+kvr8fV/a4VA/EnCzF9V+KXYq4gMCrC&#xA;oOxB6EYqhxp1gG5C3jr/AKoxpjwDuUtVvDZ2nKMfvGISMeBPt7YCjJKglmk6TcSXAu7sEAHkob7T&#xA;N4nAA1Y8ZJsq3mKaY+jaR1PqmrAd96KMSnMTyTSzgMFrFCdyigH598k2xFClDTNO+p+uSamV6in8&#xA;orx/XgAYwhSNwtjsVdirsVdirsVdirsVdirsVdirsVdirsVW+tF6np819SleFRWnyxRaUeZbZnhj&#xA;uFFfTJD/ACbofvyJas0drVPLshk08o24RyoB8CAf44QnCdkyggigiWKJeKL0GFsApfil2KuxV2Kp&#xA;XdeYLeCZovSdmU0NRx/XvgtqllAKKsNSt71SYuQZftKw6fT0xBZRmJIrCzdirsVdQfd0xV2KrDDE&#xA;ZRKVBkUcVY9QPbFFL8UuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVIvMlq9Y7tBso4OR23qp&#xA;yJaM0ertH1UzH6ndnnzFEdu/+S3jiCuPJexTazsobRHSKvFmL0O9KgCn4ZKm2MQFSaJZYXiYkLIp&#xA;ViDQ0YU2OKSLDDLXR4JfMtxp7yzGCJSwPP4iaKdzT/KyFbuFHGDMhmFzax3Fs1u5ZUYAEqaMKeBy&#xA;bmGNimIaPpUE2v3drJJKYrQlo/i3JVwBy2yAG7h48YMyO5muTc5bJDFJT1EV6dOQB/XiggFtURF4&#xA;ooVR0AFBilvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVssiRRtI5oiirH&#xA;wH0YoJpBnVtJmBjaZSrbMGBAP3jBbDxIlLJ9BlVxPYSCRK8kFRUEeB6HBTUcXUMgUkqCRQkbjwyT&#xA;koC01y0utRnsI1cTQcuTEfCeJ4tTfxwW1xygyIY6+p2+nebby4uAxjK8PgFTUqvuPDI3RcYzEchJ&#xA;TP8Axto38s3/AAI/5qw8QbfzMUF5XuI7nzDqFxHX05VZ1rsaFx1wR5teA3MlPLLXLS81C4sYlcS2&#xA;9eTMBxPFuJpv4nJAuRHKCSO5F3VslzA0T1Abow6g+Iws5RsUlVtY6xZTj03E8FfiUtTb5N0ORotI&#xA;jKJTrJN7sVdirsVcSAKnYYq7FXYqhLbUre5uZIIvi9MVL9jvTbBbCMwTSLws3Yq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXEBgQRUHYg+GKsa1PQpoXaS2UyQnfgN2X+oyJDjTxEckFZ31zZy8oyQK/HGeh+&#xA;YwW1xkYsss7qO6t1mj6N1HcHuDk3LjKxa5Le3SV5UiRZZPtyBQGb5kbnFNBjlh/ym17/AMYz+pMi&#xA;ObjQ/vSyfJOUxfQf+Up1T/Z/8nBkRzcXF/eSZKlvAkjypGiyyfbcKAzfMjrknJoLbuZ4LaSZU9Qo&#xA;OXGtKgdfHtisjQtTsNQgvYi8ezL9tD1BwAohMSROFk7FXYq7FUm8yXbJFHbKaep8T/IdB9+RLRml&#xA;0R2lXBuLCKRjV6cWPuu2ENmM2EN5hu2htFiQ0aYkE/5I64ljmlQQ/lm3YJLcEUDURPem5wRY4R1T&#xA;maaOGJpZDREFSck3E0kC3+o6ldiKFjDDWrcNiF8S2Ru3H45SOzIsk5LsVdirsVdirsVdirsVdirs&#xA;VdirsVQl7qlpZnjKSZCKhFFTTASwlMBLH8wWcjVe05+7cSfxGC2o5R3JhYanp89I4aROf91EBa/K&#xA;mxwgtkJg8kXOJTDIISFmKn02bcBqbE+1cLM3WzGovL/mGLUHv1vIPrMgo7FTQjbanH2yNFxhhmDd&#xA;i2RXS3bWrLbOqXJA4OwqoPfbJORK625sfstA1+1v3vFu4TJMf3+x+IE1O3HbIgFx44pg3bJsk5TX&#xA;JGLLUEjZh4V8cVQVvpUVteG4gYqjgh4u2++2CmsY6NhHYWx2KpXqmqyWV1CoUNGwJkXvStNj9GAl&#xA;qnk4SmME8U8SyxHkjCoOFsBtj3mUH67Ge3pD/iTZEuPm5ppoCFdNjJ/aLMPlWmENuIelvUtM+vSQ&#xA;cn4xx8ufia06fdiQs4cVI2KKOKNY414ooooGFmBSnd2sV1F6UteBIJCmlaYolG27e1t7ZOEKBF70&#xA;6n5nFIiBydc3MNtCZZWoo+8nwGKykAEm/wAQ3c03p2tuCT9kNVj+FMjbR4xJ2CeReqY1MoAkp8QX&#xA;pX2rkm8LsUuxV2KuxV2KuxV2KuxV2KqNzZ21ynGdA4HQ9CPkRixlEHmlzeWrImqySAeFQf4YKa/B&#xA;DawaJprguwMy7jkebD6ANvux2C1CKLttVsrmT0oXJelacWGw+jG2ccgPJF4WbsVdiq1JI3LKrAlD&#xA;RwOxpXFFpaY7iHXlkAPo3S0Y9qqnT/hcHVroifvTTC2uxV2Kse8zxsJoZP2SpX6Qa/xyMnHzjd3l&#xA;u6ZZntmPwuOSD/KHX7xiEYZb0mWraZ9dWLiQro25P8p64SG3JDiRsUaRRrGgoqAKo9hhZgUuxS7F&#xA;XYq7FVrxxyCjqHHgwBH44oIckUUYpGioD1CgD9WKgUuxS7FXYq7FXYq7FXYq7FXYq7FXYqh75bx7&#xA;craFVlO3JiRQe2x3xLGV1skcfly+dqyuiA9TUsf8/pyNNAwlNI4LHSLVpDuejOftMfAYeTaAIBB2&#xA;Wq399fqkYEcCnk4ABPEdiT4+2AFhHIZFHatqQsoRxAaaT7APQU6k4SWeSfCERZySSWkMkn23RWY9&#xA;NyK4WUTslfl8yme8Z67sOVf5qtXIhqxcynWSb3Yqo3k7W9tJMq8ygrxrSorvixkaFoS016ynIVyY&#xA;XPZ+n/BYLYRygquq2X1y0ZF/vF+KM+47fTiQyyRsMe0cOmqwqQQwLAg9R8JrkQ4+P6mW5Ny3Yq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUu1PTJb6WMeqEhQbilSSf7MBDXOHEir&#xA;Oxt7SPhCtK/aY7kn3w0yjEDkgL/S5bzUkd9rZEAY9zuTQYCGucOKXkmwAAAGwHQYW5bHFHHy4KF5&#xA;sWandj1OKAF2KXYqtkjWSNo23VwVYex2xQQwu6t3t53hf7SGlfEdj9OQcKQo0mmiauyOtrO1Y22j&#xA;c/snsPlhBbcWToU7NjbG7W640mUEch3qKb5Km/hF2r4snYqlHmDUdV0+H6zaxRPboB6rSV5AluIo&#xA;AV8RgJac05RFjku0G91e9h+sXkcKQSKDD6fLkd+9S2IKcUpSFlR8warrGnD14IoWtBQcn5FuR9gV&#xA;wEkMc2SUdxyRWiXOqXVt698kSLIFeARV3VhWrVLYQzxSkRZTHC2OxV2KuxV2KuxV2KqCX9k8DzpP&#xA;G0EZIeUMCoI8TjbHiFXarHJHLGskbB42FVZTUEexGKQbUru/s7NVa5lWJWNFLdzjaJTA5utL21vI&#xA;2ktpBKitxLCtKgA03+eNrGQPJXxZOxV2KuxV2KuxV2KuxV2KuxV2KuxVAarpSXsfJaLOg+FuxHgc&#xA;BDXkhxMXngmgkMcqFHHY/wAMi4pBDLdLuTcWMUjGr04v812/HJBy4SsIrCzdiqU+bP8AlH7r/nn/&#xA;AMnFwS5NOf6Cq+Xf+OJZ/wDGMfrOI5MsP0hCec/+OI3/ABkT9eCXJhqfpTHR/wDjk2X/ADDxf8QG&#xA;ENmP6R7lO817SLOX0bi5CSDqoDMR8+INMbRLLGOxKtZ6lY3kLTW0yyRp9sioI+YNCMbZRmCLChB5&#xA;h0aeT04rpS1C24ZRRRUmrADGwxGaJ6qY8z6EZRGLteRNK8XC1/1qcfxx4gjx4d6aYW1LbnzHottK&#xA;YpbpQ67MFDPQ+FVBGCw1HNEdUVa3tlfQl7eVZozs1O1exB3GG2cZCQ2SS1/wqtvJpMU5YXMgVlPP&#xA;kXqAAG402IyO3Joj4dcIPNPLeC2sLNYlPC3gX7TnoOpJJyTeAIhKdQ1/y3cQSwyTJK3FggaNmHKm&#xA;1Dxp9ORJDTPLAilLyN/xyZv+Yhv+IJjFGl+n4pldeYdGtZTDPcqsi7MqhnofA8QcNhtlmiNiVVdX&#xA;0w2y3QuYxAzcBITQcqVpv3xtPiRq7RYIIBG4O4OFm7FXYq7FXYq7FXYq7FXYqxnUbvVrW5aN5249&#xA;Y2AABX6BkS4s5SB5qcOv6jGficSDwYD9YpgtAyyTS21XT9QAhuYwsh6K9CpP+SclbaMglsUxtrWC&#xA;2jMcK8UJ5UqTufnhbREDkq4pdiqU+bP+Ufuv+ef/ACcXBLk05/oKV6T5T0u7023uJTL6kq8m4sAK&#xA;/dkRFqx4ImIKH8w+WtO0/TWuIDIZA6r8TAih+gYmLHNhjGNhO/rT2nlWO4j+2lpHwPgxQAH6K5Lo&#xA;38VY78mM6HqOiWsDtfWkl1cyMSXKJItPAcm+/IAhxcU4gbiyifLUi/4hlNpG8dlOrgI46D7QG1Rs&#xA;cMebLCfXtyW6lp1pL5tjtPTEcEnDkkYCj7NT08cSN1nAHJSN82aTpttpSSW9ukUiOqhlFCQQevj9&#xA;OMgz1GOIjsERdX88Pk+OZDSVoY4ww6itFJ+dMN7MpTIx235Z0XTv0TFNNAk0s4LO0ihtqkACvTbG&#xA;ITgxx4bIQGnRjTvOMllbki3lBBTtT0/UH3HpgGxa4DhyUOS7W4IYvNWmiKNYwxjZuIC1JlO5p3xP&#xA;NcoAyBW85TSyPZaejcVuHrJ77hV/Xhky1J5R701l0XSodPkiS1jISNqMygtUL1LEVrhptOOIjySP&#xA;y9cSW3lW/njNJEkkKHwJjQA/RkRyaMJrGSjPKmlWT6StzNCk0twzFmkUMaBitN/lhiGeDGOGyk1/&#xA;pRTzCNLh+G1uJUlEfYCh5U+Q5ZEjdpnj9fCORZ3ljnuxV2KuxV2KuxV2KuxV2KqF7ZQXcPpyj3Vh&#xA;1B9sSGMoghjV7o15bEniZYuzoK/eO2QIcaWMhAYGtkWhaq0v+izmrgfunPcDsffJAuRiyXsU5yTe&#xA;7FUg8338SafJY8XaecKycVqoCuDuf9jkZFx9RPalTytqMM1hFaKrrNboBJyWg69jjEpwTBFdyE84&#xA;6hCbVtPVHacsj1C/DTr1xkWGomKpE6fJDq3l9rFA6SRQJC3McRzC7EeIquI3DKBE4V5JVouvfoaO&#xA;TT9RgkUxsShUAkV6jcjbuCMANNWPLwemSd6Zr0l/M7R2kkdiiE/WHoKsO1P6E5IFvhl4jy2Yzca3&#xA;ZyeZo9RUN9XQqDUfFQLxJpXIXu4pyjj4uibedb+3+oRWoqZZSsq7bcRXrkpFu1MxVNWXp6x5Wayg&#xA;r9Yt0VaNsOankKH/ACqUwDcLH146HMKGj+Z4dNsxY38EqywEgcVFaEk0IYrQjESpjjziIohX0G2u&#xA;tQ1qXW54zFEaiBT3qvAU9gvfxwjnbLFEylxlLdZ1qzn8wWt1GHMNqUEhIoTwcseIrkSd2rJlBmD3&#xA;Jl5nhkvbOz1axBcRfFsPi4mhDU9iMlJtzjiAkF0nm6G7tGhtLaWS8lQr6dAVBIoTUGtBjxKdQCKA&#xA;3QXluSKfSrrSGDrcXJkeNivwfYFKn5rgHcwwm4mPeqaP5gXSLVtP1CCVZoWb0woBqCa03I798QaT&#xA;jy8A4SEO2oahDrlvq95bukUoYJEBVhFQr/GuN72x4yJiRDM7a4juIEniqY5BVagg0+Rybmg2LVMU&#xA;uxV2KuxV2KuxV2KuxV2KqM95a2/99KqHwJ3+7rixMgOaBk1TQpG/ecHP8zRk/rGCwwM4FEWjaS7A&#xA;2wh5jpxVQ36gcWUeHojMLN2KuxV2KuxV2KtMqtTkAaGoqK0OKt4q7FXYq7FWmRGILKCV3UkVofbF&#xA;abxV2KuxVoKoJIABPWnfFW8VcVBoSKkdMVdirsVdirsVdirsVdirsVdirsVWyJzjZAxXkKcl2I+W&#xA;KCxq90K/jdnStwp35D7X0g75EhxpYiEuaCdDRo2U+BBGBroq0Gn38rD0oXr2YjiPvNMaSIEsp0+K&#xA;8itwt1IJJOxHYeBPfJBy4AgbonCydirsVdirsVdirsVSS+1q4g1GezSnJhCsDsPgQvyDO7fOlBkS&#xA;WiWQiRCtd6zJZs8Zt5LgWyI11OpVQAw+1x7natBhtlLJXS6Xy6yI5JCIGa1gkEU1wCvwsSAaL1IB&#xA;YVxtTk8tmh5gtBJFHIrIz+rzr+wYSQQ3z4mmNr4oRB1FFgtJnjZFuii70+AupK8vp2xtlx7A96Xz&#xA;+YUl06SS1DLM0UzqSB8AiAoxB8eS0+eC2s5rjsiF1pv34ntWt5IkWRVkdFDIxoDyJ4r71OG2Xic7&#xA;CmmuyTRwtBbh2ec28gEilQwTn8LLUNUY2gZb5Dqj7i+it54opRxWVXYSH7IMYDEH/Y1P0Y22GVFA&#xA;jXmeMyxWcjxxxrNOeSgqrDkKA/aPHemNtfi+SI/S8HpXEqqxW3dEPT4uYUgj/g8bZeIN/JHYWx2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KoK+1e0tKqx5y/77Xr9PhgJYSyAJW/mecn4IVA8GJJ/CmDiaTnKP&#xA;0nUrq9LF4Qsa/wC7AT18KHCC2Y5mSZYW12KuxV2KoW+1CGz9P1NzI3GngO7fRgJYSmAisLNDvp9r&#xA;I9wzpy+tIqTKehCVp/xLBTEwG/mp/oq29CaFmdhPGsUjM1WKoCoNfHfGkeGKpbJo1rJM0heQRyOJ&#xA;JbcNSNnFKMRSvYd8aQcYtSvNH0opcy3AKrcMjStXoVNBTwqTv88SESxx3vqjLyzgu7V7aYH03pXj&#xA;sRQ1BHyIwkM5RBFFDto1h/pLcSouYhFJQ9EVePw+GwGCmPhjfzdcWFjqSCfm1JUT05IzQgK3NWG3&#xA;WuNWpgJbqaaVZsrwJcTGWOYTvJzrIJCgXqR3XGkDGOVqmsacb+2jt/2fVRnYmhCD7VPcjb6cSE5I&#xA;cQpu50e2nkZ+ckQkUJMkTcVkVdgGFPDbamNLLGCsm0GzlnaXnKiuUZ4UfjGWjACkr9GNKcQJTHC2&#xA;OxV2KuxV2KuxV2KuxV2KuxV2KqF99bNswtaesdgSaUHiPfEsZXWzG/0HqrMeUW5O7F1/rkKcbwpI&#xA;208tGoa6kFP99p3+ZOGmccPenDvbWVtU0jhjFAB+oZJuJEQx+78wXcrFYP3Mfam7H6f6ZG3HllJ5&#xA;J/YRzR2kazMWlpVyxqanen0ZIORAGt0t1rWGgY21uaS/7sf+WvYe+AlryZK2Ca2xZraJm3YopYnr&#xA;WmFtjyY/5mLfXYx+yIwR8yxrkZOPm5sihDCFA32gor86ZJyByXYpdirsVY5qCTyS3KSi5a59ZPQS&#xA;MOYfRBUjoOHjWu9ciXGne/O15N39crW4+v8A1qgFJPQ+r8/+RfHh9NcU731u/sbtrS8WWzuHkuHa&#xA;aWWO5jdmKCMh+NVPQbCmKxidjuiYoI4fMD/DIqPBGIOPqenVeQKmnwCg6A/rw9WQFT+ChOl+mryy&#xA;gP8AUTLD6ojBDseAAO3VFb7QGDqgg8V9Gora/R7e6WWdp5LidHidmMYj/ecKr2HwrQ+/yxQInY78&#xA;z+lQto7yYRRwyXSXMkMgv3l9QKsnH4Spb4R+86cO2KIgnld9V0EutzzxtIsscV86VXdfREBBf/V9&#xA;Shx3UGZPv+ymR5JyXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxvXJ5rq9+rRKzrDtxUE1Y9Tt92R&#xA;LjZSSaCJ0nQ2jdbi6A5rukXWh8TiAyx4q3KdMwVSx6AVP0ZJvYjZWst/e77hm5zN4Amp+/IBw4x4&#xA;iy8AAUHQZNzELd6dDdTQSv8A7pNafzDw+/BTCUASisLN2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KtLw3406708cVbxVpqcTXpQ1xVC6X9Q+rD6nTh+1/NX/KwB&#xA;hCq2ReFm7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:278F67DCF049E3118002E1D25F054EEC</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:288F67DCF049E3118002E1D25F054EEC</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fc0d6c9b-212c-884b-a0fd-63c7afeb4032</stRef:instanceID>
            <stRef:documentID>uuid:B178EACBA905E311BCA78DC7C282B9F7</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5080.000000</stDim:w>
            <stDim:h>5080.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>True</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>0</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>193</xapG:red>
                           <xapG:green>39</xapG:green>
                           <xapG:blue>45</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>237</xapG:red>
                           <xapG:green>28</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>241</xapG:red>
                           <xapG:green>90</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>247</xapG:red>
                           <xapG:green>147</xapG:green>
                           <xapG:blue>30</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>251</xapG:red>
                           <xapG:green>176</xapG:green>
                           <xapG:blue>59</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>252</xapG:red>
                           <xapG:green>238</xapG:green>
                           <xapG:blue>33</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>217</xapG:red>
                           <xapG:green>224</xapG:green>
                           <xapG:blue>33</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>140</xapG:red>
                           <xapG:green>198</xapG:green>
                           <xapG:blue>63</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>57</xapG:red>
                           <xapG:green>181</xapG:green>
                           <xapG:blue>74</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>146</xapG:green>
                           <xapG:blue>69</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>104</xapG:green>
                           <xapG:blue>55</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>34</xapG:red>
                           <xapG:green>181</xapG:green>
                           <xapG:blue>115</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>169</xapG:green>
                           <xapG:blue>157</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>41</xapG:red>
                           <xapG:green>171</xapG:green>
                           <xapG:blue>226</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>113</xapG:green>
                           <xapG:blue>188</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>46</xapG:red>
                           <xapG:green>49</xapG:green>
                           <xapG:blue>146</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>27</xapG:red>
                           <xapG:green>20</xapG:green>
                           <xapG:blue>100</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>102</xapG:red>
                           <xapG:green>45</xapG:green>
                           <xapG:blue>145</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>147</xapG:red>
                           <xapG:green>39</xapG:green>
                           <xapG:blue>143</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>158</xapG:red>
                           <xapG:green>0</xapG:green>
                           <xapG:blue>93</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>212</xapG:red>
                           <xapG:green>20</xapG:green>
                           <xapG:blue>90</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>237</xapG:red>
                           <xapG:green>30</xapG:green>
                           <xapG:blue>121</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>199</xapG:red>
                           <xapG:green>178</xapG:green>
                           <xapG:blue>153</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>153</xapG:red>
                           <xapG:green>134</xapG:green>
                           <xapG:blue>117</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>115</xapG:red>
                           <xapG:green>99</xapG:green>
                           <xapG:blue>87</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>83</xapG:red>
                           <xapG:green>71</xapG:green>
                           <xapG:blue>65</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>198</xapG:red>
                           <xapG:green>156</xapG:green>
                           <xapG:blue>109</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>166</xapG:red>
                           <xapG:green>124</xapG:green>
                           <xapG:blue>82</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>140</xapG:red>
                           <xapG:green>98</xapG:green>
                           <xapG:blue>57</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>117</xapG:red>
                           <xapG:green>76</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>96</xapG:red>
                           <xapG:green>56</xapG:green>
                           <xapG:blue>19</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>66</xapG:red>
                           <xapG:green>33</xapG:green>
                           <xapG:blue>11</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Web Color Group</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>236</xapG:red>
                           <xapG:green>28</xapG:green>
                           <xapG:blue>36</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>0</xapG:red>
                           <xapG:green>169</xapG:green>
                           <xapG:blue>157</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>102</xapG:red>
                           <xapG:green>45</xapG:green>
                           <xapG:blue>145</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>139</xapG:red>
                           <xapG:green>146</xapG:green>
                           <xapG:blue>152</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Grayscale</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -672 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 672 li
872 672 li
872 0 li
cp
clp
[1 0 0 1 0 0 ]ct
103.761 123.138 mo
94.455 117.009 88.38 107.73 86.094 97.569 cv
85.392 94.437 85.05 91.224 85.077 87.993 cv
85.122 84.069 85.716 80.136 86.895 76.302 cv
91.368 79.245 95.094 82.908 98.01 87.057 cv
101.232 91.638 103.464 96.795 104.625 102.186 cv
106.11 109.026 105.885 116.235 103.761 123.138 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
0.25098 0.0156863 0.227451 0 cmyk
f
100.319 234.919 mo
100.203 234.919 100.088 234.919 99.972 234.918 cv
96.147 234.873 92.295 234.297 88.551 233.145 cv
91.422 228.771 95.013 225.126 99.063 222.273 cv
103.536 219.132 108.576 216.954 113.841 215.811 cv
116.673 215.2 119.57 214.888 122.483 214.888 cv
126.438 214.888 130.421 215.465 134.298 216.657 cv
128.313 225.756 119.25 231.687 109.332 233.919 cv
106.384 234.578 103.361 234.919 100.319 234.919 cv
f
120.609 97.56 mo
115.389 89.865 113.679 80.784 115.155 72.243 cv
115.614 69.606 116.37 67.014 117.423 64.539 cv
118.71 61.542 120.42 58.698 122.553 56.115 cv
125.055 59.805 126.756 63.828 127.683 67.95 cv
128.7 72.495 128.772 77.184 127.953 81.702 cv
126.909 87.444 124.434 92.925 120.609 97.56 cv
f
209.646 246.861 mo
207.81 244.152 206.559 241.218 205.884 238.194 cv
205.146 234.864 205.092 231.435 205.686 228.114 cv
206.451 223.911 208.269 219.897 211.068 216.504 cv
214.893 222.138 216.153 228.789 215.064 235.053 cv
214.731 236.979 214.173 238.878 213.399 240.687 cv
212.463 242.892 211.212 244.971 209.646 246.861 cv
f
90.3161 207.791 mo
87.6889 207.791 85.0682 207.565 82.485 207.117 cv
79.002 206.514 75.6 205.524 72.333 204.12 cv
68.373 202.437 64.62 200.178 61.218 197.37 cv
66.096 194.067 71.388 191.817 76.824 190.602 cv
80.104 189.864 83.4348 189.503 86.7552 189.503 cv
89.5118 189.503 92.2613 189.752 94.968 190.242 cv
102.528 191.619 109.755 194.877 115.875 199.926 cv
108.057 205.233 99.149 207.791 90.3161 207.791 cv
f
214.713 88.8812 mo
212.631 88.8812 210.535 88.5765 208.494 87.948 cv
211.635 83.169 216.405 80.055 221.616 78.885 cv
223.15 78.5335 224.717 78.3617 226.294 78.3617 cv
226.372 78.3617 226.451 78.3621 226.53 78.363 cv
228.546 78.381 230.562 78.687 232.533 79.29 cv
231.021 81.585 229.14 83.502 227.007 84.996 cv
224.658 86.652 222.012 87.795 219.24 88.398 cv
217.756 88.7177 216.238 88.8812 214.713 88.8812 cv
f
95.391 180.19 mo
85.2564 180.19 75.5285 177.252 67.239 172.008 cv
63.792 169.83 60.588 167.256 57.717 164.322 cv
54.243 160.767 51.237 156.699 48.843 152.19 cv
52.434 151.452 56.0222 151.094 59.5613 151.094 cv
62.5861 151.094 65.5751 151.356 68.499 151.866 cv
75.501 153.081 82.134 155.718 88.02 159.516 cv
95.49 164.322 101.763 171 106.056 179.1 cv
102.48 179.836 98.9115 180.19 95.391 180.19 cv
f
99.171 152.145 mo
86.535 149.724 75.96 142.506 69.048 132.687 cv
66.915 129.663 65.124 126.396 63.729 122.931 cv
62.046 118.737 60.939 114.273 60.498 109.665 cv
66.564 110.826 72.162 113.085 77.112 116.226 cv
82.557 119.682 87.21 124.2 90.846 129.429 cv
95.436 136.062 98.379 143.856 99.171 152.145 cv
f
169.587 259.281 mo
168.795 255.438 168.768 251.604 169.407 247.941 cv
170.109 243.909 171.621 240.084 173.817 236.682 cv
176.589 232.371 180.441 228.753 185.112 226.278 cv
186.759 234.27 185.103 242.226 181.026 248.67 cv
179.757 250.659 178.281 252.504 176.589 254.16 cv
174.537 256.167 172.188 257.904 169.587 259.281 cv
f
126.873 254.718 mo
127.737 250.218 129.42 246.078 131.742 242.415 cv
134.298 238.374 137.646 234.927 141.516 232.245 cv
146.439 228.834 152.208 226.656 158.337 226.071 cv
156.546 235.431 151.209 243.261 143.937 248.382 cv
141.696 249.966 139.266 251.298 136.71 252.324 cv
133.596 253.575 130.293 254.394 126.873 254.718 cv
f
147.168 81.513 mo
145.602 73.872 147.186 66.267 151.074 60.111 cv
152.28 58.212 153.702 56.448 155.313 54.864 cv
157.275 52.947 159.516 51.291 162 49.977 cv
162.756 53.649 162.792 57.312 162.18 60.804 cv
161.505 64.665 160.056 68.319 157.968 71.568 cv
155.313 75.681 151.632 79.146 147.168 81.513 cv
f
179.208 77.337 mo
180.36 71.325 183.798 66.285 188.478 62.982 cv
189.918 61.965 191.484 61.11 193.131 60.444 cv
195.129 59.643 197.253 59.121 199.449 58.905 cv
198.9 61.803 197.82 64.467 196.326 66.825 cv
194.679 69.426 192.528 71.64 190.035 73.368 cv
186.867 75.564 183.15 76.968 179.208 77.337 cv
f
507.459 184.708 mo
507.459 184.43 li
507.459 184.569 li
507.459 184.708 li
cp
0.396078 0.0392157 0.360784 0 cmyk
f
507.459 184.708 mo
507.459 184.43 li
507.459 184.569 li
507.459 184.708 li
cp
f
158.339 187.478 mo
158.339 192.938 li
132.389 192.938 li
132.389 187.478 li
140.127 185.654 li
140.127 118.639 li
132.389 116.816 li
132.389 111.816 li
158.339 111.364 li
158.339 116.816 li
149.687 118.639 li
149.687 148.668 li
184.762 148.668 li
184.762 118.639 li
176.113 116.816 li
176.113 111.816 li
202.063 111.364 li
202.063 116.816 li
194.324 118.639 li
194.324 185.654 li
202.063 187.478 li
202.063 192.938 li
176.113 192.938 li
176.113 187.478 li
184.762 185.654 li
184.762 155.952 li
149.687 155.952 li
149.687 185.654 li
158.339 187.478 li
cp
f
383.58 184.662 mo
383.535 185.193 383.22 185.643 382.761 185.877 cv
383.58 185.643 li
383.58 184.662 li
f
393.714 185.886 mo
393.3 185.643 393.012 185.22 392.967 184.716 cv
392.967 185.643 li
393.714 185.886 li
f
220.293 162.657 mo
220.59 158.904 221.814 155.826 223.938 153.423 cv
226.071 151.011 228.915 149.805 232.479 149.805 cv
236.106 149.805 238.725 150.993 240.363 153.369 cv
241.983 155.754 242.793 158.85 242.793 162.657 cv
220.293 162.657 li
252.747 164.529 mo
252.747 149.841 246.168 142.497 233.037 142.497 cv
229.662 142.497 226.566 143.145 223.749 144.459 cv
220.941 145.773 218.52 147.6 216.486 149.949 cv
214.461 152.289 212.868 155.097 211.743 158.337 cv
210.627 161.595 210.06 165.159 210.06 169.038 cv
210.06 176.796 211.968 182.907 215.784 187.371 cv
219.591 191.844 225.189 194.085 232.569 194.085 cv
235.386 194.085 237.996 193.689 240.408 192.906 cv
242.811 192.123 244.917 191.25 246.681 190.278 cv
248.472 189.315 250.425 187.983 252.549 186.291 cv
249.264 181.422 li
247.383 182.637 li
246.699 183.078 245.862 183.528 244.854 183.996 cv
243.864 184.464 242.748 184.887 241.524 185.265 cv
240.3 185.643 239.004 185.949 237.627 186.201 cv
236.259 186.453 234.882 186.579 233.505 186.579 cv
229.383 186.579 226.08 185.04 223.614 181.98 cv
221.139 178.92 219.906 174.825 219.906 169.695 cv
252.27 169.506 li
252.747 164.529 li
f
232.569 194.085 mo
225.189 194.085 219.591 191.844 215.784 187.371 cv
211.968 182.907 210.06 176.796 210.06 169.038 cv
210.06 165.159 210.627 161.595 211.743 158.337 cv
212.868 155.097 214.461 152.289 216.486 149.949 cv
218.52 147.6 220.941 145.773 223.749 144.459 cv
226.566 143.145 229.662 142.497 233.037 142.497 cv
246.168 142.497 252.747 149.841 252.747 164.529 cv
252.27 169.506 li
219.906 169.695 li
219.906 169.695 li
219.906 174.825 221.139 178.92 223.614 181.98 cv
226.08 185.04 229.383 186.579 233.505 186.579 cv
234.882 186.579 236.259 186.453 237.627 186.201 cv
239.004 185.949 240.3 185.643 241.524 185.265 cv
242.748 184.887 243.864 184.464 244.854 183.996 cv
245.862 183.528 246.699 183.078 247.383 182.637 cv
249.264 181.422 li
252.549 186.291 li
250.425 187.983 248.472 189.315 246.681 190.278 cv
244.917 191.25 242.811 192.123 240.408 192.906 cv
237.996 193.689 235.386 194.085 232.569 194.085 cv
220.293 162.657 mo
220.293 162.657 li
242.793 162.657 li
242.793 162.657 li
242.793 158.85 241.983 155.754 240.363 153.369 cv
238.725 150.993 236.106 149.805 232.479 149.805 cv
228.915 149.805 226.071 151.011 223.938 153.423 cv
221.814 155.826 220.59 158.904 220.293 162.657 cv
220.293 162.657 li
f
355.113 181.89 mo
353.016 185.013 349.686 186.579 345.123 186.579 cv
336.366 186.579 331.992 180.477 331.992 168.282 cv
331.992 156.087 336.528 149.994 345.591 149.994 cv
354.024 149.994 358.254 155.943 358.254 167.814 cv
358.254 174.069 357.201 178.758 355.113 181.89 cv
345.969 142.497 mo
342.468 142.497 339.255 143.118 336.348 144.369 cv
333.441 145.62 330.921 147.402 328.797 149.715 cv
326.673 152.028 325.035 154.827 323.874 158.112 cv
322.722 161.397 322.146 165.033 322.146 169.038 cv
322.146 177.228 324.09 183.456 328.005 187.704 cv
331.911 191.952 337.428 194.085 344.556 194.085 cv
348.12 194.085 351.36 193.428 354.267 192.114 cv
357.174 190.8 359.649 188.964 361.674 186.624 cv
363.708 184.284 365.292 181.494 366.408 178.272 cv
367.542 175.059 368.1 171.504 368.1 167.625 cv
368.1 159.75 366.165 153.594 362.286 149.148 cv
358.407 144.711 352.971 142.497 345.969 142.497 cv
f
344.556 194.085 mo
337.428 194.085 331.911 191.952 328.005 187.704 cv
324.09 183.456 322.146 177.228 322.146 169.038 cv
322.146 165.033 322.722 161.397 323.874 158.112 cv
325.035 154.827 326.673 152.028 328.797 149.715 cv
330.921 147.402 333.441 145.62 336.348 144.369 cv
339.255 143.118 342.468 142.497 345.969 142.497 cv
352.971 142.497 358.407 144.711 362.286 149.148 cv
366.165 153.594 368.1 159.75 368.1 167.625 cv
368.1 171.504 367.542 175.059 366.408 178.272 cv
365.292 181.494 363.708 184.284 361.674 186.624 cv
359.649 188.964 357.174 190.8 354.267 192.114 cv
351.36 193.428 348.12 194.085 344.556 194.085 cv
331.992 168.282 mo
331.992 168.282 li
331.992 180.477 336.366 186.579 345.123 186.579 cv
349.686 186.579 353.016 185.013 355.113 181.89 cv
357.201 178.758 358.254 174.069 358.254 167.814 cv
358.254 167.814 li
358.254 167.814 li
358.254 155.943 354.024 149.994 345.591 149.994 cv
336.528 149.994 331.992 156.087 331.992 168.282 cv
331.992 168.282 li
f
393.714 185.886 mo
392.967 185.643 li
392.967 184.716 li
392.931 184.572 li
392.967 184.419 li
392.967 143.433 li
375.615 143.901 li
375.615 149.058 li
381.933 150.543 li
382.023 150.525 li
382.311 150.525 382.563 150.624 382.806 150.75 cv
383.58 150.939 li
383.58 151.794 li
383.616 151.911 383.661 152.028 383.661 152.163 cv
383.661 152.289 383.616 152.406 383.58 152.523 cv
383.58 184.419 li
383.607 184.536 li
383.58 184.662 li
383.58 185.643 li
382.761 185.877 li
382.635 185.94 382.5 185.976 382.347 186.003 cv
375.615 187.983 li
375.615 193.14 li
399.996 193.14 li
399.996 187.983 li
394.344 186.102 li
394.11 186.075 393.903 186.003 393.714 185.886 cv
f
399.996 193.14 mo
375.615 193.14 li
375.615 187.983 li
382.347 186.003 li
382.5 185.976 382.635 185.94 382.761 185.877 cv
383.58 185.643 li
383.58 184.662 li
383.607 184.536 li
383.58 184.419 li
383.58 152.523 li
383.616 152.406 383.661 152.289 383.661 152.163 cv
383.661 152.163 li
383.661 152.163 li
383.661 152.028 383.616 151.911 383.58 151.794 cv
383.58 150.939 li
382.806 150.75 li
382.563 150.624 382.311 150.525 382.023 150.525 cv
381.933 150.543 li
375.615 149.058 li
375.615 143.901 li
392.967 143.433 li
392.967 184.419 li
392.931 184.572 li
392.967 184.716 li
392.967 185.643 li
393.714 185.886 li
393.903 186.003 394.11 186.075 394.344 186.102 cv
399.996 187.983 li
399.996 193.14 li
f
277.983 185.967 mo
277.515 185.742 277.191 185.292 277.128 184.752 cv
277.128 185.643 li
277.983 185.967 li
f
309.312 185.895 mo
308.871 185.643 308.574 185.193 308.538 184.662 cv
308.538 185.643 li
309.312 185.895 li
f
277.128 184.752 mo
277.128 184.383 li
277.083 184.572 li
277.128 184.752 li
f
277.128 184.752 mo
277.128 184.752 li
277.083 184.572 li
277.128 184.383 li
277.128 184.752 li
f
267.741 184.545 mo
267.741 185.103 267.435 185.58 266.994 185.859 cv
267.741 185.643 li
267.741 184.545 li
f
266.112 186.138 mo
266.364 186.129 266.589 186.048 266.796 185.94 cv
266.913 185.886 li
266.067 186.129 li
266.094 186.138 li
266.112 186.138 li
f
266.112 186.138 mo
266.094 186.138 li
266.067 186.129 li
266.913 185.886 li
266.796 185.94 li
266.589 186.048 266.364 186.129 266.112 186.138 cv
f
309.906 186.093 mo
309.69 186.066 309.492 186.003 309.312 185.895 cv
308.538 185.643 li
308.538 184.662 li
308.52 184.572 li
308.538 184.482 li
308.538 159.381 li
308.538 154.062 307.305 149.922 304.839 146.943 cv
302.364 143.973 298.602 142.497 293.535 142.497 cv
291.537 142.497 289.611 142.794 287.766 143.379 cv
285.921 143.973 284.238 144.684 282.708 145.494 cv
281.169 146.313 279.837 147.15 278.721 148.023 cv
277.587 148.905 276.714 149.589 276.093 150.093 cv
275.247 143.433 li
259.776 143.901 li
259.776 149.058 li
266.067 150.543 li
266.112 150.534 li
266.382 150.534 266.625 150.606 266.841 150.723 cv
267.741 150.939 li
267.741 152.163 li
267.741 183.33 li
267.741 184.545 li
267.741 185.643 li
266.994 185.859 li
266.913 185.886 li
266.796 185.94 li
266.589 186.048 266.364 186.129 266.112 186.138 cv
266.094 186.138 li
266.067 186.129 li
266.058 186.138 li
265.122 186.408 li
259.776 187.983 li
259.776 193.14 li
283.221 193.14 li
283.221 187.983 li
278.127 186.021 li
277.983 185.967 li
277.128 185.643 li
277.128 184.752 li
277.083 184.572 li
277.128 184.383 li
277.128 157.968 li
278.721 156.087 li
279.279 155.466 279.99 154.827 280.827 154.17 cv
281.673 153.513 282.645 152.901 283.734 152.343 cv
284.823 151.776 286.02 151.326 287.298 150.984 cv
288.585 150.633 289.881 150.462 291.195 150.462 cv
293.877 150.462 295.875 151.263 297.189 152.856 cv
298.503 154.449 299.16 156.942 299.16 160.317 cv
299.16 183.249 li
299.754 183.627 300.159 184.284 300.159 185.04 cv
300.159 185.895 299.637 186.633 298.899 186.957 cv
298.818 186.993 li
298.575 187.083 298.323 187.146 298.044 187.146 cv
297.504 187.146 297.018 186.939 296.649 186.606 cv
293.067 187.983 li
293.067 193.14 li
315.576 193.14 li
315.576 187.983 li
309.906 186.093 li
f
315.576 193.14 mo
293.067 193.14 li
293.067 187.983 li
296.649 186.606 li
297.018 186.939 297.504 187.146 298.044 187.146 cv
298.323 187.146 298.575 187.083 298.818 186.993 cv
298.899 186.957 li
299.637 186.633 300.159 185.895 300.159 185.04 cv
300.159 185.04 li
300.159 185.04 li
300.159 184.284 299.754 183.627 299.16 183.249 cv
299.16 160.317 li
299.16 160.317 li
299.16 156.942 298.503 154.449 297.189 152.856 cv
295.875 151.263 293.877 150.462 291.195 150.462 cv
289.881 150.462 288.585 150.633 287.298 150.984 cv
286.02 151.326 284.823 151.776 283.734 152.343 cv
282.645 152.901 281.673 153.513 280.827 154.17 cv
279.99 154.827 279.279 155.466 278.721 156.087 cv
277.128 157.968 li
277.128 184.383 li
277.083 184.572 li
277.128 184.752 li
277.128 185.643 li
277.983 185.967 li
278.127 186.021 li
283.221 187.983 li
283.221 193.14 li
259.776 193.14 li
259.776 187.983 li
265.122 186.408 li
266.058 186.138 li
266.067 186.129 li
266.094 186.138 li
266.112 186.138 li
266.364 186.129 266.589 186.048 266.796 185.94 cv
266.913 185.886 li
266.994 185.859 li
267.741 185.643 li
267.741 184.545 li
267.741 183.33 li
267.741 152.163 li
267.741 150.939 li
266.841 150.723 li
266.625 150.606 266.382 150.534 266.112 150.534 cv
266.067 150.543 li
259.776 149.058 li
259.776 143.901 li
275.247 143.433 li
276.093 150.093 li
276.714 149.589 277.587 148.905 278.721 148.023 cv
279.837 147.15 281.169 146.313 282.708 145.494 cv
284.238 144.684 285.921 143.973 287.766 143.379 cv
289.611 142.794 291.537 142.497 293.535 142.497 cv
298.602 142.497 302.364 143.973 304.839 146.943 cv
307.305 149.922 308.538 154.062 308.538 159.381 cv
308.538 184.482 li
308.52 184.572 li
308.538 184.662 li
308.538 185.643 li
309.312 185.895 li
309.492 186.003 309.69 186.066 309.906 186.093 cv
315.576 187.983 li
315.576 193.14 li
f
298.818 186.992 mo
298.899 186.961 li
299.639 186.632 300.158 185.898 300.158 185.036 cv
300.158 184.282 299.758 183.625 299.161 183.25 cv
299.161 184.538 li
299.161 185.195 298.765 185.756 298.203 186.007 cv
298.198 186.008 li
298.134 186.034 li
298.131 186.035 li
296.645 186.606 li
297.017 186.94 297.505 187.148 298.047 187.148 cv
298.321 187.148 298.578 187.087 298.818 186.992 cv
cp
f
308.538 184.662 mo
308.538 184.482 li
308.52 184.572 li
308.538 184.662 li
f
308.538 184.662 mo
308.538 184.662 li
308.52 184.572 li
308.538 184.482 li
308.538 184.662 li
f
383.58 184.419 mo
383.58 184.662 li
383.607 184.536 li
383.58 184.419 li
f
383.58 184.662 mo
383.58 184.419 li
383.607 184.536 li
383.58 184.662 li
f
392.967 184.716 mo
392.967 184.419 li
392.931 184.572 li
392.967 184.716 li
f
392.967 184.716 mo
392.967 184.716 li
392.931 184.572 li
392.967 184.419 li
392.967 184.716 li
f
441.267 179.54 mo
440.329 180.983 438.854 182.513 436.854 184.139 cv
434.733 185.765 432.131 186.577 429.069 186.577 cv
425.07 186.577 422.115 184.982 420.206 181.792 cv
418.3 178.604 417.345 174.258 417.345 168.753 cv
417.345 156.251 422.039 149.996 431.412 149.996 cv
435.794 149.996 439.076 150.621 441.267 151.874 cv
441.267 179.54 li
cp
451.176 186.508 mo
450.235 186.299 449.647 185.394 449.831 184.478 cv
449.848 184.408 li
449.962 183.948 450.258 183.579 450.641 183.351 cv
450.641 120.917 li
433.291 121.387 li
433.291 126.547 li
441.267 128.424 li
441.267 143.994 li
438.39 142.993 435.42 142.493 432.352 142.493 cv
424.161 142.493 417.972 144.947 413.781 149.854 cv
409.59 154.768 407.498 161.315 407.498 169.505 cv
407.498 177.196 409.14 183.215 412.421 187.562 cv
415.703 191.909 420.374 194.082 426.443 194.082 cv
432.573 194.082 437.732 191.986 441.923 187.794 cv
442.672 193.142 li
458.617 192.673 li
458.617 187.512 li
452.68 186.117 li
452.276 186.459 451.737 186.636 451.176 186.508 cv
cp
f
449.847 184.41 mo
449.829 184.482 li
449.649 185.391 450.234 186.3 451.179 186.507 cv
451.737 186.633 452.277 186.462 452.682 186.12 cv
451.71 185.886 li
451.701 185.886 li
451.692 185.886 li
451.143 185.76 450.756 185.346 450.639 184.842 cv
450.639 184.599 li
450.639 184.572 li
450.639 184.545 li
450.639 184.23 li
450.639 183.348 li
450.261 183.582 449.964 183.951 449.847 184.41 cv
f
450.639 184.599 mo
450.639 184.545 li
450.639 184.572 li
450.639 184.599 li
f
450.639 184.599 mo
450.639 184.545 li
450.639 184.572 li
450.639 184.599 li
0.243137 0.0196078 0.219608 0 cmyk
f
450.639 184.599 mo
450.639 184.545 li
450.639 184.572 li
450.639 184.599 li
f
382.08 131.566 mo
383.079 130.536 383.583 129.172 383.583 127.485 cv
383.583 125.86 383.125 124.516 382.224 123.452 cv
381.316 122.391 380.079 121.856 378.516 121.856 cv
376.958 121.856 375.69 122.391 374.721 123.452 cv
373.753 124.516 373.263 125.891 373.263 127.577 cv
373.263 129.268 373.706 130.612 374.578 131.611 cv
375.515 132.61 376.738 133.111 378.24 133.111 cv
379.797 133.111 381.081 132.597 382.08 131.566 cv
cp
0.396078 0.0392157 0.360784 0 cmyk
f
396.811 121.856 mo
395.248 121.856 393.981 122.391 393.01 123.452 cv
392.042 124.516 391.551 125.891 391.551 127.577 cv
391.551 129.268 391.996 130.612 392.873 131.611 cv
393.804 132.61 395.026 133.111 396.53 133.111 cv
398.087 133.111 399.37 132.597 400.377 131.566 cv
401.369 130.536 401.873 129.172 401.873 127.485 cv
401.873 125.86 401.423 124.516 400.513 123.452 cv
399.605 122.391 398.368 121.856 396.811 121.856 cv
cp
f
496.729 173.302 mo
493.1 181.905 486.623 186.517 482.466 186.517 cv
472.709 186.517 470.865 179.083 470.865 168.193 cv
470.865 157.303 473.012 149.778 482.466 149.778 cv
486.891 149.778 490.806 151.362 492.908 155.664 cv
494.884 159.707 496.087 166.233 496.915 172.847 cv
496.853 172.999 496.793 173.152 496.729 173.302 cv
cp
515.033 187.981 mo
515.033 187.981 511.225 188.832 506.407 184.015 cv
505.35 182.957 504.786 178.219 503.942 172.296 cv
509.154 159.639 511.804 145.253 511.804 145.253 cv
503.064 145.253 li
503.064 145.253 502.569 150.864 501.188 157.835 cv
500.507 155.349 499.69 152.973 498.689 150.862 cv
495.095 143.291 487.272 142.444 482.466 142.444 cv
470.357 142.444 461.242 151.548 461.242 168.193 cv
461.242 184.838 467.968 194.002 481.348 194.002 cv
487.737 194.002 493.378 190.196 498.014 183.561 cv
498.28 186.577 498.507 189.278 498.743 191.35 cv
498.918 192.883 500.495 193.006 500.495 193.006 cv
515.081 193.006 li
515.033 187.981 li
cp
f
563.919 494.804 mo
563.919 494.528 li
563.919 494.666 li
563.919 494.804 li
cp
f
563.919 494.804 mo
563.919 494.528 li
563.919 494.666 li
563.919 494.804 li
cp
f
216.827 497.556 mo
216.827 502.979 li
191.026 502.979 li
191.026 497.556 li
198.721 495.744 li
198.721 429.188 li
191.026 427.378 li
191.026 422.413 li
216.827 421.964 li
216.827 427.378 li
208.225 429.188 li
208.225 459.013 li
243.096 459.013 li
243.096 429.188 li
234.498 427.378 li
234.498 422.413 li
260.296 421.964 li
260.296 427.378 li
252.603 429.188 li
252.603 495.744 li
260.296 497.556 li
260.296 502.979 li
234.498 502.979 li
234.498 497.556 li
243.096 495.744 li
243.096 466.245 li
208.225 466.245 li
208.225 495.744 li
216.827 497.556 li
cp
f
440.766 494.757 mo
440.721 495.288 440.406 495.738 439.947 495.972 cv
440.766 495.729 li
440.766 494.757 li
f
450.828 495.972 mo
450.423 495.729 450.135 495.315 450.09 494.811 cv
450.09 495.729 li
450.828 495.972 li
f
278.415 472.905 mo
278.721 469.179 279.936 466.119 282.042 463.734 cv
284.157 461.34 286.992 460.143 290.538 460.143 cv
294.138 460.143 296.748 461.322 298.377 463.689 cv
299.988 466.047 300.789 469.116 300.789 472.905 cv
278.415 472.905 li
310.68 474.768 mo
310.68 460.179 304.137 452.88 291.087 452.88 cv
287.73 452.88 284.652 453.528 281.862 454.833 cv
279.072 456.138 276.66 457.956 274.635 460.287 cv
272.619 462.609 271.035 465.399 269.928 468.621 cv
268.812 471.852 268.245 475.389 268.245 479.241 cv
268.245 486.945 270.144 493.011 273.942 497.457 cv
277.722 501.894 283.284 504.108 290.628 504.108 cv
293.427 504.108 296.019 503.721 298.422 502.947 cv
300.807 502.173 302.895 501.3 304.659 500.337 cv
306.432 499.374 308.376 498.06 310.482 496.377 cv
307.224 491.535 li
305.361 492.741 li
304.668 493.182 303.84 493.632 302.832 494.1 cv
301.851 494.559 300.744 494.982 299.529 495.36 cv
298.314 495.729 297.018 496.035 295.659 496.287 cv
294.291 496.539 292.932 496.656 291.564 496.656 cv
287.46 496.656 284.175 495.135 281.727 492.093 cv
279.261 489.051 278.037 484.983 278.037 479.898 cv
310.212 479.709 li
310.68 474.768 li
f
290.628 504.108 mo
283.284 504.108 277.722 501.894 273.942 497.457 cv
270.144 493.011 268.245 486.945 268.245 479.241 cv
268.245 475.389 268.812 471.852 269.928 468.621 cv
271.035 465.399 272.619 462.609 274.635 460.287 cv
276.66 457.956 279.072 456.138 281.862 454.833 cv
284.652 453.528 287.73 452.88 291.087 452.88 cv
304.137 452.88 310.68 460.179 310.68 474.768 cv
310.212 479.709 li
278.037 479.898 li
278.037 479.898 li
278.037 484.983 279.261 489.051 281.727 492.093 cv
284.175 495.135 287.46 496.656 291.564 496.656 cv
292.932 496.656 294.291 496.539 295.659 496.287 cv
297.018 496.035 298.314 495.729 299.529 495.36 cv
300.744 494.982 301.851 494.559 302.832 494.1 cv
303.84 493.632 304.668 493.182 305.361 492.741 cv
307.224 491.535 li
310.482 496.377 li
308.376 498.06 306.432 499.374 304.659 500.337 cv
302.895 501.3 300.807 502.173 298.422 502.947 cv
296.019 503.721 293.427 504.108 290.628 504.108 cv
278.415 472.905 mo
278.415 472.905 li
300.789 472.905 li
300.789 472.905 li
300.789 469.116 299.988 466.047 298.377 463.689 cv
296.748 461.322 294.138 460.143 290.538 460.143 cv
286.992 460.143 284.157 461.34 282.042 463.734 cv
279.936 466.119 278.721 469.179 278.415 472.905 cv
278.415 472.905 li
f
412.461 492.003 mo
410.373 495.108 407.061 496.656 402.525 496.656 cv
393.822 496.656 389.466 490.608 389.466 478.494 cv
389.466 466.38 393.975 460.332 402.993 460.332 cv
411.381 460.332 415.575 466.236 415.575 478.026 cv
415.575 484.236 414.531 488.898 412.461 492.003 cv
403.362 452.88 mo
399.879 452.88 396.693 453.501 393.804 454.743 cv
390.915 455.985 388.404 457.749 386.298 460.053 cv
384.183 462.348 382.554 465.129 381.402 468.387 cv
380.25 471.645 379.683 475.272 379.683 479.241 cv
379.683 487.377 381.618 493.56 385.506 497.781 cv
389.385 502.002 394.875 504.108 401.958 504.108 cv
405.504 504.108 408.726 503.46 411.615 502.155 cv
414.504 500.85 416.97 499.032 418.986 496.71 cv
421.002 494.379 422.577 491.616 423.684 488.421 cv
424.809 485.217 425.376 481.698 425.376 477.837 cv
425.376 470.016 423.441 463.896 419.589 459.495 cv
415.737 455.085 410.328 452.88 403.362 452.88 cv
f
401.958 504.108 mo
394.875 504.108 389.385 502.002 385.506 497.781 cv
381.618 493.56 379.683 487.377 379.683 479.241 cv
379.683 475.272 380.25 471.645 381.402 468.387 cv
382.554 465.129 384.183 462.348 386.298 460.053 cv
388.404 457.749 390.915 455.985 393.804 454.743 cv
396.693 453.501 399.879 452.88 403.362 452.88 cv
410.328 452.88 415.737 455.085 419.589 459.495 cv
423.441 463.896 425.376 470.016 425.376 477.837 cv
425.376 481.698 424.809 485.217 423.684 488.421 cv
422.577 491.616 421.002 494.379 418.986 496.71 cv
416.97 499.032 414.504 500.85 411.615 502.155 cv
408.726 503.46 405.504 504.108 401.958 504.108 cv
389.466 478.494 mo
389.466 478.494 li
389.466 490.608 393.822 496.656 402.525 496.656 cv
407.061 496.656 410.373 495.108 412.461 492.003 cv
414.531 488.898 415.575 484.236 415.575 478.026 cv
415.575 478.026 li
415.575 478.026 li
415.575 466.236 411.381 460.332 402.993 460.332 cv
393.975 460.332 389.466 466.38 389.466 478.494 cv
389.466 478.494 li
f
450.828 495.972 mo
450.09 495.729 li
450.09 494.811 li
450.063 494.667 li
450.09 494.523 li
450.09 453.816 li
432.837 454.275 li
432.837 459.396 li
439.119 460.881 li
439.209 460.854 li
439.497 460.854 439.749 460.953 439.983 461.079 cv
440.766 461.268 li
440.766 462.114 li
440.793 462.24 440.838 462.348 440.838 462.483 cv
440.838 462.609 440.793 462.726 440.766 462.843 cv
440.766 494.514 li
440.784 494.64 li
440.766 494.757 li
440.766 495.729 li
439.947 495.972 li
439.821 496.026 439.677 496.062 439.533 496.089 cv
432.837 498.06 li
432.837 503.181 li
457.083 503.181 li
457.083 498.06 li
451.458 496.188 li
451.224 496.161 451.017 496.089 450.828 495.972 cv
f
457.083 503.181 mo
432.837 503.181 li
432.837 498.06 li
439.533 496.089 li
439.677 496.062 439.821 496.026 439.947 495.972 cv
440.766 495.729 li
440.766 494.757 li
440.784 494.64 li
440.766 494.514 li
440.766 462.843 li
440.793 462.726 440.838 462.609 440.838 462.483 cv
440.838 462.483 li
440.838 462.483 li
440.838 462.348 440.793 462.24 440.766 462.114 cv
440.766 461.268 li
439.983 461.079 li
439.749 460.953 439.497 460.854 439.209 460.854 cv
439.119 460.881 li
432.837 459.396 li
432.837 454.275 li
450.09 453.816 li
450.09 494.523 li
450.063 494.667 li
450.09 494.811 li
450.09 495.729 li
450.828 495.972 li
451.017 496.089 451.224 496.161 451.458 496.188 cv
457.083 498.06 li
457.083 503.181 li
f
335.781 496.053 mo
335.313 495.837 334.989 495.387 334.926 494.847 cv
334.926 495.729 li
335.781 496.053 li
f
366.921 495.981 mo
366.489 495.729 366.192 495.288 366.156 494.757 cv
366.156 495.729 li
366.921 495.981 li
f
334.926 494.847 mo
334.926 494.487 li
334.881 494.667 li
334.926 494.847 li
f
334.926 494.847 mo
334.926 494.847 li
334.881 494.667 li
334.926 494.487 li
334.926 494.847 li
f
325.593 494.64 mo
325.593 495.198 325.287 495.666 324.846 495.945 cv
325.593 495.729 li
325.593 494.64 li
f
323.982 496.224 mo
324.225 496.215 324.45 496.134 324.657 496.026 cv
324.765 495.972 li
323.928 496.215 li
323.955 496.224 li
323.982 496.224 li
f
323.982 496.224 mo
323.955 496.224 li
323.928 496.215 li
324.765 495.972 li
324.657 496.026 li
324.45 496.134 324.225 496.215 323.982 496.224 cv
f
367.515 496.179 mo
367.299 496.152 367.101 496.089 366.921 495.981 cv
366.156 495.729 li
366.156 494.757 li
366.138 494.667 li
366.156 494.577 li
366.156 469.647 li
366.156 464.364 364.932 460.251 362.475 457.299 cv
360.018 454.356 356.274 452.88 351.234 452.88 cv
349.245 452.88 347.337 453.177 345.501 453.762 cv
343.674 454.356 341.991 455.058 340.47 455.859 cv
338.949 456.669 337.626 457.506 336.51 458.379 cv
335.385 459.243 334.512 459.927 333.9 460.422 cv
333.054 453.816 li
317.673 454.275 li
317.673 459.396 li
323.928 460.872 li
323.982 460.863 li
324.243 460.863 324.477 460.944 324.702 461.052 cv
325.593 461.268 li
325.593 462.483 li
325.593 493.434 li
325.593 494.64 li
325.593 495.729 li
324.846 495.945 li
324.765 495.972 li
324.657 496.026 li
324.45 496.134 324.225 496.215 323.982 496.224 cv
323.955 496.224 li
323.928 496.215 li
323.919 496.224 li
322.992 496.494 li
317.673 498.06 li
317.673 503.181 li
340.983 503.181 li
340.983 498.06 li
335.916 496.107 li
335.781 496.053 li
334.926 495.729 li
334.926 494.847 li
334.881 494.667 li
334.926 494.487 li
334.926 468.243 li
336.51 466.38 li
337.059 465.768 337.77 465.129 338.607 464.481 cv
339.444 463.824 340.407 463.221 341.496 462.654 cv
342.576 462.105 343.764 461.646 345.042 461.313 cv
346.311 460.971 347.607 460.8 348.903 460.8 cv
351.576 460.8 353.565 461.592 354.87 463.176 cv
356.175 464.751 356.832 467.226 356.832 470.574 cv
356.832 493.353 li
357.426 493.731 357.822 494.379 357.822 495.126 cv
357.822 495.99 357.309 496.719 356.571 497.043 cv
356.49 497.07 li
356.247 497.169 355.995 497.232 355.725 497.232 cv
355.185 497.232 354.699 497.016 354.33 496.692 cv
350.775 498.06 li
350.775 503.181 li
373.158 503.181 li
373.158 498.06 li
367.515 496.179 li
f
373.158 503.181 mo
350.775 503.181 li
350.775 498.06 li
354.33 496.692 li
354.699 497.016 355.185 497.232 355.725 497.232 cv
355.995 497.232 356.247 497.169 356.49 497.07 cv
356.571 497.043 li
357.309 496.719 357.822 495.99 357.822 495.126 cv
357.822 495.126 li
357.822 495.126 li
357.822 494.379 357.426 493.731 356.832 493.353 cv
356.832 470.574 li
356.832 470.574 li
356.832 467.226 356.175 464.751 354.87 463.176 cv
353.565 461.592 351.576 460.8 348.903 460.8 cv
347.607 460.8 346.311 460.971 345.042 461.313 cv
343.764 461.646 342.576 462.105 341.496 462.654 cv
340.407 463.221 339.444 463.824 338.607 464.481 cv
337.77 465.129 337.059 465.768 336.51 466.38 cv
334.926 468.243 li
334.926 494.487 li
334.881 494.667 li
334.926 494.847 li
334.926 495.729 li
335.781 496.053 li
335.916 496.107 li
340.983 498.06 li
340.983 503.181 li
317.673 503.181 li
317.673 498.06 li
322.992 496.494 li
323.919 496.224 li
323.928 496.215 li
323.955 496.224 li
323.982 496.224 li
324.225 496.215 324.45 496.134 324.657 496.026 cv
324.765 495.972 li
324.846 495.945 li
325.593 495.729 li
325.593 494.64 li
325.593 493.434 li
325.593 462.483 li
325.593 461.268 li
324.702 461.052 li
324.477 460.944 324.243 460.863 323.982 460.863 cv
323.928 460.872 li
317.673 459.396 li
317.673 454.275 li
333.054 453.816 li
333.9 460.422 li
334.512 459.927 335.385 459.243 336.51 458.379 cv
337.626 457.506 338.949 456.669 340.47 455.859 cv
341.991 455.058 343.674 454.356 345.501 453.762 cv
347.337 453.177 349.245 452.88 351.234 452.88 cv
356.274 452.88 360.018 454.356 362.475 457.299 cv
364.932 460.251 366.156 464.364 366.156 469.647 cv
366.156 494.577 li
366.138 494.667 li
366.156 494.757 li
366.156 495.729 li
366.921 495.981 li
367.101 496.089 367.299 496.152 367.515 496.179 cv
373.158 498.06 li
373.158 503.181 li
f
356.49 497.073 mo
356.569 497.042 li
357.306 496.716 357.822 495.986 357.822 495.13 cv
357.822 494.382 357.423 493.728 356.831 493.356 cv
356.831 494.636 li
356.831 495.288 356.437 495.845 355.877 496.094 cv
355.873 496.096 li
355.811 496.121 li
355.807 496.123 li
354.329 496.69 li
354.699 497.021 355.184 497.228 355.723 497.228 cv
355.996 497.228 356.251 497.168 356.49 497.073 cv
cp
f
366.156 494.757 mo
366.156 494.577 li
366.138 494.667 li
366.156 494.757 li
f
366.156 494.757 mo
366.156 494.757 li
366.138 494.667 li
366.156 494.577 li
366.156 494.757 li
f
440.766 494.514 mo
440.766 494.757 li
440.784 494.64 li
440.766 494.514 li
f
440.766 494.757 mo
440.766 494.514 li
440.784 494.64 li
440.766 494.757 li
f
450.09 494.811 mo
450.09 494.523 li
450.063 494.667 li
450.09 494.811 li
f
450.09 494.811 mo
450.09 494.811 li
450.063 494.667 li
450.09 494.523 li
450.09 494.811 li
f
498.111 489.671 mo
497.18 491.104 495.713 492.624 493.725 494.239 cv
491.615 495.854 489.028 496.66 485.983 496.66 cv
482.009 496.66 479.07 495.077 477.173 491.907 cv
475.277 488.743 474.327 484.427 474.327 478.959 cv
474.327 466.543 478.995 460.331 488.313 460.331 cv
492.67 460.331 495.935 460.951 498.111 462.196 cv
498.111 489.671 li
cp
507.963 496.592 mo
507.026 496.384 506.442 495.485 506.626 494.575 cv
506.642 494.507 li
506.756 494.05 507.05 493.683 507.43 493.457 cv
507.43 431.452 li
490.182 431.919 li
490.182 437.043 li
498.111 438.907 li
498.111 454.37 li
495.251 453.376 492.297 452.88 489.248 452.88 cv
481.104 452.88 474.951 455.317 470.784 460.188 cv
466.619 465.069 464.538 471.572 464.538 479.706 cv
464.538 487.344 466.172 493.321 469.434 497.638 cv
472.696 501.956 477.34 504.112 483.373 504.112 cv
489.469 504.112 494.597 502.032 498.764 497.869 cv
499.508 503.181 li
515.361 502.714 li
515.361 497.589 li
509.458 496.204 li
509.057 496.544 508.521 496.718 507.963 496.592 cv
cp
f
506.646 494.505 mo
506.628 494.577 li
506.439 495.486 507.024 496.386 507.96 496.593 cv
508.518 496.719 509.058 496.548 509.454 496.206 cv
508.491 495.981 li
508.482 495.972 li
508.473 495.972 li
507.933 495.855 507.546 495.432 507.429 494.937 cv
507.429 494.694 li
507.42 494.667 li
507.429 494.64 li
507.429 494.334 li
507.429 493.461 li
507.051 493.686 506.754 494.046 506.646 494.505 cv
f
507.429 494.694 mo
507.429 494.64 li
507.42 494.667 li
507.429 494.694 li
f
507.429 494.694 mo
507.429 494.694 li
507.42 494.667 li
507.429 494.64 li
507.429 494.694 li
f
439.268 442.028 mo
440.261 441.004 440.763 439.649 440.763 437.975 cv
440.763 436.36 440.306 435.026 439.412 433.97 cv
438.509 432.915 437.278 432.384 435.724 432.384 cv
434.176 432.384 432.916 432.915 431.953 433.97 cv
430.988 435.026 430.502 436.392 430.502 438.065 cv
430.502 439.745 430.943 441.081 431.809 442.073 cv
432.74 443.064 433.957 443.562 435.45 443.562 cv
436.998 443.562 438.275 443.052 439.268 442.028 cv
cp
f
453.912 432.384 mo
452.359 432.384 451.1 432.915 450.135 433.97 cv
449.172 435.026 448.685 436.392 448.685 438.065 cv
448.685 439.745 449.125 441.081 449.998 442.073 cv
450.924 443.064 452.139 443.562 453.635 443.562 cv
455.182 443.562 456.457 443.052 457.459 442.028 cv
458.445 441.004 458.945 439.649 458.945 437.975 cv
458.945 436.36 458.499 435.026 457.594 433.97 cv
456.691 432.915 455.461 432.384 453.912 432.384 cv
cp
f
553.252 483.478 mo
549.642 492.021 543.204 496.601 539.069 496.601 cv
529.371 496.601 527.538 489.219 527.538 478.403 cv
527.538 467.587 529.672 460.116 539.069 460.116 cv
543.47 460.116 547.361 461.688 549.451 465.96 cv
551.415 469.976 552.612 476.456 553.435 483.026 cv
553.374 483.176 553.314 483.327 553.252 483.478 cv
cp
571.447 498.056 mo
571.447 498.056 567.662 498.899 562.874 494.116 cv
561.821 493.064 561.262 488.358 560.422 482.478 cv
565.604 469.907 568.237 455.62 568.237 455.62 cv
559.551 455.62 li
559.551 455.62 559.056 461.192 557.683 468.116 cv
557.008 465.647 556.196 463.287 555.198 461.191 cv
551.627 453.671 543.849 452.83 539.069 452.83 cv
527.032 452.83 517.969 461.872 517.969 478.403 cv
517.969 494.935 524.656 504.035 537.957 504.035 cv
544.312 504.035 549.919 500.255 554.528 493.664 cv
554.794 496.66 555.019 499.343 555.255 501.401 cv
555.428 502.924 556.995 503.045 556.995 503.045 cv
571.496 503.045 li
571.447 498.056 li
cp
f
128.394 421.317 mo
114.372 412.173 105.237 398.295 101.817 383.103 cv
100.764 378.414 100.251 373.608 100.305 368.775 cv
100.377 362.916 101.286 357.021 103.068 351.279 cv
109.809 355.671 115.416 361.143 119.808 367.344 cv
124.65 374.193 127.998 381.906 129.744 389.97 cv
131.958 400.194 131.598 410.985 128.394 421.317 cv
0.25098 0.0156863 0.227451 0 cmyk
f
122.869 588.575 mo
122.713 588.575 122.556 588.574 122.4 588.573 cv
116.631 588.519 110.835 587.664 105.183 585.954 cv
109.53 579.402 114.948 573.939 121.059 569.664 cv
127.809 564.948 135.414 561.681 143.352 559.962 cv
147.661 559.03 152.069 558.553 156.499 558.553 cv
162.423 558.553 168.387 559.407 174.195 561.168 cv
165.15 574.803 151.461 583.695 136.512 587.061 cv
132.046 588.062 127.472 588.575 122.869 588.575 cv
f
153.846 382.995 mo
145.998 371.511 143.433 357.921 145.692 345.132 cv
146.385 341.19 147.537 337.311 149.13 333.603 cv
151.065 329.112 153.657 324.855 156.879 320.985 cv
160.641 326.511 163.197 332.514 164.583 338.679 cv
166.104 345.483 166.203 352.494 164.952 359.262 cv
163.368 367.848 159.624 376.056 153.846 382.995 cv
f
287.703 606.186 mo
284.949 602.136 283.077 597.744 282.06 593.226 cv
280.944 588.24 280.872 583.11 281.79 578.142 cv
282.951 571.86 285.696 565.848 289.926 560.754 cv
295.677 569.178 297.558 579.132 295.902 588.501 cv
295.398 591.39 294.552 594.225 293.382 596.943 cv
291.96 600.237 290.061 603.36 287.703 606.186 cv
f
107.779 548.015 mo
103.861 548.015 99.9528 547.684 96.102 547.029 cv
90.864 546.138 85.725 544.653 80.811 542.574 cv
74.844 540.063 69.192 536.688 64.071 532.494 cv
71.424 527.535 79.407 524.16 87.615 522.324 cv
92.5979 521.21 97.6565 520.662 102.698 520.662 cv
106.816 520.662 110.923 521.028 114.966 521.748 cv
126.36 523.782 137.25 528.651 146.457 536.184 cv
134.619 544.166 121.137 548.016 107.779 548.015 cv
f
295.663 369.792 mo
292.547 369.792 289.41 369.343 286.353 368.415 cv
291.105 361.251 298.296 356.58 306.162 354.816 cv
308.473 354.292 310.849 354.022 313.236 354.022 cv
313.35 354.022 313.464 354.023 313.578 354.024 cv
316.602 354.042 319.653 354.492 322.623 355.392 cv
320.337 358.83 317.493 361.701 314.28 363.951 cv
310.734 366.426 306.738 368.145 302.562 369.054 cv
300.301 369.542 297.988 369.792 295.663 369.792 cv
f
115.498 506.701 mo
100.267 506.7 85.6477 502.331 73.206 494.532 cv
68.013 491.283 63.198 487.431 58.878 483.057 cv
53.64 477.747 49.122 471.663 45.531 464.922 cv
50.9883 463.796 56.4422 463.251 61.8204 463.251 cv
66.3317 463.251 70.7899 463.635 75.15 464.382 cv
85.707 466.2 95.697 470.115 104.562 475.785 cv
115.821 482.958 125.262 492.939 131.706 505.044 cv
126.271 506.162 120.848 506.701 115.498 506.701 cv
f
121.392 464.724 mo
102.357 461.142 86.436 450.36 76.023 435.69 cv
72.819 431.172 70.128 426.276 68.04 421.101 cv
65.511 414.837 63.846 408.168 63.198 401.256 cv
72.342 402.984 80.775 406.359 88.218 411.039 cv
96.435 416.205 103.437 422.937 108.891 430.767 cv
115.803 440.685 120.222 452.322 121.392 464.724 cv
f
227.295 624.861 mo
226.107 619.11 226.062 613.377 227.043 607.905 cv
228.114 601.857 230.409 596.133 233.712 591.039 cv
237.906 584.586 243.729 579.159 250.767 575.442 cv
253.242 587.403 250.713 599.31 244.557 608.958 cv
242.649 611.937 240.408 614.709 237.852 617.184 cv
234.756 620.19 231.21 622.8 227.295 624.861 cv
f
162.909 618.138 mo
164.214 611.406 166.761 605.205 170.271 599.724 cv
174.141 593.667 179.19 588.501 185.04 584.478 cv
192.456 579.366 201.159 576.081 210.411 575.199 cv
207.693 589.212 199.611 600.939 188.64 608.625 cv
185.256 610.992 181.602 612.99 177.732 614.538 cv
173.043 616.41 168.066 617.652 162.909 618.138 cv
f
193.932 358.929 mo
191.574 347.499 193.986 336.114 199.872 326.898 cv
201.69 324.045 203.832 321.408 206.271 319.032 cv
209.232 316.161 212.616 313.677 216.36 311.697 cv
217.494 317.196 217.53 322.677 216.603 327.906 cv
215.586 333.684 213.39 339.156 210.231 344.025 cv
206.217 350.19 200.664 355.374 193.932 358.929 cv
f
242.226 352.611 mo
243.981 343.602 249.183 336.051 256.239 331.101 cv
258.426 329.571 260.775 328.293 263.268 327.294 cv
266.283 326.097 269.487 325.296 272.799 324.981 cv
271.953 329.31 270.324 333.306 268.065 336.834 cv
265.572 340.731 262.323 344.052 258.561 346.644 cv
253.782 349.929 248.184 352.035 242.226 352.611 cv
f
344.024 555.451 mo
344.056 556.263 343.38 556.939 342.534 556.939 cv
342.025 556.939 341.585 556.702 341.312 556.333 cv
332.574 545.2 li
328.713 549.091 li
328.713 555.418 li
328.713 556.263 328.001 556.939 327.155 556.939 cv
326.308 556.939 325.63 556.263 325.63 555.418 cv
325.63 534.54 li
325.63 533.696 326.308 532.984 327.155 532.984 cv
328.001 532.984 328.713 533.696 328.713 534.54 cv
328.713 545.302 li
340.296 533.525 li
340.533 533.255 340.941 532.984 341.45 532.984 cv
342.261 532.984 342.939 533.625 342.872 534.439 cv
342.838 534.81 342.735 535.15 342.499 535.387 cv
334.675 543.169 li
343.65 554.47 li
343.888 554.773 344.024 555.079 344.024 555.451 cv
cp
0.396078 0.0392157 0.360784 0 cmyk
f
363.165 545.81 mo
363.165 555.418 li
363.165 556.263 362.454 556.939 361.606 556.939 cv
360.76 556.939 360.083 556.263 360.083 555.418 cv
360.083 546.146 li
360.083 543.575 358.997 542.02 356.355 542.02 cv
353.917 542.02 352.156 543.575 350.802 545.267 cv
350.802 555.418 li
350.802 556.263 350.09 556.939 349.243 556.939 cv
348.397 556.939 347.719 556.263 347.719 555.418 cv
347.719 540.901 li
347.719 540.024 348.397 539.345 349.243 539.345 cv
350.09 539.345 350.802 540.024 350.802 540.901 cv
350.802 542.29 li
352.225 540.733 354.085 539.175 357.099 539.175 cv
360.963 539.175 363.165 542.187 363.165 545.81 cv
cp
f
381.56 548.108 mo
381.56 543.642 378.547 541.983 375.971 541.983 cv
373.364 541.983 370.381 543.642 370.381 548.108 cv
370.381 552.609 373.364 554.3 375.971 554.3 cv
378.547 554.3 381.56 552.609 381.56 548.108 cv
cp
384.642 548.145 mo
384.642 553.489 381.188 557.11 375.971 557.11 cv
370.72 557.11 367.3 553.489 367.3 548.145 cv
367.3 542.798 370.72 539.175 375.971 539.175 cv
381.188 539.175 384.642 542.798 384.642 548.145 cv
cp
f
412.051 540.868 mo
412.051 541.07 412.013 541.24 411.946 541.444 cv
407.136 555.519 li
406.865 556.297 406.088 556.939 405.173 556.939 cv
404.259 556.939 403.479 556.297 403.174 555.485 cv
399.585 544.286 li
395.993 555.485 li
395.688 556.297 394.908 556.939 393.994 556.939 cv
393.08 556.939 392.3 556.297 392.03 555.519 cv
387.219 541.444 li
387.151 541.24 387.117 541.07 387.117 540.868 cv
387.117 540.024 387.796 539.345 388.641 539.345 cv
389.252 539.345 389.86 539.684 390.03 540.259 cv
393.994 553.285 li
397.923 540.563 li
398.127 539.854 398.804 539.345 399.585 539.345 cv
400.363 539.345 401.04 539.854 401.243 540.563 cv
405.173 553.285 li
409.135 540.259 li
409.306 539.684 409.916 539.345 410.525 539.345 cv
411.372 539.345 412.051 540.024 412.051 540.868 cv
cp
f
447.45 540.868 mo
447.45 541.07 447.416 541.24 447.349 541.444 cv
442.537 555.519 li
442.268 556.297 441.489 556.939 440.574 556.939 cv
439.661 556.939 438.881 556.297 438.574 555.485 cv
434.985 544.286 li
431.396 555.485 li
431.089 556.297 430.31 556.939 429.394 556.939 cv
428.482 556.939 427.702 556.297 427.431 555.519 cv
422.621 541.444 li
422.553 541.24 422.519 541.07 422.519 540.868 cv
422.519 540.024 423.198 539.345 424.044 539.345 cv
424.654 539.345 425.264 539.684 425.433 540.259 cv
429.394 553.285 li
433.327 540.563 li
433.527 539.854 434.205 539.345 434.985 539.345 cv
435.763 539.345 436.442 539.854 436.645 540.563 cv
440.574 553.285 li
444.539 540.259 li
444.707 539.684 445.315 539.345 445.926 539.345 cv
446.773 539.345 447.45 540.024 447.45 540.868 cv
cp
f
466.389 545.81 mo
466.389 555.418 li
466.389 556.263 465.679 556.939 464.83 556.939 cv
463.984 556.939 463.307 556.263 463.307 555.418 cv
463.307 546.146 li
463.307 543.575 462.222 542.02 459.582 542.02 cv
457.141 542.02 455.379 543.575 454.025 545.267 cv
454.025 555.418 li
454.025 556.263 453.313 556.939 452.467 556.939 cv
451.621 556.939 450.941 556.263 450.941 555.418 cv
450.941 533.456 li
450.941 532.579 451.621 531.901 452.467 531.901 cv
453.313 531.901 454.025 532.579 454.025 533.456 cv
454.025 542.29 li
455.448 540.733 457.311 539.175 460.324 539.175 cv
464.186 539.175 466.389 542.187 466.389 545.81 cv
cp
f
482.074 551.864 mo
482.074 549.022 li
478.382 549.022 li
475.197 549.022 473.268 549.769 473.268 551.696 cv
473.268 553.151 474.114 554.403 476.857 554.403 cv
478.958 554.403 480.922 553.185 482.074 551.864 cv
cp
485.156 545.841 mo
485.156 555.418 li
485.156 556.263 484.444 556.939 483.6 556.939 cv
482.752 556.939 482.074 556.263 482.074 555.418 cv
482.074 554.538 li
480.855 555.79 478.891 557.11 475.707 557.11 cv
472.758 557.11 470.185 555.216 470.185 552.035 cv
470.185 548.854 472.692 546.553 477.977 546.553 cv
482.074 546.553 li
482.074 546.282 li
482.074 543.271 480.583 542.085 477.533 542.085 cv
475.637 542.085 474.285 542.491 473.031 542.897 cv
472.895 542.932 472.725 542.964 472.592 542.964 cv
471.912 542.964 471.336 542.425 471.336 541.681 cv
471.336 541.103 471.641 540.632 472.217 540.396 cv
473.811 539.72 475.672 539.175 478.078 539.175 cv
483.021 539.175 485.156 542.525 485.156 545.841 cv
cp
f
499.86 555.316 mo
499.86 555.894 499.555 556.263 499.08 556.499 cv
498.267 556.872 497.353 557.11 496.268 557.11 cv
494.677 557.11 491.324 556.838 491.324 552.644 cv
491.324 542.154 li
488.92 542.154 li
488.547 542.154 488.275 541.884 488.275 541.511 cv
488.275 541.309 488.377 541.103 488.58 540.937 cv
493.186 536.437 li
493.288 536.333 493.49 536.13 493.763 536.13 cv
494.135 536.13 494.407 536.437 494.407 536.808 cv
494.407 539.516 li
498.232 539.516 li
498.98 539.516 499.555 540.091 499.555 540.835 cv
499.555 541.577 498.98 542.154 498.232 542.154 cv
494.407 542.154 li
494.407 552.373 li
494.407 554.37 495.76 554.403 496.607 554.403 cv
497.692 554.403 498.063 554.099 498.638 554.099 cv
499.249 554.099 499.86 554.606 499.86 555.316 cv
cp
f
526.486 541.477 mo
517.239 563.673 li
516.968 564.284 516.526 564.722 515.815 564.722 cv
515.003 564.722 514.358 564.046 514.358 563.233 cv
514.358 563.064 514.394 562.863 514.463 562.69 cv
516.663 557.042 li
510.296 541.545 li
510.227 541.375 510.161 541.14 510.161 540.901 cv
510.161 540.056 510.836 539.345 511.685 539.345 cv
512.33 539.345 512.869 539.752 513.106 540.292 cv
518.323 553.218 li
523.641 540.36 li
523.911 539.752 524.387 539.345 525.064 539.345 cv
525.91 539.345 526.588 540.056 526.588 540.901 cv
526.588 541.103 526.554 541.309 526.486 541.477 cv
cp
f
543.12 548.108 mo
543.12 543.642 540.107 541.983 537.531 541.983 cv
534.923 541.983 531.942 543.642 531.942 548.108 cv
531.942 552.609 534.923 554.3 537.531 554.3 cv
540.107 554.3 543.12 552.609 543.12 548.108 cv
cp
546.201 548.145 mo
546.201 553.489 542.748 557.11 537.531 557.11 cv
532.28 557.11 528.86 553.489 528.86 548.145 cv
528.86 542.798 532.28 539.175 537.531 539.175 cv
542.748 539.175 546.201 542.798 546.201 548.145 cv
cp
f
550.373 550.478 mo
550.373 540.868 li
550.373 540.024 551.081 539.345 551.93 539.345 cv
552.776 539.345 553.455 540.024 553.455 540.868 cv
553.455 550.142 li
553.455 552.711 554.539 554.269 557.178 554.269 cv
559.62 554.269 561.381 552.711 562.735 551.019 cv
562.735 540.868 li
562.735 540.024 563.445 539.345 564.293 539.345 cv
565.141 539.345 565.818 540.024 565.818 540.868 cv
565.818 555.384 li
565.818 556.263 565.141 556.939 564.293 556.939 cv
563.445 556.939 562.735 556.263 562.735 555.384 cv
562.735 553.997 li
561.313 555.553 559.45 557.11 556.436 557.11 cv
552.572 557.11 550.373 554.099 550.373 550.478 cv
cp
f
457.027 568.886 mo
457.027 569.087 li
457.027 570.882 li
457.027 573.587 455.573 575.009 454.252 575.823 cv
454.15 575.891 453.912 575.991 453.676 575.991 cv
453.101 575.991 452.693 575.517 452.693 574.976 cv
452.693 574.604 452.865 574.333 453.203 574.131 cv
454.186 573.554 454.93 572.845 454.93 570.983 cv
454.795 570.983 li
453.744 570.983 452.896 570.137 452.896 569.087 cv
452.896 568.886 li
452.896 567.838 453.744 566.99 454.795 566.99 cv
455.133 566.99 li
456.184 566.99 457.027 567.838 457.027 568.886 cv
cp
f
404.044 587.056 mo
404.044 579.951 li
402.723 578.495 400.894 577.413 398.691 577.413 cv
395.475 577.413 393.139 579.508 393.139 583.503 cv
393.139 587.495 395.475 589.595 398.691 589.595 cv
400.894 589.595 402.723 588.511 404.044 587.056 cv
cp
404.044 577.106 mo
404.044 568.817 li
404.044 567.938 404.722 567.261 405.602 567.261 cv
406.449 567.261 407.128 567.938 407.128 568.817 cv
407.128 590.778 li
407.128 591.623 406.449 592.302 405.602 592.302 cv
404.722 592.302 404.044 591.623 404.044 590.778 cv
404.044 589.897 li
402.487 591.523 400.624 592.471 398.253 592.471 cv
394.153 592.471 390.055 589.256 390.055 583.503 cv
390.055 577.751 394.153 574.536 398.253 574.536 cv
400.624 574.536 402.487 575.483 404.044 577.106 cv
cp
f
425.692 583.47 mo
425.692 579.003 422.678 577.344 420.103 577.344 cv
417.497 577.344 414.514 579.003 414.514 583.47 cv
414.514 587.968 417.497 589.66 420.103 589.66 cv
422.678 589.66 425.692 587.968 425.692 583.47 cv
cp
428.772 583.503 mo
428.772 588.849 425.319 592.471 420.103 592.471 cv
414.853 592.471 411.432 588.849 411.432 583.503 cv
411.432 578.157 414.853 574.536 420.103 574.536 cv
425.319 574.536 428.772 578.157 428.772 583.503 cv
cp
f
448.524 581.167 mo
448.524 590.778 li
448.524 591.623 447.813 592.302 446.966 592.302 cv
446.119 592.302 445.442 591.623 445.442 590.778 cv
445.442 581.507 li
445.442 578.936 444.36 577.378 441.717 577.378 cv
439.275 577.378 437.516 578.936 436.161 580.628 cv
436.161 590.778 li
436.161 591.623 435.449 592.302 434.602 592.302 cv
433.755 592.302 433.078 591.623 433.078 590.778 cv
433.078 576.263 li
433.078 575.384 433.755 574.705 434.602 574.705 cv
435.449 574.705 436.161 575.384 436.161 576.263 cv
436.161 577.65 li
437.582 576.092 439.445 574.536 442.463 574.536 cv
446.322 574.536 448.524 577.548 448.524 581.167 cv
cp
f
470.953 590.675 mo
470.953 591.252 470.647 591.623 470.173 591.86 cv
469.359 592.233 468.445 592.471 467.361 592.471 cv
465.769 592.471 462.416 592.2 462.416 588.003 cv
462.416 577.515 li
460.011 577.515 li
459.639 577.515 459.367 577.243 459.367 576.87 cv
459.367 576.668 459.471 576.465 459.673 576.296 cv
464.279 571.794 li
464.381 571.692 464.583 571.489 464.855 571.489 cv
465.229 571.489 465.498 571.794 465.498 572.168 cv
465.498 574.876 li
469.326 574.876 li
470.071 574.876 470.647 575.45 470.647 576.194 cv
470.647 576.938 470.071 577.515 469.326 577.515 cv
465.498 577.515 li
465.498 587.731 li
465.498 589.729 466.854 589.765 467.699 589.765 cv
468.785 589.765 469.156 589.459 469.733 589.459 cv
470.344 589.459 470.953 589.966 470.953 590.675 cv
cp
f
497.781 590.81 mo
497.781 591.726 497.14 592.302 496.224 592.302 cv
495.751 592.302 495.274 592.028 494.973 591.655 cv
489.145 583.741 li
486.195 586.413 li
486.195 590.778 li
486.195 591.623 485.485 592.302 484.643 592.302 cv
483.791 592.302 483.115 591.623 483.115 590.778 cv
483.115 568.817 li
483.115 567.972 483.791 567.261 484.643 567.261 cv
485.485 567.261 486.195 567.972 486.195 568.817 cv
486.195 582.656 li
494.26 575.212 li
494.53 574.976 494.87 574.772 495.274 574.772 cv
496.427 574.772 496.766 575.585 496.766 576.263 cv
496.766 576.532 496.665 576.938 496.192 577.413 cv
491.313 581.776 li
497.443 589.897 li
497.649 590.169 497.781 590.474 497.781 590.81 cv
cp
f
517.06 581.167 mo
517.06 590.778 li
517.06 591.623 516.346 592.302 515.499 592.302 cv
514.654 592.302 513.976 591.623 513.976 590.778 cv
513.976 581.507 li
513.976 578.936 512.891 577.378 510.248 577.378 cv
507.812 577.378 506.05 578.936 504.694 580.628 cv
504.694 590.778 li
504.694 591.623 503.981 592.302 503.136 592.302 cv
502.288 592.302 501.611 591.623 501.611 590.778 cv
501.611 576.263 li
501.611 575.384 502.288 574.705 503.136 574.705 cv
503.981 574.705 504.694 575.384 504.694 576.263 cv
504.694 577.65 li
506.117 576.092 507.979 574.536 510.997 574.536 cv
514.858 574.536 517.06 577.548 517.06 581.167 cv
cp
f
535.454 583.47 mo
535.454 579.003 532.438 577.344 529.864 577.344 cv
527.257 577.344 524.275 579.003 524.275 583.47 cv
524.275 587.968 527.257 589.66 529.864 589.66 cv
532.438 589.66 535.454 587.968 535.454 583.47 cv
cp
538.536 583.503 mo
538.536 588.849 535.082 592.471 529.864 592.471 cv
524.614 592.471 521.193 588.849 521.193 583.503 cv
521.193 578.157 524.614 574.536 529.864 574.536 cv
535.082 574.536 538.536 578.157 538.536 583.503 cv
cp
f
565.941 576.228 mo
565.941 576.431 565.907 576.601 565.842 576.804 cv
561.029 590.88 li
560.759 591.655 559.98 592.302 559.067 592.302 cv
558.15 592.302 557.374 591.655 557.067 590.847 cv
553.477 579.646 li
549.885 590.847 li
549.582 591.655 548.802 592.302 547.888 592.302 cv
546.974 592.302 546.193 591.655 545.923 590.88 cv
541.112 576.804 li
541.046 576.601 541.011 576.431 541.011 576.228 cv
541.011 575.384 541.689 574.705 542.535 574.705 cv
543.147 574.705 543.756 575.042 543.924 575.618 cv
547.888 588.646 li
551.815 575.923 li
552.021 575.212 552.697 574.705 553.477 574.705 cv
554.256 574.705 554.933 575.212 555.135 575.923 cv
559.067 588.646 li
563.029 575.618 li
563.198 575.042 563.809 574.705 564.417 574.705 cv
565.265 574.705 565.941 575.384 565.941 576.228 cv
cp
f
gsave
615.087 237.834 mo
609.426 229.482 607.563 219.618 609.174 210.339 cv
609.678 207.477 610.497 204.66 611.649 201.978 cv
613.035 198.72 614.898 195.624 617.211 192.825 cv
619.938 196.839 621.783 201.195 622.782 205.677 cv
623.889 210.618 623.961 215.703 623.07 220.617 cv
621.936 226.845 619.245 232.803 615.087 237.834 cv
clp
607.563 192.825 mo
623.961 192.825 li
623.961 237.834 li
607.563 237.834 li
cp
0.25098 0.0156863 0.227451 0 cmyk
f
grestore
709.335 395.397 mo
707.391 392.526 706.068 389.412 705.357 386.217 cv
704.565 382.689 704.52 379.053 705.15 375.543 cv
705.96 371.097 707.886 366.84 710.856 363.249 cv
714.897 369.216 716.229 376.263 715.077 382.887 cv
714.717 384.939 714.132 386.937 713.313 388.863 cv
712.314 391.194 710.991 393.399 709.335 395.397 cv
0.25098 0.0156863 0.227451 0 cmyk
f
583.014 353.975 mo
580.227 353.975 577.445 353.734 574.704 353.259 cv
571.023 352.629 567.414 351.567 563.958 350.091 cv
559.764 348.3 555.795 345.906 552.195 342.927 cv
557.352 339.435 562.959 337.059 568.719 335.772 cv
572.185 334.996 575.705 334.614 579.214 334.614 cv
582.137 334.614 585.054 334.879 587.925 335.403 cv
595.935 336.861 603.594 340.317 610.056 345.663 cv
601.785 351.272 592.362 353.975 583.014 353.975 cv
f
642.879 221.067 mo
641.142 212.598 642.897 204.174 647.217 197.352 cv
648.549 195.246 650.124 193.293 651.915 191.538 cv
654.093 189.414 656.577 187.578 659.331 186.12 cv
660.168 190.188 660.204 194.256 659.52 198.126 cv
658.773 202.401 657.162 206.46 654.849 210.051 cv
651.906 214.614 647.829 218.448 642.879 221.067 cv
f
666.918 408.528 mo
666.081 404.46 666.045 400.401 666.72 396.522 cv
667.467 392.247 669.078 388.197 671.4 384.597 cv
674.334 380.034 678.42 376.2 683.361 373.59 cv
685.107 382.059 683.343 390.483 679.023 397.296 cv
677.691 399.402 676.116 401.355 674.325 403.11 cv
672.156 405.234 669.672 407.07 666.918 408.528 cv
f
587.661 324.155 mo
577.338 324.155 567.429 321.158 558.99 315.819 cv
555.48 313.596 552.222 310.977 549.306 307.989 cv
545.76 304.371 542.7 300.231 540.27 295.641 cv
543.924 294.89 547.568 294.525 551.164 294.525 cv
554.247 294.525 557.294 294.794 560.277 295.317 cv
567.414 296.559 574.164 299.241 580.158 303.102 cv
587.754 308.007 594.144 314.802 598.509 323.046 cv
594.872 323.795 591.242 324.155 587.661 324.155 cv
f
746.28 256.16 mo
744.522 256.16 742.769 256.002 741.042 255.69 cv
736.236 254.817 731.646 252.747 727.758 249.534 cv
732.726 246.169 738.387 244.543 743.999 244.543 cv
745.667 244.543 747.332 244.686 748.971 244.971 cv
751.185 245.358 753.345 245.988 755.424 246.879 cv
757.935 247.95 760.32 249.39 762.48 251.172 cv
759.384 253.269 756.018 254.7 752.562 255.474 cv
750.485 255.934 748.379 256.16 746.28 256.16 cv
f
766.2 292.895 mo
764.616 292.895 763.051 292.758 761.517 292.491 cv
757.872 291.852 754.416 290.484 751.338 288.504 cv
747.45 285.993 744.183 282.51 741.951 278.289 cv
743.811 277.907 745.668 277.723 747.5 277.723 cv
752.785 277.723 757.859 279.257 762.183 281.997 cv
763.974 283.131 765.639 284.472 767.142 286.002 cv
768.951 287.856 770.517 289.98 771.759 292.329 cv
769.894 292.711 768.035 292.895 766.2 292.895 cv
f
591.417 293.985 mo
578.682 291.537 568.017 284.265 561.051 274.365 cv
558.9 271.305 557.091 268.002 555.687 264.51 cv
553.995 260.289 552.879 255.789 552.438 251.127 cv
558.558 252.306 564.201 254.592 569.187 257.76 cv
574.686 261.252 579.375 265.797 583.029 271.08 cv
587.664 277.767 590.625 285.624 591.417 293.985 cv
f
597.06 263.772 mo
587.439 257.427 581.157 247.824 578.799 237.33 cv
578.07 234.081 577.719 230.76 577.755 227.412 cv
577.791 223.362 578.412 219.285 579.627 215.316 cv
584.253 218.367 588.114 222.165 591.129 226.458 cv
594.459 231.192 596.763 236.529 597.969 242.1 cv
599.49 249.174 599.256 256.635 597.06 263.772 cv
f
764.928 333.756 mo
761.598 333.117 758.52 331.875 755.811 330.147 cv
752.814 328.248 750.267 325.773 748.278 322.893 cv
745.749 319.257 744.138 314.973 743.706 310.428 cv
750.645 311.76 756.441 315.72 760.239 321.111 cv
761.409 322.776 762.399 324.576 763.155 326.475 cv
764.082 328.77 764.694 331.227 764.928 333.756 cv
f
742.473 367.821 mo
740.043 366.228 738.018 364.23 736.443 361.98 cv
734.697 359.496 733.482 356.688 732.852 353.763 cv
732.051 350.046 732.168 346.131 733.32 342.387 cv
738.378 345.717 741.672 350.757 742.914 356.274 cv
743.292 357.975 743.481 359.721 743.463 361.476 cv
743.436 363.6 743.121 365.742 742.473 367.821 cv
f
621.693 403.677 mo
622.602 398.916 624.384 394.533 626.841 390.654 cv
629.559 386.379 633.096 382.734 637.2 379.89 cv
642.411 376.29 648.522 373.977 655.02 373.365 cv
653.121 383.274 647.46 391.563 639.756 396.981 cv
637.38 398.655 634.815 400.059 632.097 401.148 cv
628.812 402.471 625.311 403.335 621.693 403.677 cv
f
593.673 382.7 mo
593.521 382.7 593.369 382.7 593.217 382.698 cv
589.158 382.653 585.09 382.041 581.112 380.817 cv
584.163 376.191 587.961 372.339 592.254 369.324 cv
596.988 365.985 602.325 363.69 607.905 362.484 cv
610.902 361.836 613.967 361.504 617.048 361.504 cv
621.24 361.504 625.46 362.118 629.568 363.384 cv
623.223 373.014 613.62 379.287 603.117 381.645 cv
600.024 382.341 596.858 382.7 593.673 382.7 cv
f
675.99 216.963 mo
677.349 209.88 681.39 203.958 686.889 200.088 cv
688.59 198.891 690.417 197.892 692.361 197.109 cv
694.71 196.164 697.203 195.543 699.795 195.3 cv
699.138 198.702 697.869 201.834 696.114 204.606 cv
694.17 207.657 691.641 210.267 688.716 212.292 cv
684.99 214.875 680.634 216.513 675.99 216.963 cv
f
715.051 227.848 mo
712.956 227.848 710.845 227.541 708.786 226.908 cv
711.963 222.093 716.76 218.952 722.016 217.773 cv
723.562 217.429 725.149 217.25 726.739 217.25 cv
726.814 217.25 726.89 217.25 726.966 217.251 cv
728.991 217.269 731.034 217.584 733.014 218.187 cv
731.493 220.5 729.594 222.435 727.443 223.938 cv
725.076 225.603 722.412 226.755 719.622 227.358 cv
718.124 227.682 716.592 227.848 715.051 227.848 cv
f
658.722 330.011 mo
658.722 335.371 li
633.252 335.371 li
633.252 330.011 li
640.848 328.222 li
640.848 262.447 li
633.252 260.657 li
633.252 255.75 li
658.722 255.306 li
658.722 260.657 li
650.23 262.447 li
650.23 291.92 li
684.654 291.92 li
684.654 262.447 li
676.166 260.657 li
676.166 255.75 li
701.637 255.306 li
701.637 260.657 li
694.04 262.447 li
694.04 328.222 li
701.637 330.011 li
701.637 335.371 li
676.166 335.371 li
676.166 330.011 li
684.654 328.222 li
684.654 299.069 li
650.23 299.069 li
650.23 328.222 li
658.722 330.011 li
cp
0.396078 0.0392157 0.360784 0 cmyk
f
627.229 296.488 mo
627.229 299.594 624.712 302.111 621.605 302.111 cv
618.5 302.111 615.98 299.594 615.98 296.488 cv
615.98 293.381 618.5 290.862 621.605 290.862 cv
624.712 290.862 627.229 293.381 627.229 296.488 cv
cp
f
717.681 296.488 mo
717.681 299.594 715.164 302.111 712.057 302.111 cv
708.951 302.111 706.432 299.594 706.432 296.488 cv
706.432 293.381 708.951 290.862 712.057 290.862 cv
715.164 290.862 717.681 293.381 717.681 296.488 cv
cp
f
27 635.75 mo
0 635.75 li
0 636.25 li
27 636.25 li
/0 
<<
/Name (All)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0.74902 0.678431 0.670588 0.901961 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
35.75 645 mo
35.75 672 li
36.25 672 li
36.25 645 li
f
27 35.75 mo
0 35.75 li
0 36.25 li
27 36.25 li
f
36.25 27 mo
36.25 0 li
35.75 0 li
35.75 27 li
f
845 36.25 mo
872 36.25 li
872 35.75 li
845 35.75 li
f
836.25 27 mo
836.25 0 li
835.75 0 li
835.75 27 li
f
845 636.25 mo
872 636.25 li
872 635.75 li
845 635.75 li
f
835.75 645 mo
835.75 672 li
836.25 672 li
836.25 645 li
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Diane) ()%%Title: (0169 Henoida Final Logo.eps)%%CreationDate: 11/8/13 10:14 AM%AI9_DataStream%Gb"-6CMtN0OXTu4p`K.I_"^8)8LBkL1_p;@F*;`]G/KBS*XjZ[Ed,'"pXZ*:>s2N_Y@#;5_+^GqUQRag4X1Q=P!XG]Hj#)lNh?8d%s5Ab-hn477mJb$'qhr'>`X0ECni_trqq9<pcSrUerVZiE*'\iL_n4Oh5CN4p_q2*,s8MNHm>$b[s5NJ9pK-hPIeE!\ns<F%s8)TZ%gCJdT5MQ-0qU>8bgXkU!+5ad.FLU$9!;#/Fq]F\-rT;]r]_h<dO2&2__Z\of:Y=8@^+Z%ArnqDjs3(;Chu<,il`]0ZqYKkDs73>j%q0Vm(rY,;/]@WZ=Q-km@pbKFuYQ"4p[Nk[gh/K"H15,5uPik#Pr*`.f>^fcZ^J+XpTDn5eYJ5MWrMP^[5/$d]rdXp;8+Z8gGOJjd%r84@6TsT(^m\XEc^]"0)]C4UjqXb]X.$hW,jdZ;5-d&fA"n0<ITC284gnh[=-i/0q`n17ik4RV\;:b1$2t&tZq#7J($t$^DRauEO%n^Hs`r-r9HI"W<o^\!lMrp]XSa$74do82VDqj3"#qPt.a]RJ$Hr;?BXX)E8!V1\Ut4n/>M+2<7&WGMKf[m.\+IfWKE5F!8co$uW)%J#k<uc$-AKs8Kq9K-U@>k>WejrA^,Cb-Fc@^@Q&rGCBhhSY,FHW@Ua$GC"Wi%h-%$NoUY[Cu8<*6\"^tc*qWJs5JrN\hC*EhL-!Y%:LTZ(g@Tmopu\'Wk;h>BoFK72IQ$)AI+-Hc.X_*bqE7WN+Q;9\[@^m;s4-S\!)E!t3IH&V)cL_BBD[8rmgD1irU;E;9n10tP`Pk6%*DH`fs3n/9Pc)\WQ9O-.nLsL+^3]ZDq9qQXr:%UJs76.B+5B*J^A79]f6:T8qXiCOrS,rm^\RllG7:6Rn)tDgqW42rInd0E=)YhM%q:5Inrt4b`gUlA@q1$*WqG[2D"6r[sqr,etf+3)t]<>Y252PZkrp]knmsb;q_cn-gq^3C2K+SI:s#Am*'n5*>Dr/r8Dr8JDXP["&%bE)'Cjlss,."D.LpO7A[p?e>f5JI!^YA_/C]qFt@I1uSH&MGYIr8[,>H2L\A^B#qdrpJ)ShS/gb?,]88q<HMN:N*srqtbMds8LL5%G7XFkI/TCPm?qNQkir&\^OH(=4#9E]]R'V&h>_`mn[iRB_`%JTc22G%$,Q4<Qgqu*n)33>qqYUdIJ4Y8qrt:sI.DJ?T^gc<mpCLU%6b%:GjJUpSTk>rK,+*PBr_s/u-%0-JEJ5_DJ%'oGrr14c?[_OCOP=-trDWO^n)^D7?fOZ_r,^Hp(Lj$*p><B0F8q"7G/Jbg%*-dk%Idl2!5F*(5nrqCr/UlmWV&fK]T>M4f#[n,rUbIKBk-0MEfS;gRL/Vf!=$@YE32U[6o/MfS\/Y2&@6BRJnJlrcEJuWL35mm1E>SB>%&<H@GL?)9(@u;_3SE@2S>rnck3k8slI,U[VPfb",:Wp,7p=$kV&dFt`H!![k8^K<Pq_Xhd</*/nolT,=jse-"NrF\@-<@#*FC*_4%S]@Gr1uS#Gc3+Zk8\1;44Eip:1=(3"RF:#k1Aj06fnU58TM32f"<pXW%UZ)`K84BC>;L+SLF*%#TF%]td-f<^hpK%k&"#f*XjZU2%_*@PC5Ia'6%0qCVkM^MH_:S4!3:0MRdrLmQq)"YjWU/#H/?%pY7\#O;j7.@RmZ5!?Eh&3d3$$I&*lhb=\2,,ML[suQd2`^PrF'nP%%eChcVF*D_Jdp\s&&\CZ5OFO/_g]AXm?ddachhFKp2N=b6TJ/am^tXKNk<2H^YA.Ah7UqCBp[U-m`&Pbq;&9FQd]t[%a0=Sftj<*%i3*[+2ZY]<#;a.%>aWBn8T^lhGTJi.3Y<9X.)VD%5FU-;1kBfTg-$i_E4QKKSj]-dH6:_%=RQDg__p1G2rp;XhYle:qi>:ujlA#T%'EU!\j]oY?*UqRE[g]W6#Wa1A^po-ga)]Pi+j2,'U&&DLTSR^)F@1>P/AkSU,F*u)AV##9Ymt?m:8]np#OKM/H,0_HO0fE;liZEY%VcKbb=K&H"6Tg]`30YH?iR,u*?H5C^6D6f$3YX&`/C\-9kXL\O$QY(XUA/[[AFbQ+AlgD,*3qq0'FVS\KfBes<N+HQ:p!'tE+IVA%%XZ=Q:Fq_Z+JBgarF'oLgEh!b4-Of2@\KBt6aRIclMAg&<d:NjA,B<u^31D)kqKbk_Ns\^pdX,VJkW)u\a6IP3&VOW9*OL!_7c[Q%iP&^[Z0^,R+G_[q3Ym*;"`NRU_n1NDLP"!Q_mpnP0;iqD8=s/'r`i47;U31oi;BjMO7T>Uh5>cZm(DB,>I&NMk=tRmVf->,"_^Kr%]CfJ*iiLAYNf178Z>Vf^BCGr]:W,G)_`McbpXtY8:"\\'`V\9G"Y>uoZU;eF&PH(ViQ,gI>f2jb&h_&M/I\/&n.PC<DKuPuK]NOf%5!go1jrm3)PjnZpbUYCQ6+kVt=0^Ya8R7a-Fa/V1/l<c[8<+Hj,[-`Z'!$Xn<J9,$YCPgY/^*-q_03u/0]rKH=YF5i'!j3t?FuO#%WiP9LGA.nugY!4si((bLTPL7%i=o/[AgR/\&jX**`'!?H&DIs8B7tCXMr5#ta@Z^C#AX<HEO?:041GWV3s4IPZ>^:T+lb$X,C3n[%F1,F'D+AIKCj7b-GM!8/ELsGsdO&e0ZuR+U$e:$u]3aF45TTAaWI+tVjE-Y7]ZTIo(OecTF1fk*3V%3c=2(\@l%]MHFLog.?fHCe%'lb;(XMo??(0upTX@@<9+E]gU:F>CIgPRD?k%%=MCEhQr\]_$Zi78l$9>bo/Z5/c\j!&BJCE]`uHGjP@]2p`*iI,3]^,=qc\8TA!%bI_ZC_\p`qf;#lQG057W",8Wd,#M_L.KX865LT]Ze'u2t2OR&Z5I,`S+D/>-r3CQt;lQj30'g-6oe&0O>^tqCnGG4.(-2u.+00c?%ECn$T6kkjfED+B@2S:InXd7(;`i;.Jk*pm(i0M]c\&?E,D)bnt^eF&DHuD?CF[AciO`Oe>ItYKu,'EtlX%]Zd:4[YDW#qZ)K*Uuk%qM6mDb$o0HjY!2'Df3'<$t0L9+!5n`2g"j=/FtOsA17H]1n!P<+if8EPF.-4gkE@#h_"gkjUlh:Sbq*4T!??7pLSaATV(/Ko&RUb%K2+Y.@@>jl^rd>YP.r*&+7J30+3-Ckd61EX3&XQeUXI,7<fd(ZfH0012_^'39Cs:-&[VrIN$75+mpl0pNp@SZ_D.%D49@$kZ\nM[%c.LaaZFm;Y!qQu&+.r!0G3:o`BBT`CUa@I&iGOPI^dfM.,^n@BLRs5(e%O'5)2=6ENWdcN%gic$n6sukJ^b-\]dmBLn,pDIp/8s&%e=Og-p.&-#MLMq9?sP3Yn,1L;#?EkpW`g-\1E]mn>d`*a!Y9][V5rf.B;;/:Pce"J\M.qQZ:(b=CK,RKiC^+@<k+GG_E6;X:8NNe%FcST81TF[^.UC5#W_1n-=K!_)/46,rTs1(BV`a(2kIfk]hRaup*=L,HX(NjP#U%dDEDH*^QY5HkCs$YPcNjA3!bF#d'Wd's_D2m[%M+_$pgQo-0V(E1!0]gG0G<9aFE"1`b#'U8B'<ht^pdT)!ZnbJ-4dGc7!f+M`W6d!n48a*54)d9%_b5S`SNU;(`1Vb(ed<1!`<?kf%-Jd.A<M^X;TY%OjQ-ZbHU:BT(e2o_S[9=T9[Be&O=[,l6Ze9!=Xm^M<:X*d@Or\c%nWp@;]sI)Kh:'(?pN1-,*H+)Z]@luHf#&<k%I"1U)hjnYuh>"SSG4U""Dr8aOWoMEb%Nt"BWq>b%-a-`E[QD#WOJ(\'RNq_!?G]Ik]qcFrBMs$'nKFc>/-l!hHR_NgG*VcD[Bk7T%H#F^@/o:!0gFEMup343fZH'8oZHmp>@BZ6Tm(2"#&j,`qbE9h4s&69lfIq/HX,*_>.]]LW$KD7@]2o4\AYgr2MhHq;L\8A($s^e8%BOO\mGU(u)aB!FQ>`3h_J1V88$Oh$S+Oa5MkZH3P(W8lK@<MfK:'EpM_27O$Y3lZ.4d8[%AWrIdY=C^^Z(04PSAf!3ZG$V/W<cs+%&^+-A5G@SW7tG_N0f,Ng+W-ujbm#,2_.'`/'\mN-EQ6A1ZIndY2J)/p=b*JZHn<nlb"3Gm\N#if!a":i<ba5lBI_1@bIIuAHk#2=%S][?^Pgd)lB4NX<>?8BfF"E4ib*!9h)P>1C+3Gqsb#ZaJcVrM_3/t)2H='(dF4m[*fs?+[\Y\Y"0"[KOgAU&(^RnOFIamo"NImbP%o,!Y_7>cBE?=#>!\`_ejrS[O<\'Nf!fLC)652NZ)[#+3RG4A]%*U`Va'][>cPJ(5iVRu@thRo?GREhVrVL-ODUtoi$)!"obLVZTG%$n5):Vr.-MqYObJVQYIDpta]VGJ>_[=)Y3>b(W%o$$P[V:;W\NQ(V<i$0A[d.hPro<XABd3u+__W2fc!;LWI`D0tBs.aOE\]7a[k%Xg2g#E8VpTm5o\7qR9ShA]og3J\n^cgRJ1M]g*Q_Z*5CJa+!_f='DA_iB*Tm(>#Xc0V50M_IDIX06(Z3^KVbX29AtAW!8^KPXQK"%ZP48i2_CFeX.*)%gXs-$q.';+[>&8LS1G"?e8c$c,_\o!TbLBR`%l-k:FaIk0f)StiQ&)'`7d&p=+q#"/VMVjg`S((Xn8t=:+Ah(%U>!3c54:*X[t20T<V)WfJ\18IF3ADs-[ATOLtFt'\p7j%HdDoV)QQBajOW`B[]sQfCQ0EYcUZ%1?>W$ZrM=E3N(/"W!Cd,m_8bF9%V7;16)4kIQ-''HLSl#D/@1l?18E(ndo??d$.#'u,(`WpJ,79YKMj"Okj_H/n<=t>j\7=pARIpW8"M$:lN%tO8JOfr0;BX*[R3d:0%jd].k6`q1:>n[uq9n9&@[fl0H0-R'PW;7bZE=pMe1>e10bW67rTnmnVaN#PLmu\h+kr>>P>UZMtHD!gq<#Q7fF+F0M,OXqbcioBH%.ER6T<*B8+T3+nkT+:@tQr.*L31>b#"XZR='f6A?X<=DJnD=4q$8Qa_B]u\g6t"sB?ofL,&X\Nm>]d80_J8t:fKbbq2t<W8J*Tmg%rjM$%/cW+!.pA6R9o#@%qX]9OVtTK/Gn>H-rB?C<$4KP`41ljEG!W(a&Qo.G3UM%I\8pqp<W38]*H4k8Ok1*NdfJ,N\6Z!ds0NIO%re;1Hc/,[H@n*@TA+bh[*8)B7L%TA/VHGE.+V@I?La-[&!g7&Sp;/TujV)BX%S3&_fYp/[g*)HIOA86o,R))r'CQFd47VbfO"h#,%+bbhFD#u2kJ<`>\jQ;;k(QR?Eg;MSNB2?1RE;.6,'8OmrI[.R"cPK=uH$rp4*I'iG=<5$_J);8qA17ZC&=#Z+fGtH-`/uO2N2qLO%;!D'#P"*[&P)3\rUaMZp+J*Dg9or0+FTDYIKimnupdq'F7lfN[IoHphi`F3O0CG<Ko1qmq`>]P;!;>PS2WfZo_a0]YSK_]8bW\oK%8ijr5MNRK6K_3N\>(e.q&+6F_DJJ"YQ(V^uHtg+:bF%aQ9,>>>!806K(`1@*jO)WJ0]idm/jCVc328&\Q/R_L9th\c5MhCaIS%N^%pe:YFfObYDL"N_Y:X><_Y[=Vd8+6&&Ifa[@]TJ/#BN-UK.5oW?ZZPmXiH?N[U,d0#__$-g#JQQ-?d+'Sk.hdSi/9Vb`>nY^%X]u9%rYIC7]pJp%lg3__4*0=;F5K?^_V6B6fACZOe9fQjs!1JUii3.Id1g;X1sHpe.$Ld^>tp[fpRD@/2F3iXLN-LqFAQ1:&d>M!Rs9[k%a)ku]2#\0/;U$C*&;"CH#^.@FZa\S!\IUQ2!&ts2@OIlgqPmh?h1W7Hc/T;eqp,S],_J>qU?L<UaBme9';Na5!u1VD[A?lm<\:N/%]P3'R;=Ks[h5]jDm3%D.dX1?-Zt%Q[VO_S!?#XOD\#oTI9oIN&n]=<kgCVKXpb(]QOcmWgs%DNJ.sugU8aK+(Ms=)59bn*Ob=EBD%n9smn"@'#2h6lpiY4m@((Q:#sN@_WrMKY3Mp=YGec#+_q(A4&Vpr,CS[1]*\cmEbu-Ysb3bO&!JnOa<=psX<RU\kf_rPn[R`+J_Q%2ABG-Q]CPTIbs(0qburrN6^:L`Mlsg^o5EtY1MRb^Z!MAfng(AA,X#RE_>tJ[lQ_-,IBU)=.A7M0\F)$,2&plN93Ct#(*fUP$Af"%ZC;bN%b;/LWpuM)":?%J14OW"nph'T@9`/^Xe'(pbcJlGTKI^IW+Pe&Zq79r&__YBg+B2JN0IO[G<(gY]7G9<Lq.#BDN-E<3:f&V%>U]DW!o&R#$U*Zd0\:uO/LJ@:"ef@LR"V/QoNdHkS'YAIegS2Z**P92(ljC1BAB))D(E<`lC;T#nNh7mWdPN9;c<SC!`g"o+pJJ0%V!Z9.4d=>^-0/MAVi2s[FGc(n#,G.e;/H<EV_dV04Q=o4R'f;@dfI!q_Cjc['<@Hb\Q$#a0mX#Q,@rd6"+lA,SQ(2o><=+Y7ono8%Lg(NC*S<j^%I7\2#O5)K!Xl::i$321e%/&uH:#@TnB]a^f*:.7i"''u+RB*N']I(U^;+)aQU*fejT=3[rucP*Tu(GYpj\fSl9Der%M\^&OeQCWGY(JckN>onlFU<+V>.(>Dq11H-S(iPik&&l@@b\B:nUJXP&*daPnb4DjZTbDLd6ZTL,jp!!dFZfYC6%,5Z8s@-m%PaW%C)aPaD>#SMhS?*LPI*A-qfU8o2f33]6HubK<,L<qagBR)fX.nAEh9S=AZ:Em*R:^/>.(+e*&k"o[D1@;D0,Us18LP+:?m`)_l<4e%P58[hbh?p@P"#Q5cm3R%2/*dK<>ADs+^6=IULTQ[<JlT9KG5Z*)A2':WCKKF67NUFP-A/B;sblF9D5A_+FQRN44J!Z8:>Ns/!I=I%41n0ua/Xi^M^Te$'i=DmL't)aUZKjVNtjZmApJqcr0mQR:_p=][QAVGBXM.WD7o-gN>Dr%^0IH3Z<Mh's(&b;U'j>c@-]]qgJ;!-%d>O]1X?cj7O-,0UFC^S&%&c-Natct*YE5DW.g[+NLu;CIeA2<)Je"!=6Y(X.-rLnjhk+&WCS\<&[oqI'E88%]iHV&5s/K.tlaTu6%*N].)k[a6m,hlc-!tX4uh0YK+hX-q]GAjD,p"K09'sD!1o37EK**8`e7c3Tl_Y`:[Jj#)Pd/]BYL&@S.nL$7CU%ia!M;!=MWhU4<%Vk)+Z;#PPtj'm!PIjCcSE3e_-_mtLXNTXG?1S&&rItKONjI8<R(-K5%grc%Mo."Bqia[j9PR]*Y_Mh,NQK:8pL#(^>VK-oEo+Qnb%L9Q9/X<+J!WN=haf.?H,SX<I;6FjBs!D2>aM;qhH@k7kp8=m=P5RhFEJ-lcWs2Y^h7_1P(*m#Fa3Y4kpLQjDHN>).Xe;^Ug]$dV;%%1([H+qZ@6Og4uk-X7@`)ZEd\O.(OKo=(<6@XsqIjY'#[#Zgc)k-<[GoLCCbR?O*AYo6bNCXhB8PqWBbL=<]]NXn'mb<qbBji^s,%j%WnD[^e9RWQh\[i3O=noNR%2D4W!h@XFX8,AGTp?M,VL?9pk5nMX]>8+do07R(EHK%BodCX7KR"`io+:];M/4b1Ho"B@sj2^6;'%LsA2Y4VHScCB)*hZl/qE#s]1r@Ks'ZUkHa<ks56I<u:h4A]Ig.AFf%TL>BN3-L=&6F4M)l[\^/;GXqGR.;SBol0[IPR`5$Gib)PE%CO/k<Mc9Mr2HAh7jd23o9>`)^@R2V$-^Wl1$s0cIG:p-jj+AnInm*h_G+5sh&(5,RDX!nL`-bq"ddQ\32)<nr+5Ob#*SrRAX6hAm%9SE,\@31S[d@U#3<E_2$*\V3ZbJA@HZ3*_$2INg?6fC_nPi`lNKa4$+n\h\2H]YR0H@ho<g+BB3--'-uR6jUrWS%dr?DPVAg`dQU%d_&(].!iGp3OMh,73h>Qg*8Y`\PscOp't*jBK,<,h8t$oCA2"t;te]d@aba'P.*DhZG<T-n41%7p%n;M*Npr<LE(\Nh>F&eqV:<!%V<pt22beE\Ndj%^)JNlGNH8G!)]aq4B^6&=2jUAL'5;P,Wk>ER]2so)jTPou:!bY&:F=8s6i;qbEtStP9^h(IY,DALs2[!$@Xf8d%)5RF<N?!]ZB([f?13_XoZUYM!b@j%J=2D3A*Yf(qRI6"7'6#Zln/V=b&k=XLQ@IlO\KbcF1`fJ`IMYKA"5Aq>lMAW=YQtB)6.nh+%+C77)B,O_0:O!=P\-%H7Te;E`s!+Q\@9T=agd)W).5Kk?X?(sT!AR_4&^D57#E?6*@7(?4"]\Jie;C,ED%^cW4)MR&V1*J95eOXe%rT6#2n;-59c1QV@*mJ)B0#R^"OlR,FcRhK4A)t#7<O%STBKi<e5qhut8o<h$Guno\=0J1fN4YZK^#^i79<5G&DL9oRO&_OlkUtJE%lZMi)X1`>7fAb)r;06%@V,^oekhjis<[G2S0\o?V=gQba[?t%gQrT.12O_iY24871G#+I(RS6S"]9Ui5j-_*6$Mp._=h&Sk>fRPa%_QHT[!,E(ti0RAp8C`Z#T?rI(e]5.f7Fm3UNG2p?*9gn"kfC6LV1`LJ29L(T6F@Q*Of>/Aat'V$[d>ZT3C^Jm2)./`0#haJY/*.X%NXauJe>pY\>'.Wq4_K%I$k<U[+s&e?=LT]hng/pI]Ya`;<?^bn&g2mCq&pQGKp._K:\UH$Xd1%W+u%f+E"@PA)bg#8I:7e=T\)e2%@>U)HGHtY?KB.XWPRA7*^b4Yq./6aHo9;uuhep9=PdggTM9I`_6'C8oPFX$qN]VslYoo?([/5MO3#A\B_j(c(UQdm,"#MeZD%67B%Uhq^^N6=@,gt`h9kKu6ABV21i)VsTDGb"2cpJ]c8q^KSTA.2Z97q8=@f('Yq!j"9`iBgTZ"L;LJ>L%rG\W4iqo6m$E=e4mq1U(NU%lnMi(IsD"me[sGjgjNr?ANR[DTC;1!MpM-/M^O"fpjBjOI)#H(^\E2kpjBjOI)#H(^\E2kpj><slUTF_:$07WL;"Irmh_Vb(SC.4%TC3Sgmh_Vb(SC0@jnRj,rSmGIiq*-.oDR\?rSmGIiq*-.oDR\?rSmGI=W3\ETC3Sgmh_Vb(SC.4TC3Sgmh_Vb>J=Ek^0c9%?[TRp%I(is8^0c9%?[TRpI(oWmq0`(Elh+Q![R(Vm;hT1up,BOkAohlb*L#j2hT1f<S=PhD7jSuFC[A>LKOo:#,V^mT9B/9RUUVk=?O"&W%80,WP9:"'uU66[:m`?fmJ"R]p\JE<#iKB2!>_m::D,hD&QH?..@(lQ@79J=F-H?poY6H2`jG8YUbDe=6PHdRc2.ESR:uVd@SKg1<%cpT'<>2U[I>_>tjnU!06)$?4!+cqNgVm'eI=%39%:Vq?4^a,]e)jn/uW&%_IaH7j5X$m7M.Ei+d;8Ii#1oZ'RFi:D/0CJ+;s4(n.%a3O!D;[cSVSkc\W4Z24FmGO857laT.PYd@7b&5b=<cq/;kZ!fW.Wn^gdqEmB-XIKKjA.5)S\;%HNiLeN<40WdS^spk)5W@nF&n/<%nu=6-0fc`"U2mGtM@Z.9>c6SHom^8:3%c.0=NBhJqhD-'9g(:Bg5m]i;WV#EcK13cG.Mk63b=(f[^3F6^/Q5T[5:ui_ne3GE66hL%/($+bSh=B[qT=d1n?.<]'!<=V^/lq#A0'VmLDr<SAg]G..%[=m.V<ZBKmAPXaI$m3@BnmgE<.D<52+T%prj5>G_*m6"WD_6#-7/t%8Bo]tAF%:`EIr:l6Uf=$nR+ZfcE-UW\017EEcWnTm5Qe-A85l^@5R&a7(V$4(#s]qJuF?ucjO[:8`G45([IWrm+'%*-^jc8P!'T0%G)f!)Z(T^WkC<7(n%'N547\LdbqUjr>`DU*_*1u!hHCiG(7rDT(LP'aC2cgMfkXQN,u.ob-=2n]=q4Gdk+4+A/)Tb]2I*Xb.^9\I%YE6oXN\RjnpCXgG!WBMU/r=uf05f*Bglknp`-)_L5!U@)<cMD'WiOom:4p,'Ue;&(dhVSDLb??6*7r4po"F,[7Ue%NFm20+3a5M=%ZPN>;,pB[V2'*B/9[Kmk6e890Vi-T7ZS;ih914g6cJ79FQgW*ChBLd&Z\JhPWh:^K)MriKU,gE,ooFJt@N!7>M&;)NkiYk4N!L)t%pCCFV/g:A4p)f^5$+TS<h]98pZcdg;J<(p9lAoM'IptjYrrY?qDK"A+#J/Fp@S7A@\h\#jfl;FOpqc2\(espq7S_M7=;)FMB">Ud%n*MAm<LrpUap;H-(p:,+=@`6hEGqE6X]tbJ6Cmu$4*@@.%eS=l?Gc$0VnD\`DnY-L?[1o:DEZjqceZ1@>=Wj[=sktGf=7^H=P:9Y%_KA>ECITIa6KK`*aBj]J$D%9P:G(8eRYoq0AiEcXrbk[im_<$&^W5ft%6O;%,ri*sS_HWohR%JCGL(Cu+)]uLcMfiW^aJJUZ\-Qu%KQ_P.HL^cGFlT</Hkj%W27SIfE[tmMOhs6F>d:'jn!?AhHd^YI]6p=eQ24BX!\%k`.I(AIQGuIR-E-nA:kOSnp^#cpXq$^'hB<hc%6n\f)JLO]E<\F.qljn4Qfmc=tDboX61pOJToF.%V(+s@;o%4m'hu0SB<c)!I=[U8<9SNbScdD9'-qS37`Ju!'?OtQ(e:puU.c!!)%J-_BpNh=QS/\t26B:VS6,d=NUW-I(L*!O8lMr2bh\a;OcRi72c#U@=@Ss]a(QkB(oeHr>3O[`^"[)k/3?^"2;Z]":P;21$;,-KPN%1=iuk7'bNYbE.)hZU=QRJ;!f5A1T6D<Cpt7=mN$W<Z?+>N)Olog9K^]:sIpd,r!^UN`J*Kn`2H&f@>"Zl_e<O`Rd(k.LaY.kj0Qb%DK:ToL*sWbB"X&CTkKLre&e`AXBS-ZK\+tqWn%9pV['m6cJWV/s5HW\^re[M,Dj;OV(;(e'ZLUkUA,iOfI%/394g)=kp.Si=OId$%4bu<3W/DrC2&"$A'oXce"'YqlAc7>Qhikn;Ju$RnTBZE#i3Wk9j@ZG4M:FFUEu7tm67*r:/puaLYj'gJkj]G]r/`RZ&U,7a`Xf.0%4c4k*c&57TQ^O;#Sh_>#7QDF.>]aOM/TXkD)duLNZ$sXQW8EP$<em%_M#aR7Si-)B1-S%3`KNc+*hSS-+!&i"!sZ_@4Qqg]+,DY!%'GnBUeV4N27``!rI``%$DQ(SdSP=K=%Il"<EpJZ]9m!:DN"SdXNT4f+3bq9a;\,3i6mo-o3WuS`1hoQsoa.WqNGVpqG\Sd6:CZWj%nH;XIY]17Yqe9l[2!1($&DLH\n]_o1nJ/f>Sf.d_r7!.@;d>((fZ"Tio\kQK'om9D"F*NdA5t"`p\c@T";CNC3RS2G.PRSA=msab%TY,6S)\[H.=H!4NoLF?TnsF_6b[a!f*u)&0,)6SG^#2,#igRsiA@[bTaYI0Jcdq4,f^?"_]GN`M$ZD9fU';E&32scASDD&NdO&eQ%h%2NQZ6cs%pq\A$jgLY#9NF;p'tV-Lq(<n6bqMScHSi/>)K<Q'Kd0p]`P/mB-..F*/Eq@f'D,g).c3nD#$%!g^.BP>DX/ZEo&RdY%q!%(5`iITP??t#",MJ8:A%AV(=P_nQjm:]-ipFg3Cip^T/Y7q@c8q]<8k.2]%]WU;dDJ%<(c,q_Nhgtg@c%CM-#uroiU5r>IeB?8%k9-E16T&N=aHR,?/Pr^?..,"qqUBtc7Tl%+2T_f?-cm51LuYF_PPkUteQ5XN%_Zu-G2cNfMuolV?oBJkAh=WCV"C*"n\?+Iq&O%N%qhWu=\/a1DP`d+C8Q&1N'1##Cm_c.k-Y5Q9<)*\Lq>m.VR5:cJ0ENs13;0--n6m3K9Rqk9F$-m6*c%@fRd8@"_DmsBACk'eDH#O5%dq3^gYWT`UHo.N!#IhoJ`\U@][N[Oj?P+5.bI;.9FMMgSK4YWKip5/%/B'DYYS4@"6gLOaqFWh(+Jp,=3MUN`Xq`sd#g.;flEZ7R%74H]R9U=9!BiC^.j6(RVB-L2XF'<b3T,E@M*Qlrpcg32c3#<9(/kq2p$uJsWDc3ZTE(8g5Ap?DDPl/n8<d%cXT%:"W4(rm/M%b__%-UbRg9:YP5R[q#HWRb%^hQ8+*WA@-2qYSg4=B1^pPHe`4QECGoYr/ZM%fFP=*APQVoX$A\aElOHSsB*aIt[+?A0TT1j3&`LBhDo,%G%jQ2LOMs5_gF.cOu:AMnD"@P=l]1,7d9#LMg#W^[Z/RNq90aD3],W(Sb29-Sc[$@l7'_"G!)f4Y</Sjfe8c=H:fCqBB;OPEN_AP%,?gM_gnYQ>%(*=e2*MdcA0!1.p8tqF]:%0.`Q:7RBDJ3OWQ/AK3R"Om(tVd,OL])-N6.-cR6>*Je4I2?^U.R@>IN3?cM]RtZXXH.%Qp5HCb^*`"b^ba2"PTDeh&mh%XfgZBmE_n3&1?Tse>uZAeYuOPg;/q9c'6c1S$g7&203TY]lPNYTgP+BFedo<FdZ6pSKKeY,a,.H%6>J'XL;MNc]=&9.I;m)p7cf1B8D[Y98V]$C?-ZE9B=1!:IHh.[:!?T)W"dR>n"PP0?*F?H%'8&SXGbP]]4*!Dal9m$Eb(;X%:,/q%k@g61=ianjFBMG($!fM]fB%tAS5uE2>,,7?ITB<@QF'B8G''cRXipQd$bO$!@?VEk/r38F@?'3M'g"m-12SiDmr)Rc11V4Sa\=$6%c"2tn7$N^NE&9B`M<niXcAYs:ApnVD3SHCErAm!tAf%U?If8:g,e\Fe\P5;rbmj[GmQs+2#Q3sJM1d^LNU,4b+(%=LLaVW<*iBOi%>HTKC4R]T$K6uHdh9E>]_bY)W5BfsX7#/;8?.QlXD0'#HAQb(H]6RPOYcu8m@J'3'9higdj9n\CCka44JkV@5E[Ksk31A3/5dO]\%L/!hg-!jq^iO[1;d^[l8hG,hc+Ze87_qIfHAFl:$R%a!U>6Q3a*gB4`4;D48]W3@S3B>>O'(e!>O/L&Vc=^P485[KC-8ce2ghD[\%]1kZk`H9IM1/g:s?l+?-i:uu6d3YN>2gP:!hP*GePf2Z&<"I'A+E??o.F)NnZ$3l`\G")KORue1eX&N/VHD1?[I=%$KR.L*":27[%8sb/;$0&]\Bh2;S=i;Ic;H=m,/#2GE46Fg(h"g:n7tBZp:aXGmBapE[8Z#b!;)i"5BXjbbg+"oE8_Cl2U%>LZN8&<;lf88`+m0TT%Y+>WVqjA_S/nM9D9V]%>13EqHpgr[7Nh$D=)(Fouk)VE90fb[//,Wo]g4[F?9S<YVIMXT&B;7SiW\]LnOG$Au1(C$2F#B,9=b^,M%")bQnk/!E->uOR"9B=ObgJ0([<m?P6e;CEpW7OlsDK9.X679r+\PBY-01`I:%C=4e3*eFI\D(%mKb_U/Z*e<;3k.f#GSRAo"gr-m%M3S85_f]gWAf\$b"f7J,cH([!3aE;-OFHHq2V2GH[U*mbT?aI"rU;$<H[)3&J:$.GLH2utfCqe?$4hl@\BbL*\?ZaM%3W/p'csss%gJEd*Ku&_N=5*!Q/$W4bfD'kDl`oC:L5s1"$Ar-si(K?`4i@ldc/X5_QV:_LhB0q=TV%V>np!BXA%'&i./?-T)om'8,a2f:"lkfO%JF[YDK4gDjn&rG6n:odAGoYBO6[sTKcU6oA4G:_<WX2+CLA&8#*l601;j$1=G.Q1nrcg00?oNA7n'k8T.<&>%ii4<R-I]9/b+pZD%p5ZgB,p&_9#f(Ui"U3P?J5.eKZOm3$0tO%@b+A(mHCGFME\FZMeFGS049aD_n&0fMf/m@/*bQ;ZL/4<[@])?7JRi)O%4M[0Wi7-]%ML\3\`Kp)IP$Ccqr/ntk^`n*e*1n.XK&6;Crp)NL>hnj^<cX;Wqd[M>/W/D8op8ML`#eB:k1C,lh7=HZ7HYC843$CX+sr53E?C$A%']ps$CWpYCFuH9l0$o9_==HOu2[Jt82>UrB7I7&5T97]7?<TYKRa?^#/g"3!EL(u!N`@g?Au7_#,YCeCS64/?3gLFpm",Prg=K^a%d*Xk;[G[k>lB8F1JGM7R`hcja(A4+@VO/[[gC]]gJT;ruY)W'iTOS(bNm]_'g6WJ>Io^ngLYGMWVSgTfg2Cb$rq6R=>!2stl2@Fr%@0:<mo[*&XrGhX?a!MdOTF)>1T;p"g;hsW;D#SEh"mTZUWZToAnA6Q%MRFd:Sa]RE04-bfl1!(@H7BX'\AZ]([cd&IfWU3X9=su\%oV\0O.5j1<CmukmF`%gte7QoHReWU(^ShGmC(^qghJ(,B#mrn@'4Mr(_"<=eZKSa(YdYL\04dYn(j++K:F6e%3Qi,IlrB[T;tXom%R9^iB`$]C\3OJ<%c%)mHK'Mp6%2N20_1FtCT:Eh+C?Fo=>^T;+Mbf<NA1&IC.=hP/rT10]XS.kg]=?uUT\sB\gn865>R*FD.!cb*%4/hEI>?b'T,dQhfZ9#g&K<,ef`t#,@)cX5$MQ#f:ca60jeh`BZ:=V:ANMN?BcZ=u<4To%j1u/j&mJ,nUbLm,XjO'jtW/a_j5<\Rn%)FtH9mSMsQ,qaL4;O!^LceAA,*F;dhgt&j$Y\Qi=[r&Y1\qO85K@XlH-`k)6(X]s2S'o68.hq_N'5u&,Di542l4:L,a^K7UlE/\O%Sk:fIM4,X-QFC"cl6/BkLU.t:3RY7FcIS3'Vq>kSS+Qg5HcDR]Y!1SSEo7kC:.*EGZMef[=33h9jNEi2#"Y)O0WJrT7,(jRI5uRq%\=<GF)Wu5*dsWh]RRog:9HBic=Mri.$#A#Fhh1(k`-4p16_&1k]Jne%q0NZAgCUsZl0`7hje8_U*nnOlK!'.f3+\OQj4:_VN*VbZ%XaoK6hhFVMgR+-KH<6]fKk&JOT0]eON10$QEZ0l[8L'NtPB^Q"cDQP\gJf#gP3?JnJ--ocK#!"rntLGP<ZQ<GngZR-)SI0'"4/$_%k/*c?eVP+J%HCB=mPq>4_qI>mQCa`h%9UKsM;L=6T2<td3h7?Q5lk8%I#YD7/;2oG)[nTpikh2#H.R,Y,6U**12i4kjSQ5HR68OA%`JrG;MepA+I_*7W$*0?07Q[M.N+N`04)&`L)IdK7Cfb&R)Q80`b?:fk1bfAE#rkF(022ej?4t+9V)k;.pRk3W9Vjt9ldKMpTi3(l%U"`=mD]cN48@>tSf8e$n8i905Pqt9@K;R(b<b491-Uh\G'W\.kHm,`!VU!li.nWd9He;iU]'9-[$j?U'%Tb!2caC)b['mO-f8JdK%Nb\>oIo;20Ta%Z8_!%7Bq?DqEBu=46fPSlVXm'_?p6[;1D/%^!>;bP7,i?b3\'"8q7QkrAg"/.$=)JFo$bGVZOcS5D<GS6'muRd8%pbP>k24HT!?!Q]=`dVr=0;m7.k`FAs$s9to)D@`,[Jn78<1HFo0mI)1?srHMksoBU>IP)OhqG4IZZB3LcI?`!D++oc7H_jMgV[*N%XTsX]D,=7_6*5+4`Cl\;Nm]6?U%j-\V52O#EHY`!qWb9u=-]RX,.'OL;$+[%bU/;(875pK=e@'aB&7U/BsKseGOig]a]+j>6,-2N%6$"JcLJ&<6_gH&HoT:0a^#gOU-ZQ]f`"kLF1?t9k;4"?.2$ronnQt#=f,;]p!c(0o1Y.cNHg<LJFgS>Ip>TO7%e^U7:;6D!o9HL$%SUka$.u:V"EdPY/+5>&Z-XHItb@@r2>Wip"H0]%ornagge#aAVe$X#i1clrr/*q%$(EUQO+#,bjf4]E6;SI8Jdc#[LLTB($T7Ep5%=ZTgPY!:P3HI3Ak%_$lBCcT+>-[V)+9XN^F5mph2,MUqo@`&e=Y-I@\ZScTh9])^,]M5,;%1!3;D.h+,es*VOrMoftD/.T,/@Mql%?J;0Z"reeV0sk)qn55NsY<%#?FsFn/Ad(Atn4AHY=_7qSL8u*M1M6hTZ=7/ma$2V3D:a76OM1A8<a9h`<I<!q&(ksZ"%M*dKr5q2%D=Q)WOL$h5?L^Ku/A0!BlRmE->k^goetSG3f3S#@BFV[Wr"<2B"K,kh2@2O%VK>PIf(ckVlu:b\HqS%+[]Vu:-8UD;`E4K$UjO#D%%>,>%BF;QrVON*H'>aR<QI35"5!oG4Y$$u2C`RT&]>:p\/,*:-0;B<>?*uDr<bAcrC[2n-?"7ZQf&gcAB!jU6JI4+lT.;G?EWE5b%97%V%D9oUXO>B;(&u3nZ$hS=*F'<<7;ONkj`U@MZ9"jtt95$j((Oj,j**lf@]V\+^Y'`f7)>I4/CFuY._+5O".a*a;E3UnS$irhk%8TF\hT;JnG:Gd#dnU?:6Gs7.sF@bq#<4^l>MD&`!es`"i3VGY1WV_jlr&HfbP-qr,c$G&5Ze6%TdDX1uaR@mu53Q)ACMN]+PAY;C%!S7PJ2Uu`8?sX0$`=Q@2lMXH%>>e_Yi,tOKqTNM6f@+H_E$*bF:GL&/Aq[g]OF&"\D)4P&-L"A(][M1\*5G:$Dp'd$2CT6O:*B*1%m-m`D8%<?6MR^TrY;aL6H<cg)Pr^UriZb5/F<%AXOk70M5=Li7.s,P`Da09T@RP,nT_AR5m:R5Wl\DaVIN5C/r6<@$]+ZksE/.HY%n4-G9lV>@f4B;Kn2#*ML]M1#(B`dZ3[!OKYA\F^oELgQ:DYAM_'9b8ZNARgX@a+GE"DXuBfT[o+2i7-@20MZn-BIds^i@p_.>$*I%Lg&mp,$'#\kc"*o3YPDT$cu.\,n%(;hKhcaW[JEJ^J0^N9]F&l&j!%W^.l!/E2pV$m?0NlS]SH)RcU$qB5=a(%-*^:cb-N2X*J&6%%B&I_.(t\`SL@XJ5:?!O-LFg@_n!rc,WN]e4)RWneThhAaQ]0P.CSGg\%\o,b_tB/pr59TY;T0[-^2fO05I+&ZW:9uHs6E_eQR8s%pR#7FRZo0W1N?H&^hldo0:]tl;VSoagnQHI>Y?,2L1SVWig<e^;S_(.("`5l>%kT=!nu2`'s^Sd'9],EPN#Cgl@Z&Fh,_d`,WS0H%-l_p&Rd]OO.P)3!>?[i)Cr\&,=&#\`2[n@+CrrND.;e4388FnVju4fqB;`iRXTQ./$GLaiKBbRu\\FY#)d*L+i&k'dMQ:kBgnC7h%;VY%tMC$;l6&TaT3S(:^p$8DJF9DK)`75[.H31AgTY";O`:>)2qj08k8=KZbY&d;I+uag46-/^LI@W/4K9A.J<@u>jcrs[(cs/^Y%eLT(U78jUjV@J_IXbcO]:7WN:CD%QCa#1&DJQm3./.L3Vb?A/fN/P3nY!l%tF8K_)eD"*pk-3k@er6Zg^)9Eln%)X4B/i+]O6/d^%.Jn7iO9q,&RM/b--JBHQS$]`VEM>WT&2Pur1=n!;h"k.:4EN<i-$)Yp[FinN>WfsqVSoiF-ANHhFHeuZD9sPbVN9).RYiUGc5/[[%`E%Z\9iPuY'\ejmS&F/)&\H?LcVI6;<0F?)5:b2e)/%,/.tc66'tKPb[+1`_L+ic\:khT3iBBe<ZE8ideNg&CMg7ii=`)H.Mn`'@%"F`I;O&SD?9$e%<jM:_HH;<K[l47.daPW'#O*>SLU@"BF,7PbDi4RTfR7^/Z.*CZuH9^"bE*.s2*:J<GCrPP7pP!)q6[8f82Fr\;%:eTkD;T:B5gG0MgUZt\O5!md\*Rch:"_1_9`1#[Kn.CHdku-1cIHYBI0\uVbOC8FZksurQnXrDRCNZ?[Z%`3iW<kQEX)'G34AYA/%8]oS$Z,"ur+pl.i@rOg9aXcJFa;jAC23cMLNh)`_(b>I8+k0[DU@t(AB<9O9/aoE+5A)L>E%WNccVCRRgfr%"l=a$fgX[NQkE3uC%=h[l$>#_arQg$KCkkIF>gV/DF6mn1.Zn9JMk)>PKR4"1Se)nt?:8^a:KcekL%ja#h'eF_WE/BqoC:9PXaC(,Rg[$`<[&B6'doL3V%k)\nJ<Mmr6a[Q-Pf"$q@J!'h/EWA]I^p)4Y<Xn=dLZ_>sQ(An4>>qB=d$^m`DPPFV3_>M\:tblKQUHg>0?)o5V0XtU8U"#jr-9_$%0pqV?W?1rE+"p]FN40'JDA1WEWW$D`CE&Y,S#E]7=PY=(X"&,Tp<RKi9kq4-UMZd7S2EC`@e+=U>;,r?PJ.0U88njr'L"jH36+&,%7nbHr21GB,P;$@lS[TL.GH6\uK`jF0eX'8''UD33Bi<WTWmYl()Z!#s"<&]@(3\?n]NbrSCK0T5C=]bV*p$JT7.6T*SL-bHcm>Ia%JtWDS8V+%dOs=VKVj(Y;aHJ&UlN:=^.BhB!15fR9H>b,uai0:@oO<tkC_$Rs"Wtfb?m;BhUhPp:OApi?erW*O_`jO1"(Kb7mJmA4%&q*%7fn:AF$#X3,0C*PN$^@*jo$a>J/UCROij@fZF/fVR[;'n&3a+CP#LsQW,/!c#,]O2"mWaMrjM6Y[qAk\5TUXDZkD_fKB66f.%gJKQ4+D'"kNmsm:jI]NqjDGb4/%Lbn3af'VlqI668PqdSe(%'Qm!mZ14rcLf)a/s1blQgc7^p)NTda`+ga&r":1;^*N(YT[;jOHV%%C:=q_@?>/fhK\-C+5"K)#B.f\?-10*D^eHebQ""Hs6nlYU-]IB"jn,W`nFti9Q?rNGk<ZDKAn%5FDRLNK`+1b11D[5e3q\[:iRO%ad&s2D09?)1=SG+Q)L%7VKF3M,GfB+3]%[6?U.0>m&<FpR\",3h+b$+HF<>8I9rQ`oB#Phnc28E,#VkZkKuhn+An>hc#B;nlR5\c%kL*)=*u@.Z&gonBIlOkSlUdk8:TZ0"[ALtMY"8=8:^W#j<4_-FoGjDb9rLclWAZVVWpsVU!L6?WF?o&G<9()#P\Nh8X[SV9WNKTr%Cf;X>oSSiGB",A<BD?dHLIQ.[T/`.ZjKk#@,+5LRr.;2d\(FCq\>IuP1]$HT.Ceak/GD'[UJJ!qesMHQkEXUBI<<u)<c)$J]P@&8%E>bD&G,r&Y2>)HsZ1K)Q694tKC"=a.C`Dbn1O3VJCVOZs2ht-e\L5BIB'WK_A8;?]%HRd]6/c7'VlXLiC)Cf15FP*>nLRY9%pc7I%MpDoY<RG"%?!Hd`HJd>!_>$@QaHG;[BK+%NTA<W+m)J=tW;]S/b'TEu`+Q#<8r,,4]6p+?7Zu]nlnl=O29:,&8?_V*D9kLaArg^p%(*C/1K]b.h!br=WrMfNIHHba#i`%HnTI%7+lh.a\DtpZnGft:@`qjo.jHSlsDKU?87qd72Xu=?#T`\3c%o#O0\orXiC,WMt%r!Dn%%kQok\HL?Z-'4q*fo^u6c\Vc[l6["^U>*oMR<.P1'gIIIUZXC]Os3D0pPEUn#kGMT,@?IA;aPr-fJh5R<6lZVrFrrpKT\".fncT;%cuZYB\]-J9(pCCNa#BOH<[Ksj>=>Md</SnXA[F:L]K0Zj_'\=6VdA+M0=jp-eZn-Gecj5c\"0le'IC*kcONX!Z$)thgO`Tuf:>_F%Z;n<ZZ'mN+%\9YsB]P*i.mO\ik2c+Yf?g!\l+`Ek(NBDR9i9jd]d,rK.>\&@6q'N>.1!D+8>M<N&I#X5`2s>E<2deEeO6>aMO9>D%'L`D8"JG9GUS>i)U*u_$&[[OEe3O-g%%*VMTY;%8Ai\*GnHJo<`^KJ@Ylert[,(406A<b<n:-\^j$15pMu"35<V=e?@G8('(JGfd%8?4X+/O.T?Kb%Ie(?3bV]8LO`2TPh@dm'4aBThCMHs_m\gRBV?`><-aq9g&'RPk7kc6k3gBW?8'D,FLj,]+2Rju*f\rCF/AkZ9.q%b?[[lH7@pU%K!H)?YToRSLC^B/D)Er9I%I+&a-hEo>cQ<pJWFQ6i&eqr`;cR:2N"X$?p>[GF<bWgFU0YP:"p/$9"l89bQbeWD6Hm%C$j(^2(E>u;QP_i\>[tL\OPkl[_t3Wfc8jW-f"V%f4nGjgK$u#D`%ltH9:,O8Qpfg?DXu<eO&p>O2uGI'R[UQ!\<SM3HX4i7?3j?%?D%bB-@\,lg!SJr=#8/\7_FL7rm2?/1Bm.#`=1/G[&Mg)(O^%;>pZ^k5A=+dYDSe!"p%9,9);Q9YYGZ_T],r?&I9!h<_1T;PlqO7%6u]55lJM_%6&/%Z+Yl8''IaIFn'<Q<2:C1NgT56NQm"XHJ^jCs9nf!a>@4&X96;pQMTL%os1h!GDYN"aRs4b-hVHq#FM7B"fODb,%(2R3GYk:XC#(1&mUE0p5l5B)J"rK:'dcT0A:J,u-piQ"^g.RHN3q71Cl)Y+a$\/Nak_PFGS`i,)lro\Tc8;,*4jA)3`L$a?R)h5@%6P_erp"[]XQ1HJ<FlHng8!FK3D8M6)4dP1mQ%e&QJu3R54nB>BZA,T8WN7/Bh5RL1%bE9%C7U_mi^12]:'!rI&W,OQ#\,Cj\4E4$%3^=-gD1Ds'8H6c21aCfqB92-AJGFkBH)BlVO_L?42kk23XjND7ZQK66Ro(H2M=:bMjop\&e3;C9LsSo82PSbt,XG+fL(jsA,(`6D%o/X6ma3l'/BP.f7"_'?p]%3h#OXd&/lsoVSF<gh?k&,HXe#n)/COa"]leFD-#!B:RedQq,,DglMYe9%pFt$D#nPjS,^2Xf!IAOgN%TrIX".QrCan%&\.0:']1U5)r;Q9BN!3-Ae`q`1t9BP)1K]r6rfD^7o?dji2>8ZrPVCkFGB<"m&.]s:Wb,r>g"#I:dE?1aVP?&SV<%d8`=oa.!n%3"`-!cIO>WD<Yd)pYnRdC[ZB0mG]4V`V7X:k>c\@>'r3A346M;_tPc8^P),/%@_Hr"hDRA>kW1p>g8_nGpj]qAJRo6%Y*LrWc$,rgBf$m?FAZmah'.'03rEfRbdPDZGOSFa[nQ^7]?1NqTfo^1P!m7AZeh]SC\6]XJqgrYCkjB"E+.Gbr`bY]*qMm''tZL0%i^'GO4L$9l*ouZk0p^+gW7goiFt$KG3WO3>fUX!aF'L"/r;r,QHW5`k:`W0ke5FC'NPkp6O6FOE;Xk"I4&icF>kD(]:?GJP]C21J%hbt1.UJWl]9:e))3GTr=;6FuR5.sh6X%M5_q1M=Deg>]hBfjf;9iG>ZiubkSO@Va>NqR96$gM(X2W:+2qPWeAjbZZ%p$.T5*Uf=p%^5Z&=D$V;dEP^i(a^j7ILqaOI:;UG'IA;25'a;Yu3CC3!Z84Nt8dDX?3HfW^B@f<&;5iA"bT>F\1i%6e'5/*,H5+_TPRt7%\h(@C%U4hZs,FH!Z/@g?R6*$^9XV5&2$R>Csm778#r?LV(Ma4LSQ"5&X`QJMY/>HtX$*QW&G9@,fe-2#tIq863KOnj@:\@I,#iU]C3eGHS%0j16gB(R5%@J8sgqN2EI'$:Q]VM_;e:$:6]V*SpeDJ6$,g^4U2DI^Gl%Hpu1piZ2_k'B:0O(PU\Qf3G"8Fd&^k8'cU;>F(mMKP(7%n+M,c]m/1pg<shJ@;etDY@A):oRSf4af]D3XjVMpV=dtA0='lk);XCXEP;&LD7,_4nlkT)Z;9[bIq]YM,l76lQrT!F.SR>"@FiXH%CG"[K4_@](\rA%X;,-1V[GB;CW[:Zoghu41d<MNZm[-1MI26]@#1kS`XKZIRf4)uJ)uO_k&6UoffY#&)ULMkb'AbU$Oc='cD&heK%=Y2hFG*OC:o?QRA):_cT7])?K/$HH0fXA9AjqupSe\p[q],8#r\H_@>([)FKX/K*^n&Pf=pPOHPJQADgGj()qh4iuQQOIpD9(or0%#nYYpR/na,+8dO$q^DHOr':7`i@]e1&=ctVfOsCUrH/3fqKd1fL%soS3rKO$TBdpi(W19[nNIY7We5Rh-PQYgYUq0h5WsM$9PolA%j`7ZU_u\%[\/u)fRGd6UFMdRa&tgctk!pknQedWW"O[MP!CCKn5N?bp#^85Iqg%g.K^eST8>H'p*KSZtnpW&MIQup2Sr>u$rb--/%W*LI^9t7MI0f9F&/Fgh%IpV9*n&ogrl==fg=?]5f:\+?W^?>/pTOeBp]Y7HbNn<"(7(-.=G:Z9jEjXTrWH.[M`0!\j5Z*Cec>HWR%ER1eg[G[EQ6W-'U(!;]:'N/REVce.%Y7?oE&g\`uBSrf^S@SXLN^^@.3b"4@0fZ=W2<!@FCHWiN43igX0sO?U;(ARq6FD\G_t[EC%U0jl7F/r?CaZOHVCQI.dF'U`h^3=\lM-[`F<gRH0@#i+M&8/n.N^X_A,-]'i&S'5BRZ%]m@N?=0.Pb+J#fs!%PWn&s8d:m#iW>Qu%d#S28:^JmF9l2pI)BA7$56;IrqPe6%'B=YDQQ7gn<l`u'9&CKq59`P@./;:FEu*T/3,7b;]IoE%,)j$708p,tEg7GBMq7d7qYm(C%9'BRpG:Ohp,;L2OmkT6<^c(Ycg8OeH9B(RKYW05'T(fZ7oZ?/XAa`6slCGHi?9e^RNd%nW*8"50Ake6Nl%kj9_KoX$ES\12WU.E9%p2ne&Ffe\6XZ$3e4UHUc*BpRJAlD*?OJiHgD>rM3.ac4+q#W#$d-WlKb?r8_c#%k$]&%amX5;Q%YAqg.lBQ"Qn@!JSX$>Fs`9K"F%G^V+Rd0/j+3o?h^-urs@Z:[*PUmKWeXHK.)jE'8Ka%?6o`hoK>FfD^]<?a^=c3-/q)m;;FXtlSKl;shHUMam,mBl0pHggFk9mc1E%YKL-o[X(EoN;C2jcD8n']W\WIgWJokDEFc[O@0n%`V-;IBGF</rF\OkZo:SHEG$RW\Yg@EWi++e5.2lYj['K4flb!f%1i<oY4pc=%\22lV\(Z/[Y'7GEEP',u^M^a$(O!:DgYS@['C/?cPua/pd#_h.)EM1bY;8Vk?h8kT2I<W#Vl^^Y8L//;r)HV4<6ZO#-%/m[<)QT3%/4drq'bSd@*GGORhU;U.-@8l:dQD=%.T<l#O%%E5_Pa$_e'mBuDD&!lI>%OnTY.cI(5(qoM@W:91UjNSkScJOAh!8UOQa'#ZBZ')%Gd(PsM,Y$HCrA^K"[hh<]TEo+7T*b4E[rXuc9Ej2\ul^h[$DN]%7Qe;@cIS:Sg_W`Uro/P8Lm'[ptFErBs6X=NV'0dj%7b[,Wn+4%4[)2U<5E#g3kC@<(fbl-7+jHGUX^TrRY4't,=msDaH%fdG]dGN-E_-%m(ZLA>=D)\Tn@&*7iEh^nJ81>@b#=P2%6*1CTbQ)NEBo4%Z>BlI+O.iEW#M.&78!+2B.S!O;a*gJ6qql,TQF5/`1$0n"ZpneTJr;@h<U2/;kcXIZBb`hSNcR=He`>gBA2H=G?JGNFI0]-Eb&Il%U^AC$A):op"XR]1dQo29@m_/@,g_$?LUVM'=YG7TDPBXL?f#TFcC/"#X5&ANGWko&g`i(K.#4sZ'\AIG*g/dl$7W-?;Jqda0+05s%7Ob1VT7]]^BZ3bZB:Y/`/oe62h6W50)lAoi't4\C=ddBIBU?,gf>+Pd!oPZYl>:n*BHOBMVRPo9;uOtk%=a=1H;SAGXs9.5pH*Sp%;JW1Jp=j`OdWWAY8Z#do[C[R%[*iZ,a4FlEbDtI(_`fKTXp%jM<Ed'[X""=\qepQhO-3Hq$`\)m`&g';g[C/GM0@WjNq]oD<n@g8%qp!g&8r0gc.^A\)9Qm>'I;U@c8IUAO"]+q[MrBXnpb%js%/9oND;ImncdU^6,[2t)a(LNN[AToo[S']-?%.fJb&!MZ\]=S=Sp-Xa%)6`@kMDuN\aUXK0oFj@AN6&CT8<#KhYQla.e'$'RZSTq)m[T4a@%PK9UM9#;[70XM0/Kr#Pj@q.Id!V/m\NpdZ'"]doID#Qn!\B%%&h_eoK4M^`:Cr7g1*Rf7]&;8;$f8lDp9Po8acGD*G"b14RN6V'bdcC/-oM!C'7ne/Ac+QFN9ak`W7h#@8W<O,Lth^LCDhrI.FXTK%=^7/?\?-h3+-V3LH>^T8BaO630;A">QTnIt%WH1a&d^8:nNTsD_(EcW@R!Y_D:?k,D$=,*)ETD7CBFB)6[BPI\+8<bGdht49YjHT%f#^h/bA=iS%pJ,:Af?kZ:F':?\]p<oC(qW;7JUmnZDPDi;6gAUTM-b4P>o5ZSC%hK[HAlFF>RuDZUl%JB=@N0.^stWl7(j*r9BKp%'[el%Z7&[?'1]2E7q2$L:>3#n#A%Ee3Rr4cDWZo0-mMD*G`pb+@qI?'i@)D\s0O_%f9Ui/r*OMNoX9-%)ig8>\Mg0SSkY2E:-Yf\%PC[j/[_<J`+h#CW\Obd2fnkjjTWo-dB[3J%M"8>]$Vo:Q##4_]or@)'ZZ@XfR=kXlNDCrneVufO`ZLXd&""mSJgmFHmW$]gh=M^X%<pYpk,Gt6(8[gG"@_L;O&`2X9RS@+5KBq[BVRG6*1(D]]e`QYAeI?>5g3QIc-@iYKJM$!AR^0OJ1cQ.N,K+!N!^N!W\q\cel3S_m%!0<qWj+:ss*,=e/NWY1XDDQ;%oM2Zi-7_L(M"-<'E6&%_e['/T"d0bFaNm@u[0NQaHh=[6[h.-FT#_;+0lX@SIa8M9;-h'`47X_?%l(-InA7BZ*N3_G(2PWHTG"fI_od:shiB=[8@CBZ'nUV^;V26EY2oks3W:_cm4X-oR.::c:90"u7-a5?TWii1ng2@Tl*`hMK9lp6i%L.beCM/,lVd,eVe9q1+En?:%rDE(bW+56j6:#Ng$-*T>*jfZ+"D9Mf7*HkH(?-J);9$qNT@b[^2Uo56'B#^tkcYLht,?*AiLNc@e%B?lm8or:KUm[1j]^"Pt2:)`G"P;Ztc>B[<snUHT4$SDbjX_8iK#Pit=dai-66Gg2+15cK7V1hpkQ<!k1-"i<Z]q;I\c<b\cWg2i1%XLD?uES$^u=^l<BB_G!k`pCU*F`dp!A>7h-a6_[LQp]%:g,*g5M6s3u1bGet0p4Tsn!?0d[;L<Hp.JD4AFn&;GAV1hF4T_m2mn"$%l9,BIQ=kki7RPp/eNK^sh'cpl.OY5'XS?R'TX\K(2BW29%M9IZZ9[&1Uk*KBYc8iYVChpZR1iOU"@J9rZ=V(2K\3_OS)aNBmKIu3%@a3"W+4NDkUN.e9QP)^q)Oh[#5$)LFPQc.GU3i\hS/?nHET'D?:I'_1la&P'3f*-9E>ZjoM03\ih^?@P;m&oRr/I6*F2u,2;Z?p;%etqpF(;"Gl^H`Vs`1KEH3EKkS,d3uBqbi0.UM6_j:u'p=\cXX929VMSG1^N.nL06=b2G@`$bpc2oVUp8U(t(0Nc^+=YBRD0iq72U%d\F6#br/"W8U%GaT?q1rkU2UF9F`bF'uB0s/#?73:0IEmWR652P;nm(`3F@t4\'L\jKVI"F:tiMd<$%]k+_+?Ag=D=4\Qb\>MI'F%ol/[&*kej#gSu<J`V.Yq&*8A+-u[k>hjbFoC:fT"bdb:;K>'RPg/77(LJ;Ip)g=j[ah4la*lO@5jAE*Z\k%-)d6-Ri!mY_F(WKE,%MGS2H'Aa.=g$DfNm!uHm.JOT3j4=kuZU9<=&[S1u$O')_9jAi#+@60^06e1+-nD08^0nH]YDt$fmFd8E/3?=84t,WH[)b\aJ^`RS%Zj2.'CAEGQ:1hh19RSK!?TkrDS6u6]WI?cTYSKt6E>D]A$R^eBMMc7Vr^r5f-lKTFXrAZNC,8;fg@i_dp6m%KQ0$)(ZV+/XT5@RP%2,8@QqKTDW[5fWm`n%P09/uClPd'1m%oiA1-FQ*glI^cd7a(h+0s.j)V:(8)6Ulo+9N2-!FfB)dcd>P.an(o]`6i.uL^IRaW8s4?%6nRea+brs7-;i,3eob+&ICbm]`(-7u`olY#7lX'\*%`_CG!9F3j/C))3l%KIC[JI9-9be/:Ju8[;btYDT[l-RfWf6dR!&A7qWHGk%Z[28;Ar&91in1_`rg]5#T34N5$D+rBK-%)->1An!>iLQ15;>J&L&C%nqN<#O)E=X`W0:-EF+.p<<iaoORXcZKO!O2IRoH"[?#edu%cmQ0;Mb.g6Sa&&iJ%E!B-`_o0J0a_+,qGo@lTVR)<9,0W_U'KUNKOal<iBkPTURtgX.3-6\ppI/-e6g3D/GoTdGj@K2T9?F\VHW3%C6-O"1C/DrLl1a9hk#;nVE1F]V&c&EA*\*kFgo-DU(WiuUPm<-Vmp&"jadI_j8eP*=)bp]bGC@S2M/2R6)CMM*,M,:+KH<(c$E2L%c"ihirMj2,2:T/mn(sSDo3Je'j]L9g)ak(Sl^b89mmKk@*+BS]+J'7!GYIc#*'@Spj:rl,&f/"a1q[,[\#[p*916Kp?Rs`X.$oN-%NH`Hbom#k].=aY]qSW365/)=Bl-9*D^\G\$4SB<RfAFDO7f(;0Y<IA\rUG<HOq)tirUp1CQOcI+FgQlgOoZ[HGH!-+:3YP2ramS-%aH4,FaCVM=+;a+,&,P>Dn^mfAr:n#6n8EO@mT4W4p-4>ED\2oghj4:CID.K[me6(l!aEF?"nIG`h"CuGp\;2S^^';A/cUiTIk1PR%6k=TNh`Ub[LX5,1[!bh9/WW60#iTpU5DbN,/_nBq9RhGDU\jGB(oBOcE,mY7]TcJK$]Gg6#7boa^8G4*k+S^66!h>k#geo*1bBb]%OlJU[$?nZMju"8pNq]NGXp$Bu\B]c"/Gt\8_&H:G5mZ8Y(4^o&mlLq6qKkGcfEpL<r9ih"Kp:W<;d#a"[%L[LI$qC5#f)%!g/m&.%ALN4$AM;VM<`nP^i/q44Pi+3+4SR7LD8-.Z"7X35(+7jJ_]I"7]7DhXZ"jJV@E&J6[<T;S_brOMKd^"U_JrE[",jD3RBF\S(F,YO%"jN.G`0VFW/n\V(o=^dX&A\a)33H]PV)$+@gs<7@6RXd5R<=VW/U;PKkI,<tN"ODb_b(c5+=_b\naR7_p2I["/hiW'\rSXh=lrVL%,G!!bgY_\M"G1Z3"pCPLr"0E$L!ei$)Fh5gT2">]J)U[W<l`L9.T40R$hDN8`G*+Q)<JL'gV&#83=U/V'o4iWb\!@i@RaDH%'PMm%".\'sdrgG$ds[?la(F.9p#']KXOW##\`jr>j*WeZo9$4,?YC\Nrt=&52_Z.4IPbs*';t696'D5Q1VDj@^_"un]I^<N'(n@n4LP5?%67!$hA:q-LnsPOK*f;^bKN[SG<YD;d(td@+NuTR[Nu`87<%(2JH2Y*2i+5G>ha=an9rBd@RA-74&/0^kTu+r!6@U.9Z^+\6ORSD8%3&:XG^&X?nSkk;8*BXlIZKNKjA/DDX^]MCs/[7T!H#7m4%F``H6J3^SbopmncsZ4Q=CCXC)"\TKK@mi7=hkJ`=Ar1-&_<2ULHI^F%lQ+O4RHY=**\m%ZI%8H0S-I?\^a2l4(rfi6dfCmH%XapJ%(C]H^47dcA&j3\n0MBHXe0)*$h6FAL$(Kt(gJNBF\MYb,&u'K`_#%7%N(_1f"@hi[%k6@<i$H<H_mUDi6F4G:7rXHS(bgItN)Gucr/8,>RTK17.\+::F^\RID"F[Wh/0@eLX>EHmT>e#*ZTNo2H4ngJKA9N%ro0/j&ru7J]>W#=(Ys^dQn]!FMnQUEJp$PQ4s+bX(L0hQYT+*]gD."nA.@kq/*h<knfjmoSUpJ%cA1i:Faji9Qn.6glX(g[9t,`I%Y+PAQ?1SYo\%$\QY$`1iAAsm7<%r^U41Dq9"tTYRYHo0.`P2[I*Ql9NW:;qO!tG\Q,*pCF@.Mu(48m9JrnpPI&37H(L/f7dV,<ZF%0DgepI/d:47ofD7rja!9G3/U^Irdi=en@YO3YKr(HncC7;"1TKY;hf>as@)#qo(OAck.iFr8e8j<akV$_7#O8@.!#<%du>aE=mQG%`5[p2ZAE*`PKE&PCCX'>@$R3r1DiGP!XJ23C+oW?LqmE&RJ1;]f_?9\""7Rbk27>YA]`_S!>"9@"D?YL(`;>!K`k;gb>P3+TJH3C%^Fd`b0ql)<OED+;LHH&$Et:]E*!nTkM;NGGosG:]cXj6B&"o_\iIWF7K87=D&26kIHNogD"t#Ep#WS12Hf,BCN'*.-Qs>)C$o0ZT%qsF_"1pg*++NUAKFmfGqN3Ychmh'N]EtVlK.0F^Rb.%u[nT$q=RYN`iPBA%ToXK3/%r30R__Nri(6%2e"1r<,RD>KEVC`_(IH9#)%pUhAR=YdM0psBE"Ad!0^iWfS!O27K0,qq$$?h,a;?mN:@5XV+M$Q'MkCRbqV!o?BT*)a>aBc.7;7\7RQ`?`bVRG+mp%[Kt<"TnBT%Fta[qEKk+BV\+m^KdEO'naEu0o["_E!q;9T4N8MijtY&8]_(C-+>4&oo4Z%=77h40B?NmXK(hpt%K`T[j@sTe:^8%Z&-7D%Mh/bs%!uQCu+A]?9)?V)&:l*(5k@7i^Ga+bL:D""%495^kKLHFc6rc8h"['jta>!gHG+9q*FqIjK"!?<=9G2h=Q8a>!N)V6;)F2-_E?=5c%9ldnD1erYkEROHHQ66Dp:-p7=T7R(AU`D!Q!2i*mGZi^6(6UKX4E1O,*gLFc#*&kfPkG(Y8I(O/,sVO+Bs>(<]81OV/uC@j8IuFZ%:?je-eeVpBos-?3f[+>@<TRM>XRQ$6-QFUfkgGbiA!Eg\kZtIOL9*>6irGJ7'Bm\d]tG!C<-EAFIR.bcH`Nr\i_HDW*)i(,j`D2U%?=X4;Ne.L/T'"RXkAlBbYFX,)Qa-\!/8QZo1^Cinbud/p";iKBg5lY^76)B.Uk;K](jStV!i^9$qkWjAO$STi1ak(!Q+k96&qL5U%@]k>=6_`Y"62,sEM(*'/8M@ZBP[_pZ'KQdA+iHf5p6/fR!GTOZLbm+,/l2NLlT%A$!?a*0]Y`7GBc,S7,$Y.h3/Z@JZNUSm8aa;Z%]Qn)heq6pS#'j1i"3uIJZ_#Ee.)^[#?OfbqP<;W_D59LQe%@_].0?fr!'klr*<93NAk#N7^h)Sb'#R8AaTN3A9"2=f_Tbh<0rE^X%n!)c*a]1#+3M,C(Z6blN$SWAJoTS'b5\dM*!"ZDX!-]+eXN34s&_ZsDR8/1UH>rs8&<4hj3V8$(0J/Xo>e.0"?qgZ0fuHX]Xq5E`%P38q5$=)&O:Vsc[E)sVNOm,!T4+&q%VA"L]E'cTVOnX5pHDrWU!+<Wj^8K.fB3a1X?'K2YMk6!Y1).8Ol8?33@9s0!anTER#I'l$%IGduuni?P/;"&\j7jHl)Ksh]`5k&Oi&dgm'=3I6l',(L=0?B8bAemNEJt0-_0EUBWa7@BuGSh2,2DsSF"D?ZGKfRigp9Wq2-SX2o%Jre+!?%?-'c_5I)^q;)1,d[rpF-NL=4Y";KS3_!<r)2pk@#f8JOX<qs*!L7D@.8_/#U@`(?J^UR(.)/N"aO32!/F`ah_=4TP'"P`%]/()u=_Kuc^];gn//8UkZ%al9!%'@ClT?HWea$e#3aV'DdOJkN;:\WM/BkR)<A#eD_J9C%(/,S0<P!K;Sq7`0!_$AB:Sq8)GT]pF%JKn)MI[ZlLKOYKWV>*W-Y0cFE,!PM>@_&F^q3Mfj<N,m>?st.%SYr"DVLgJ-J<?W@E9;e+nq[:"$(e$ACoWhk14`QM=Ace5,:N:F%fT`@fi!m7m696JLZ8$Aq_TC,d:-Gfm8]Y=+;#s/KU1!6KHG%&B>K.4D3T<oGBiKZt0h<I7o-AH4WW5#B"9ZG9Llnq5e)2SX/m7nK%n3$fU975=6JXOY@\0G_khBiXVMN/rS%h,bG9">]\B[`,7IPq^'HP*Y')!)TH+"HL_"-FFG\K;$D;Og3'RqWc$ZfT3dc[pUh84$`^%e6Rf_[[qXgkK(Fn.gjME73^@lh43IYnZtMg2DGf[-Y6@UFJTITO/62![Xmq/HDq[_LjGV*0,RiHR6*riEUkm%J9%-D,L/rq'FBqR%1!&MclLX6Y$>0r`)&FhL!W=S8%t8=#/6m\o8Y20m#D7V>L%rm04f8E$Gtn>L7eFip(C%NWZ_2*\)\FY5]T)MJm-V(i>=]bg]2F0Y%aMtM>,KjBs/@lC@);N>$=L8/5'p:5K$M[79/r)LpaXTCgMTAHDJLG_das;rKE/:fK;e#0B.BC_+R@[kq.:uR$Uqf+76@JAl@of13%)W]nqX7o6kO++<g!._k<#o^iH-O*>g.?&5V;nn-dM\+oO3gcXLiQ-W=4<*f2J^QhdA@\+s"(P=B9N`)6MGQF!KL?g\,H@P$hH^8X%'Zu=sN;?tTL$GDk*e8s)VFco03620&$Cm?7#mIQ]1#t9,?'F5WP;#6-<kV3&7eRUJKlrPAcnSLYR?fQWDe]OglS.m'r"r-POJ%h:%iJBrWK$$;eRaXDR^-&Vs'McG#ZR1XC:p;"rLnl,#furYg`se2.c_<8>UZ%X:joDQt*a3#)!B-lk.n1l)#hG2q=$C^(;\CV]bpkpq%jiP*Gg#%j:)2s6'\Z/8QFAJ$Me"hU7'/T1Zek8.Q3jo%\_Q;Z&12p9IKhIeD*2*'^!1Xl+1FRBg[\U/WdZC*_**)'k7TH460S;;c%O_IgAK68?F^bi!q!Z3Fb)$+uJjU+GLBB]jc:Q`bT/Xt2lar003i)V)m:UC:u23Y^&&u;/"L64:p7Fk.8Y-0O(&QYqbdP&/R[8e]p%%VT68Vc=5!8?@cScpC`$\Iq3;+XgRY4ARr&e^Y%<,``@[]$a3C8E;D=_WrSe+VHIWcS[6tLW=F-obqH^36Cp<O@;[E7$@"Ic"%ha%f',V2K7s5L<G3+dOm3+?7Ia3iW%]DLOnJi,-V&jM=k!rDj.MO0?45BkQDE"4?rEOHgkGr:Pab*#"6s8BcXnIFKQuMYbb@XdZjl&3%Y&WfmoI7RWlHpP])ogQM;^h-u5%S-H"lLC5[;dsbWCgn*Y.SgPD+"E"%\dF(JlS"NeE[Eo@_#4t"J_hAg@p$Ce(T_F@A@:\Vr6'%%D[3h!)PD7-M6[<#8Hn:iW'5Qm$UXO3*@:Ge=Lq&G66ca/:;D/VU<LEg7E.F63B\MY"CYAbZU;-pgbR#iDaj_=UHc9Mm[nrWpW*<]%r.NY@e,+&%>N8't8;)RNpK_HKOZ-JgF'71Cf\X4a-M^!^'A0Y+a:g7WYn4VVriu\P_iXA6[%1G%f1t0eNu\ippHXMV43QXG'QN%2%:'@'&;$8$"P2dbe(NN>i7pMXUM/+L.8FqI/$h$U$!3lb7S:KUA?]Sl%4p+l"k,4R0H!H&C8&cH;Ob'D4i(+QHSfL>f\Hio2^jCA_%HF2lJ(`eP@S:[)?a-_*h6XUaWefi6JF9TQe$5Yhok6^SbYi%9M'G3=qJeaCTr2aFGiliFY&0h]$U82Le5q2udDH<Y8;j^&r(UEZ=%S@t9*_B'ehJ4E`rPc>:NngOTp8NOrSdcV4HZq2:6X;d[K'g.4GNmb`p^bSCt!RVg=VK%\fJHogq>m)to,7s<Y)??kJFFZ!)e3Q+n%Zn`aiK+48M*%j8R/n&,r>=-1A#K+kInWoq=Nqt>8QoaU[n@f#n9fW6j=,hc(o]q?n@/&f;+V(m[,A@p,b824"!n,:X<kfh8lNC\X%2,*'\6Xp;<kKbZ!1!`9bYdlL2HMW$J2&?!M$#9g*Yj_bub"`t-l;BYcAJP?6ARQ_(V#W'@I@N'rFkI5l!8RTr$iK"0B>Cf/o';U7%>p/+gg%&m1!%+b+3cOANmj]7E4@m62Ro7!/SO_b:A\=h87,X;?CJpaUp,b]'cdO]Rm<8af$6gPLP#"?m0MiS,\e\[Vrc+0$*b6K'%[!g\q$q?LT>r2W.9EH"Sg'e*A(Cbnn*J)B_jP_FM9*\>!(3O?pS7:<raR]kT:^>[0aj\WH!CE4k5t7:p)9cY!C#Y*XOdJ9MD903m%i67Sn=`GSP%%Ll9@58kA;76m9+G?G/L1'4RJ3Z[*^i*E;liXa/=U*3*2%X$rge6BfO_fW2W=dWie3TfPda=J>r"U=W#mq^bYn)\)%:0h`$!(,mp"FQ%+0FHg#i2ibNnd%Qj]sRrakFrI%Ns^C[GNULbX2#S6La67-[`17:U&`AOb&Yn3!3eH*Z?X3[!_-.e?C+fd'fsG^%&V/em-n$1X-n>:FF3O2++a3saW4,JD3`U]aV4Dj:dDl??P7L"XJ1HagPIrBnFU910[&"(>KiQj/QVp)h#!'dMOdH+mKUs!WI0E`k%J]3S)3ge$<b=@3;('"P!0,Pr)YP9YbB9Z=ZE5+X<U*;,u@"^WD1+T.Wpo\TZVOkDrc]@.sgtk5i]g9QsZZ^lU,<U`H0.SSO#g14"%b6.J"/EC@`)$S0X@?^ec2^AE^(q<bd&QL*O+be@\%%bA%d*o=0d'F1D1\B``2"qf/!6.deKcr(m_SYV(@7+kH1<[HU^QEJ;?Mi!i%Z$88Kd'''q2rOR^%*D%@p1ORJk`UW_d\RBe3^Vjq9m-Pti'=(0JX:O*<tngV4l-@$<^5Hr.IsfjMN]S#0n.J8(hId)bCM]&PV_U,%#3YkV#(o(,_%Y-G.^'9!TD5hrN(S;7$B+Tcl#IUUdP13tBbId#lRDrDY<C(B)M3-_Z<A7c!)jae0$Q-o.n$U]&;"6VF?u>uLKIS(%:\+=-[82o;7HejC$af=r!\,V]`^b:i_S)du6%E*VT8D)3"BH4,A(R%U?F%nB*<TCeT#$J"&IIZRCcQh9;R[<b@'s3;T$>+jPZPrK%5]FCj;h!:-d(b)HOa.=23Ii%U!Xh;W@A,n/",2jdi!F3%g]>fE!!Y[0YQgL^RY=EY+"nWc&PiN$bA?SPcK0;O'k!+PJ58ku&WH):%7Gri7:r$YQ7Xc-O[V/bfPDMt:21!fOk6;WPM)Sj4jZN\@XshU'9+<U7/1cF43dC#l4TQB5R0#&&hG0hWD@h=^nrogbrdA<HKr,7S%(C#I*9YH$2#6E$)aU#nV[=^FGf-U>C.'JH+L1`e"9#/*X-n?glaTs]s1>5Sq!/Z<<"(q%qf>S+O$3NHnIm%cV310gNSJi++L%<n>%cjS#!:Zd@f%tKMI=AZ9GO62i*dA[1Edmq38p#CF._T*HJpE1=?aZM+M4[;a=^sB;;*&28o@3K<n5t"1-/q,sp][Kd)7/3K(F[(:X%ji%Loi.^'KfK``:/rmN5#iPe$"Gqb/:)F^Cflm.P4+o\'AfR&;.5>:jC^!2q1f)oC=Q`k4"-JIQ@W/IQ75ne<i`H]&Cl;[EW,Tr$%>64h$`_"Qp8_V!O4>olA*r/\7n0l=%%E.s/\Ce)m"Tg#61WkUW'W=_h8H=]KD3@_JV2Y!+Z3V(s3-jn!;&4?f`><WI(Hm=*j)Lkh%D7:YqSV@`\H&oa<:X[0s"';EF2_,aGR%qr-/h6pS[#SN>\HL-]U?<X>e2)lI6ldP8M@dIX(e!l%'N>cL.rrid+%9Vd^e0^LLdtLF%6r6Ye0u09JJ1.d(.OcAPQ;pC.nn9CJ'q&!%?sZSPqIf-W(V*L!)Mrui'Zu+arrei._3f3XOq-DaOA54l`\JA:/bLG5lIbm3dY#SH%5(rWCaWhq,igE=mc=YR>o!INj[=`MfU]\3]j"*emfNBnN'+k+Il9.G*B3QJ(G*6Jm:7hhJY7(.',e<37f?[6N=.L%FqJiC>$N)Lt%(!,W+:;#kF,00hC>X2l7A8msHg`MIHON13PFsLX6KR70k`C`eQDUB<I<rsNmfYE*#%cg+d36X_:0LQmB8-=.UfE%d7I\W"Hbc3/^%)>/#`lW"8L7Ama/nOio$A3i0j(D@WlQ$.JaW"P2,6)+S::%!/H4BnHBVSWoNLPd^KFTc$5Sl?<K.i:Qd?!%L?TMkUlqF2>'A;Lqp%T4PB><.`25#H!T8&G8V>/hgMTU,9Xo&-PC>8KsbiK3<`"kV?POUG1a/*_&;9F?BO?7i;?.,19#f18D[QZi`/Ne'!8BI*(;83D\.?%&2;F-BHQR*!P$4:&+&sU*G!!HJM5UhBqq(d-!i3TRRfnEAY91[GNGcU=?'28f9Ml=!h>KM%P1X+N%gb2.S7CUB;JtTAgBU!%'<d,%1,md*VZ_<qkl@M@l*p5TE\Y?H-84`,4NbHAjbRRtW`L1D/.Uf`i=Y:%'j3N6&a4e)p%-?@L%/[02'iU$Dj]FH7&_HE#^)49<?5Wq%k!e,aNDZl;hXa-1\cb]IgE9VdJB3m4Un^J$p(A<s+K7_aH%V(;DOb<c::\t&aV$9P!'oNRKRdeBITTVf$6@?:""ZL7+N1j+k0cY;%7!s)e\LL69Z!+"e(^B+#`l79,]j;oD^dLH$L%0'A2iY\&#,Q%6YQL[9M[r(<bsOOei-OSW?mc<FDO5;T`IX\U]F9SJ'$tZ/VdP3?%!jZ\Tq)P!_/gj0qJk5;5=OdFK".Ol"pa=-74=PfYMVcOn'2qW"`C,O9=B$nE$sS>)X:c/`@(BSUAZ4?db\R8+Xs)&U7q9Xhc(_(;%0ZoB%"U79VEb&&UhDq<g7,gbQ*)tWgG-HLNE/=cK/Y]IRWc4FC,D&T/FF`;:KpLr6/u#.K#52uZGlhSTG,oXM!*9(EnH]+3jF!0G%.fq4sNtt4M^k5"_XS,!G6$*DGA\c/tgF7q!%%\GlUForb"%>9X:JS6d6XE"XB%7ErP;%TdER64p3+%X7&8g7?-Ed`GH"Edt\,\S.%Pn`"9RMK@f-]g5dI`]Hc:67e;-jaKn!8qPCB`kF<F6/h*WG7ZMM"2ZQ)e?CFp9h]_p-nkY<\Sbtn&i]QitTVEURj%=L..@^8tr4S%gqCGf984A/JD4DG.955T%$q56!lOq\JRN!kk,7<_"*g,%Kl@gc4=E)[FB8Q@AMq,3VutBTb)t"tVbY?q&htFp8<5ASRYIYk\I,g.%7EYa<U>./C&:efEREq"X,8mV;l#nhppVc@6!j($')Yn([Xfq5,e3PE'FddsLj"+6@`KN>$J;]sMS.t5g%%AH+bQ7=K&/\^4)8CuP%:M_AQIP]H/K`WU#h^lc-k[5%&?tT)\Zr!]&4Up2_3!k?gg45%1N6GH:6^n=<`1a#=b7^',"Nd^i!':2MP'%@-_4(\7#p:EDJUtnm%1#W_43=j8Hf2XB;U`rJZ=Tr(^B`c"PnFJp1C0p?t5*!7fSj6;c:+FiU_49<)!RM#:`B\,I.83cb7@lO<N3<)["g,B5bX[K)YXDj@%lR"L90hm:L`<sQWAF_Mko-C:6&!oKj_=s\:?bC2@($&6jFPpl,7>GJ?g]gMRknskk"^!`;3F709T<EGg+/B<BpO\icDXaBn]Hu38%jmu=[W#*\IifCEF`Eiam72]gQ'QF+UKj,c$nE_8iSscFTCc.T<Z7tJW/=4LABEut`fSVAI:_3VDCKE\@J3B#rZ&LmOYs8?(ef>$\%OTWG:FD&+uKTR#\+3Zkp-R3Tg#(kOpM&<E:<'?Wtn=TliKYDV[d94->I(G1DRKk,anp-0gVZBa:(mPEuP\,f(olN"%=+J1:9QsNs%FbVkr@=fiW-fn3a6LZc+3-pTa`0?<Yl?P=E#=sEgr@LM>,[ItE`Hh`[k!hoj;i9RGJPa>d\7PIfC_R"K'Z)V^(JfUZg*$KsEc#8C%*&tY_T8i^p+-*F6p#MNM?X;2f\T.c.BP#E..@D9oTYM^8auU7S'5LmeYoWm)7X8$>"*.@)h5^])K6mfZ7:&E.!:%1r@0XMR*#euq%[K+BPC9PQ'M.%I)\i9p[nA,[(fT1>c(,0>-U;J5=,gf?2HV^*8!lX;@^+\ZFrPhEnCQM@sqaG-"?:DR^&igmfS.G7mC7.YYobg*M%jnLA/.?QA&.<W?<%ubSFo#ubU.H!JZHn[@<X9e$<^%)fR6poml]`PcV&HJbh:2D\kM.l#@?/pggb7hi(eN7"3Xc/_D*>IEobGMV7%)]p&F,JF%<A9hcT@&87*@)Y,4LI2IjFK.si7:_dU($Po[cp=SQ,4CE-Q=Jj]O9L9pV#s.(d88tA(hdn>`?^%m)e#`k0N.cn`r-<P%dOO+*7ROuXAqsh?0lPDp302Ih=3$5*>-(BH$O1'QUKFd(/X.Ca>4mpBP$!6m3bB6Dc_.$IW^$#r%)L*'\VS?jF#8Pf,CP#AXcV5@%=dY_5de4i'0q'tP10.OAZOJ(1K:NPVW!^JVME))#'oCiYcUOVUW0QG1Og,c6Lg5;b8a!X:W[P[nPZ"d`$)E'pZFtS(g$N?Od6]l2%7o9X;J'#B)4YJl!_Q]c7*n71tcRPD,M?8%R$`b]pFEj)9od/f*_5pB8M-)Cp79lVh(hH\"$S'2S"lMbMr7f<2)Q_bY.TAt4cKlLl%(Kf8704$lX6s2,8AmD?eCds`ki>g?ROV`!<6@!"(GKiu;0m5]GfH_.tXa/8FgPe7ojhG?q0Ep-5%VS<c]>l*aM)mE#,($U]c\'s'%f\^#l`Ql#=1"AJZ+BOB?<mW402hato5r+U'am-Ds",#CciUH]J(s[im4c;W3op.Wa[Jl&Y5)`$t?S`W.T[Q>`SU%2Ub,S8L_Mp4l%Wi.'[r9VOY8S:<%c3q-3Fi6pqju]V(!s$j";B8^D330tGp[[ZN7F1]k!5[A5Ms=;p#%1g,*jSPcJV*%Oh,@^V$9MBNjZ-.\fS7Pp%hAB')enW$+ojD0b<1-$U6kK'nrg=pN?rA:c"Y(t&7M/aj1oQOF::a]i<5kps^q^T.N`Mj&50iF#c<`soW`cu379h9,^8GV(SraGL%'f6D.ZaXf\X9&N4'K:b=LLs=48)SBKrF0]MV>@8Y^o?m$ka3K^J>mhYSt(XN!DnJ#&KtbJU/X$M8#ZR0N2jMs`:M4uBd?nN*[ti`%/h+?W$FF-h-j9W*>.o?]gLQ?,hPj]*dQt91;SE;;B!7QVbia%H[2?snU)&@kaFt&<CmKZcePf+O<WFbPc5?g(5u`cFV^mEj4"i*n%%eERm30J,!5na-]m$H6^MH^&\]stGD\Q8uslHR;*O#\-A;5GsS#1P%Boo+Es3($S+UoSF:Z@b1^cH5kFTTDI3#K<8oPg4+,QmXqq%s$(jK!Zorn*Xp*7@OJFN`<hBb34W@+bEb#sq]a^N[<ieGZ6\nDQ-mg@1tF5K/7-c.Hj0MQV57#*eqHHK/,c.->s@!5(]"C3)a8L[%+dDumd.4OQ,]"Vu+E?=(n(I-BZej(f,Pd?cR5t!mmsE?,hX.u=]cOQg(#m_YZia&,L3"[nOPfiQYS1nF$>#LA+DOT7i]H-^-CMFb%TY8W/+g]%Z-J9pM-.gC9Y!M'W6C!:-_*rG53&2f&hXGqf*g98V2r(n'VpW_4#??m9/3"6T@9Q@,/;s_teHoSp8(:A61VBriJT^8]%W+q8Ydi8#a/?4k!9pLF/j&?,^"4^e(8b@hU`:r;[P=sjT=?O;4LQJhPfR5+S/O@Tid:ZQi-K0\=9\a)sePmXnM/a9aiIr&;OgEHN%UI=P.M2Vd9HGb=N9.!/hW8*\0Ot\r5h4tV,2a^=$,R_heh:aW0?lb:(AbTb()M\@:b%%k+SRI8S+FZh5>r%%MH'Bfeai/>Df:7.q%Tp``+)fZ!:l[\P?*8XE!U3dg3I13bE(cgUq/$&h#6:PM`csl0)39$E$(Ns)I87@]a`N0.WFD3LC%1_Dul)cW*?D`Ff`%/-OIaF\C%-o&j6"f2\<4+a.;U=DdX4aDfL7k@jiY7_^HZe->(,^*N,HTr@$ZAE^Aj?^&jXt]F_9R^p(jB#5e1XPGb*XL[F'KZJ.OVOb0n!KO(%aopfToL^:AX^i=qZ(L9@\MrJJ3SQD(%Ic;j$6pIn/ikPCh%R/O9hPk:[Vp.2-Y63:A.@.T*!fN3Kh?F^$aq_'$D9G=;IanU%=[mX%o3YL@/M5Wr3k74A\mRYJ?-'!L-f.d"k\*X.'>ZX;$0?7IO3`"bW^K+86:^!cZS?VT&t@T`-3<oW87m<[Yq!*7NmpTeKfZupJ.Lh1%#^4IF.W`Ro.0#7BP!](A#Z=T#**#b@,fS:e'T2fp$dRqQD/Fn;U<:fT^s^`b?!9TsBN,$k<S;8#r>Lo(9_Z5)K1BqACTj%6lT.+g%SZWj-CNcZk!m^q1_0B$8FoZCcOkgmd#BAZ++f@2J(tGfd+k&DEU:"tWO3';:Jp'*IIGkRV-JZ/?8/MZC^'r!mBF"gPoLNpDRmZ>d%1\b?/1^&2XU7nkUDDF_UW[VbJnuE/N29OL47G=J&r-BSc8G<Bb7&VoSGj#gNI&Y`<FBhlS^P`:_S[p-^&ktZ=A]L*U.R4^ZK34O<%Ls/"^e(H#;'/OgVclf$ar-4<0IPBFo-/.k1-]L+e:.1'C3$Zu+15[X:!7K=GoK#,/c_+0qC+_=ZEL7M?6PQbt;3l/HCoRi3"F<`L%.5iI&/bbgPWNo"UOei2sKoB[RY3Ebo[7I`^5q]pY'6"l%"?:'_&47VS@r&<d82usfFZNk>>K:.T1+bC9@NInPJ]%OBSM1=B-@.Fq%3<\Yuh5rEQa^phTA(2sAoFrAS9hI:e.Y*!44^lf^l3'rt<2lX!6W3.7)i5SnbP\*'i>ck$&i%0nHYQ(9,'2dR`Kpca5`D4!BuB!:%!]]G'8QUkCFG!Fa!&2J'7oCb_bDleQd"<QUFHL^]%LG"m6;d=5+[X[00V*U,Uf_.`Y#CP1$2l=:5ZBad0g:AfN#:+*6\#NW.LKBK%*;;o`0_iV/K6)B6kCU[H%NH9tRL[H%p*r/:2%?]1BJNG9kT$n$>+D@BPd/K7nV\Tg_;6OF`Uq*25fI297HQ6-dU5r!TNCHd"!5Jg%J]Yil`QWl!Hdt]+?slWbPi:.8j#]Qu()P7#8`7rbU::Yb0bZO_+GHPiE#N25(5a]P3HTT&V4&s>c_S&$Bq\rPCtJ4s1cuBkLmoI$%Ws81R\nDbomce:Q-X/J8]@Y],_'a`.d*UDZYX;hI1`2u'GlSiVX"hjjQK\8VS_[cW#hW]#*Gp*Ln9G]N]WOj`Gq"a"f*MPPABY'^%=&'pcT(*gl5&;q#c>Ta3jMD"e/fJ1$2esD3\?&RSf=&0`FW#??),c/klkU3sJMV"t)V1M9M2-aM7'K"O/2I^5T'KX6_I?ep3fo/9%'dH18oL44'O<u%nL!CSrpKMVY,Fu)!G!ARZklsiE_N%18(fFs\BY4Ecf4CE;GS=t=EC5;rHRfk-<'l`miT?"do%,ne6C8P;6N\mW%8^+bT\h"u$lRN/IV0DBS\?0JLh15[UgW7'8MpWkPhV.IABR0_n)Qp\SE;?$ZKS!ZZ&cg#X8/*3qo(3&\Q<^eNYBc3>nCp3rr1nNL%AUHduD+.T=M%SAD?\@N2_o7AO=e*^a3#E,CW]W(i+YjHGbuq?>b8B.]]+Yf@=H'VS8H=J:HEZ;=H@aNl0k&DRAk<b=`ltD8*[`15%-j!/B3+O$F))#E"%%r]nHlXL?3\WQMjg#9bKG[Ad;7KI)`MuJ\(8$)\@RF\l_"2Y]LrD&mAK(7jC$b2:V'R>'aX"q:($f+aJHX?*%b2b;eb8+flE\\?DBH\;\</d6F:oJHUPeeBFU.3EVl.e%f+tDA:@.;eX;$,jK1+AVZBm::D@3,Fi5dAFRB4dhRB-'*';A+PeeE&fS%AXY**#3D9@*'<*H+noko1*"`K-+_n#:8eTp[S"cfVpY;7R"hSRCe#:/5dMc)&.69aULj#1(K.@)4!QRO*IE9]GVTF3$@.03`Xc4G%""+eP3Mj:\eoF*fTMT:[KGkBK0_q8^HuuBp%TLVZET7gUWu#0Z:m51Yl^Ec>1.mH6Fr8,J:j@?j4lmlAe-gi`jc#B=pD]t38pi*6%igEKg@Td:d'sbj)87WpXEEnF@c:Co'ele^/*->&k%L9V5X=fFiQ[#<10`\m,12<&Y\.f.8F$7@t5_qOqf/-1`#I&H_SoYj3*)!P(%#'PYKYrj[!<.l86'oYohK-19F@^qQp3RVA.@aS@'$W8ZXM+<7:XH:FVP4MR`Yd8CE=%n??/pi\d=m@._*hL40KW@WX,]F#,lj-_S%p-)4h9oiV&(4P85auL@Cp]buAMF`0;\1S:<?j=AecQC$!pn>GA-;&=RjrcbGTJ'Iq9!?;<J+4*m]-JfqE*hlO#aat4p9*U1YnoM&%#*l"'cB0fm`<geqGl3tn14d"f/b_\9kZ2?`26'D$mOP@)+KlU^\iu"mDUi/;^-V!QTm+^P1!P\LMG9DN!e1TEmNdb?"3rV9TJD:%%JBZ'Z\<U[9ZeJ;gj!e#&&kj!_oh_[4BhmMR2V^-eGG@e:'6rbgRm@,:0Um`G9\>_(Dm;lPRO"i"9.reF77!%DM[c,C44,m:7d6M<%q$Q*"mimK$;R#17'Irm8;\]A0#TjY29Tg6aLqoNZ#:[>O%R(;W4@g5%)a)$+WNp&;L<-Rg^i?$%[38QfV64ufji:BQ'"o<KhfRXe%'._I(-h;h4K8ajebi]DV$DU<:nD&.H,48cqOH)5Yj5l&AKd\9MIgJX[I'7LTJWZVDJ92Y+Y"tMd&P],jQ5i4=84^-@&bRMC^#Kf5%*G8U;-\h99+-c&Ri=qJK6/X/#!*eMC]3<:)3tpeAY]DAhg[qr41#4I\'HBFYAgib!6?(aLB#P+eX0FF@LmbrVc<[ME`+07BSd40r%F!+N3VafGQE#f?Rfa?kBZWs3#pc&ZIh)`)j_+RLMmm7h9njRroUsde%-:RIa'[E+n,tjn8IWCrfPoa"^9B/P)$s?'@r1h1Y6#ok2%5<@n&QnRDG0Xm3$<s=La8;HUJG>e\n5n_u^HduT'9I_b[h0WKZ^%[ZZ9:Tec\gk5jM@8)p8dM[E(J2FXY-KhsB8TBBLrr=X=GgWD%[4u!)1:#BeQEWiWN?rREn-?[@3"7d:6'Y`qJLdre>:S4R%E`rup,,*:;N([kUQst=r%=q[0(li/MjXk9;A@njM;1`8:O,iZ'oO@+%>duW9@8C'7,'E%8+a;3EQ:fb<*/LK0;h_L92XFn8aR'_e$(uAI4aba.L?N_oTXb\s;0jcbUf$F+UQM7Q\gks?kipVHoK_=K]:a:m%Fl?=_#LTCi7uZ^%0eg!c.`?;D2jmFR5t^'u&^lLU)5\;$ToM06aOMo5GZdAO+_0O5EZr6d7YPgJ.q(L?VhCc^&nQ<)J49n9;(hB/%5uojqXpk&1Bd@I3/nCAKAGUa;>c8fpbSGri$NQNe8CLmbf7GKX_a[(,LC<%HeEF1d.SIPW3L32AM5$-"#KU=GhaE4tGr.8jdKVuu%9[_d.8M!i/4!bT)?)0u3`Ui3=*0RfC4$'.d:T4q=0r,76'IUF(hTh4hLZQVYqc]nO/r.&.1>/F3P:%5H%@5.;;u+B\V[s?H_"ega%neB!\/!d/)A(bE:fN]_XGCU,c8!$uB#'"f9Ec<;o&4feHY:@DC/A$Zn#@L2WQ]4]`^8csHRB[#R9+msbS?+"PXFa%40L_Hn.g?U%%R`<eNdA;PiB'/LB;ukn/1+*0!0G#m5!t$$rK(F%un2jT_R)I$7aH0?%@<)S?co*e[Aa_O-CBQ\XLi[DN3*%E-kh98uAD4F!E@<6K%n=h)NQhj,/`WJM,K4n*@=Z9:q*i3!dlTdDMJN3&t8*4<bP%Ls!8e$/J6nO!!0#W6=Je.K+<0DKCNg:jf%lOf<KAR>oZEUeHT2$gV%o<1OoD<\^%HIfq_;@5m`cHKaAL,A=LTMc""T<J^d(3=jhr&liV?,aD7b'WA&VS4iF<h;&^(KSlbgmh8^oEX1:Jb2%*2N-d<!U$"*%d'n+uWXAOP+3YOe2_%f?A>Z<R>%DY-bh*K%$^((IC,D)8ln(,;'"1h;m%,L4,5,]O5j;a%-a$qQOKN%OTbKden=LAbBZMNs;1!-M%M5(/X2nE%o<%ang0<>Q<ElIHA8l(QZ00qP8!b0[<j`NDZ>`#TEP_"!2ZUc_"\cd3#;s2sGa`;KQLi5eI)WqY601/&e*4Z'[hB4\1%%bI>@^'W(>]E2W$/V@?PA,RafR!GUG.AiN]bK`Hm=t:YT,$g.8H-X4KgebM=4feYs0Tso7dN$.688Z"EK>Ol\l-rNVT$##NPAP04%(peJ]K;M!ln3do2UQK&="7ZNZVQ$,9'fqf;:E0cb9#kcCg)#h4iosDfF1K_O:8-cI16Fnag(7ASpinu8B=A71S(bJ1R7KW'kYsYV%bLe7g/dq(D;E<nXr5i69Z/JhYpV*p#`6;1k9\M,++&0_Lkhug44Z2J@E$:CcP8<[*W`c>/a>KoI^jnI-(E4*ofe3]!.p$g9Ek.n6%\E"Ti96J$;')c<\0cnM4q8S0?DJ5!+m.fX@c8S@sqP*#7*^=:-F$8c8.YcmI8QVT7#Jg_jb#$Vnei/nd2EQ=pe0o,gQd:WfSX>A,%bpWFm4KH3[.h=W$'6Yj?qo+LNonaJ(B9BH^r?@HJ-P&^gOUJUInoZloFMq)AO^(!bXhlA)r3Ej+BKT,oJt=lY0DIl.jqkZ"8Cej'%f]Vj^If52rJl[=[:`2Zs$AapIO'J4(*d)D7atQn!Ka-[jnPkd%kZ/Imm\1BL833B"g4Pg7bZ$^i+0?HcWWQ/Li,^SDce+XV/tMNl%O40b>];@NXS4RAR3Bs!F+TT=#9@^<%qs4W_Zb`b,26cdH+;.e'J[H:rH\&T6*3Ho29E^b9M*pNPG$3LF^*Qoimkp]MkM,5@R!T:e%"9W]u0_YWiY7]$m*rCP[(n$9"dMJ7d&RV$?>g0oc0PPLD:L/-u?O[jsg@/<-edrFafPe-%"Qt"R?UYY]4Tj$>+dC6jqWnU[#QRhV%V;Q5j2k=>1P0[b#O]2io^nmbuqd,bZIpO4t#IF/cLk"q6X,$VTK`a.m2bQq?AF3XJ@dp`cD>V3f_^2\KQP4Wj5\5M&a(RMrc?*<]%+sr^R=`ZU^hh=U:004j@)*<.(?Y)GQ4cM]>I4l8&J:&Q(l+]'=:>%)r\.pr-Hn9&%Z8\>sjs%,sdV65T8G\@)alYAmOf1DUNRY9&%4H5YiD1]uFo^P"'O8,</8*]%GOD;V._;-&6%B.e?hl)_K16dfsEa`_Mf>A\EO&/"SV?2#LksMfJ+Z0%`6B,_IU[*3K<!s$C8K*R+%p_F:e<SS%dV1>S(It6o*OX`u')\K'3Fm*PY59`]e,N<(?9J6_*dcePg=WY@+ijkaR]UC:[oOMPZ'@0B!m@=3A\nYg>d]o'QG8&T@%rT^bO#OTa2%5YPJPb;2_a)YFCK``G')4DjSG4-C99rAXf);BVY\!OjLj+V6(jCiXjRVtS44BtDa_M*Sg,0T#<L_TE.gH6.+`Uj),%KN54>RC92K]mM'1A?<,+jKd*sWJ>_Y`=ij`Ylm_I`&sF4bY4iHl,h+Aa>@%SCi.iZZXn>6dJk5^J=-SbCc3WuZ3aZ>2E]4X.F"#a%@^TLDWeHA]Bs02'Lg0mPd-06%^\5'7[YJd[)I:E;f.79Cj%G"U$H3;%4,\^Zh%aHt=ELfI-!nS[GdTtVZV^&/jl?jmOg9p&#2`Cg%A2FMJ(cAnEd-^`.Z$.[\9%f%54(1WpnI-*j>]_6HI@j6Z(<PQjFd#1@na&pn'"*pH.X*R%Z\4!o.'S1fd9"H]eaIhDDuMU?<kXXk%8Ybm'hu9]'_s;)27bYYj4rHXlq*$:#Q!IK>T%=?OIh+=,Q3tC-J[-2BfD@JQQcuW,NDZJ>HN+eC(FS`FU[11LMI,639>HIKr;.^0%mD`GpM+ftp5PPOdDHqs(0(!"8V<`\gD^pZF$[d.?nE&tE7R[q+,F<i=K33=MP,X;gPPTFkRb&0H4:t@7C5Es)e,^foXPCXM%t=k;%mh<Nh<ctq3Pd2OJDi@(/M<MctbWgDKK/st]UjUX%,T=oTo@3q*g^E:[ZKSf0D![ncNF".Occ%QeJ/iK(-^,g=MC0Wk9+AL4o?an5%5qkub=a&2((C]=GUECDNr_(W%gLJn?_t_9Nd2a=P2&O>_hRjsLVNetJG_]f@%T?tbI-[Ct,93Qb?Jb210[!""=E`XWr\8/0SKS8o%$,U*h72T$]JQ^"O0K&?`7d'Hf/f_kq7ZG^ZK5d3ticd7V<ho-[AJYj:+/;<_oo0^se'R8B9.-1+"p1olH.6O;QX\O])PZAG<EQJ*%=L`/k94/>I%Y-SL^+>F*p>P?_A$u,hk3:*t;5V1EgM_pZ/R"H#Z\(A#!Cs2AUZki98+V^f^sN4D(3$Vbk@jf3<"Q!A!CLXEL1UO]%#5g%1B7BVYTV)Jd/Dt.A5?n!^b^HEG<nf)$11P+6OhZe!n:GN;BA48)o="1KI'@I>D)2m@A1**EOiq7Bh3VoqQk)n*1uCT^AGLsq%Lm)qg=EN&E2^)Il\R,1Y'VlJC='?2-O?-rMO>QT2'[ZkAd<G6?:@peRDB[aP4.37;TODQr:l2)Zp-_"XpO@:JZ"NDoY-3QhkA%9s%f44d$\YYl?-9D;Y@f54&,_ua>`&(SJQq#JsQJnk\a(oqQpelsuY6CgnO4=a\(6-TLC-IJgoP<SHD4_#FDp`ZI-CmR4m,<=,`jPHk%>d_+Lg';6'Cupro6h'JNS$$dZj&ueg]',sO+-A%E;)][s4WG$I&ZHE;j@2OOBLMcVQg&feQW`S"N@lu!,A*7)kZi9K&0mTfDCTA`%r9J3$XUJJr7i\k0f\cg=/H>poan'MB>[)[!7W_9+a3!Gi%$$MZVBn2s%ZZb9PO$#8Z7L1M`.<LbjPU;(3'n,30iA(Zi!;>&6=.SV%$'(+6KRYC064T$;)ii2^S.EQt',,Zkn!R9-XIr%i)P%iBG)T>3HdaESm\Th7<)L9I7?PsH851`mn?c>?e1TL47/EWbr"APAW>p6@%(56S7^/6Ft[eP$[Di'b*9HXMJ[MAEm$Cl!VFLhXZL2D=9)dtatP8W+MFWu7QmYn&Qn]>n9Km5Xek;kDBX>?E(UaCMJaM8`2GiKR^%:$#a?"YR@$-!(VK'"I!@bQaD-hrdOm8)hX<Y0+r`goJ9V005Zg^2^FlkXS?"+'4B3q0VttfX_In_lm-09HUN]_c5hN+d-2-DPui[%*C\aGZOA)VO_VSb9mt-uX\[QZs3_>(%r-&S'fW3]F@iT:f'IQ1DV3$G)>J%M^J3Xq=_M"]]JRQF6_-3hI1uBmdXg:&nCn(pS,(&T%nCn(pS&NlDQD<=a5ogle,1[lU67oh`C4t;h9@+'S/?]-$_AsA9fRb(]$c3j7*#_0BEbP6of[/P:2#OOJKBLVNO%=odd&8fI[Gci%%Z@&QA,+]a2`2gH<Q_)D0Eb>N\ZXFDZE7l,iT5$493@k!.dH,#CU1UB\c62T*eLN_JcLHA.e/ID<WWdo6%DFB6:5qq9@d/foi;H)1%<i."O^p;>hI-5teDWEJI(@qE5bub\rj:6"<<!OW=O2to4Lg4h:%aaFp/3P_M[<&Pu13T`G5!<]<<i>>7(h7l7(]^mLe`CHN1s2gL%cCr)f=HL<TCLGV-l/r+cPI+r:8GH7DlChqAJr,!EY9(iYUl)l@\JUCX&/n,U00Vj_IuL8kl;<cuPZ[UoWR6g]<T)A/&l&m!E,%52%.Vp^RVhT[h!iO$N0Rj2&7cTB^^o>_;S31b*"AXqGG&$(^28lp[X@jclbl#[_FQ!:-()mqE?FZh@NVUVnd4^VWA0TE+,]P4QpOD4S%2"lb@)l[7e!i>J0_e9B0e<#$ph.4nf9;P.!nQ`GY:XSP@JD-dg6k'EJg+7]#HH:<1U[^n+*m!!so6)VKh^0pg[?RIR%<F=f8LOIp%8R/e99C;WT)7d,(Ss-;Z.RDX_)T6fiZ8MlsMj@Q7U)FkrOLhA7H9phj"_&oHlCnISgXr:sb]l=&G5p"^,;-=X.lA0W%IT;`nrbQb%Q<b9/<ep($<Ok3("<=TD@s]+UK$6G#%3@_\0"^n`)DDNXa%BaMA</0[Lf#c`pO:DiF"SDu\F8XQ^a!0E@(e__@cP#;"*8B`RsVOs%p;#So%)1h5nG-\(J\fqlGQ\4Xj'i]>HmQ!*%))p$pm,\0Pj^.<J]ZMg-D0bG$S9$-iX7<O^u>_Q^7$Uej6:Z%1)'1R.1L(\[7SQ\%i2[$F"ul@bAS:SaJ5K_FQ,%F^RXE<L"VT!5912MKhAcB)P&Kq>aEXuR$mA1%=UC35j2E!lo&=;pW!e=f`i8:BbiYM3A$Ok($"O+#%[pjQ?-R-t&:4X+UB-P`JmW(f,::P-.El,RUR+>UA)"(Sa!5;EU;b]e7Q-D,cKXc^/dTdF=1qI2(2?F8^CRt8e(?^/6>u7[8\?kM^%c>F>F\""0#)W,eN<;8_\061oK*oK+%&B27?S]^(=eQuJC2I$XE2(jc>VFI;B)K]jmRmfj7i`$A2oFp-m8'fq;BHAc7$_&_/P.i.g%Zh_g5,\kr>JDNagaal&n^1Se`83E<DiA?AB?hD=We@'0+@HkK>7bJ+?UF'W[X$tidXM-Z+l="uk=-'9\"9TDn@EPGKD6GSGhCRO2%]2UW$X$Xo(:Mn-Q])U2P3b?p9#o5I9>ZHm%>-keEgb@*A)MHp!?[XA"QND<O0+9(i5qPBNBj&GGcU)UYFMYQQJq;+Xd?oN(OYL/'%eD7MH:pk:ce*/>>h2"UE5fE\[<(V]'7RUs(7/RF\l$CF<>0e`<?>(t7f\o4\2\_*MZSe)@b`$)l\Z)B1_b3H#g"C$IY/+\IImb2[%G5>8A)I.I^8#3t4kH+$V7[KaTMOHeP#,8H?7H`+h6O.ODCd_QB_-,b1=Gqk8?jRF^144<AB[*MhQ\p;uXuVf"2pEr1,YLF,h*u#F%Os&2&V7uI4^FP,Tq56neI0k^[7MfflW+i\dkfV>;BupYGb'2-m=\5s2)1%-]jrd$0WGmf-W":TEMg@[HO2g!JD9F9H8"4E;YL/P]%/;bZeO`<Fppt(Yo`!DZ6HApN1:#d=re?"fkqE=u,4=o%H1/-"7K^pu=CR>R=/YsKKqc`#Xfg8TXs':gRfaah*4RAmX'6[t1Slp<9%cdFgLc:,bOYOPLMr/_*>V]QcMA$u,?4`0JNMCY<V%PJuCZL"M@A-eoKFjSfL5\G581[/X_B0Gnp0u:j>>U^c>6rM\E+)d9T*."7=%<JEteL!3"f>713S=ft3@5QcMW<ULC6O`T?86t#?)E=2uUR^E,lVnm.prDRe35"Qa[:W<*ETV+i.P-IC=e.CmHVpf?)`BEp*4QV%=%FD-F&JKKkV:6)4c9eAMjbk<A\kXPS:ENpsRrc>Tk#nK(:)?&3K^77PZ(Bmeu.%EIG$8JJBgsfpQZ5bW272ASIYX4KsR6n3PfEg_r%C^Eq:KIfu%TMQ/uQ71c[/L7B[lmh?j*LN9-1,RI%'o-e6'bW+Kn8r+(@Rr7rdkdB'O9116ji*[eKM:3trORloO<PX,i#YQ*ooLM(%VVhZ;(\Ta!1j$]Uf+$bL25H%kl06'Q*)0C"Q6I4NKh=ln,_Pep1r&"HSoI/A/Or`)+u*L]'8a\j+t/iTG+hV=M%Zg<UEs]^coQnL%=]R)bT&ah9A.qpp%mj2,6b7t@CQh^HUhGW4ct>Co9&rh5+\P`[iC),C)SrF(HI^RR=tL2cE_k3@)U4;FTinQ[[N)SH;\==f1U_%c%+[qM=(jc>3D,1[J(f<^8A#cCC;G9ip]GOAPBLiIV;+]8;dZl5LA.]DCP,Yu!$/M=e2H=s@R$+di+^!Q+R$rl/eBg=1\I'3^UgI.2%PG(W1gCI%6g0Cpt#k#M_I9A>^,TJLE8Ebu*_2H3*DNnF430WA@b[!a?lRb97Aa*7G0\n4YCa]po>K*rX[2e!HE"iEAIg^+98O7D?%+`olJ0/KOP(%E*i^dY`Zg'T"_OK5h@&5Fu!"jme]9F4;%-rk13.3ZYsX+KOMcj>OI6Df&Z&]&!+Zk`G6a@auPU4a@"=paZKO<h3c%^r._37LV,,E+FLA+\al6W`'8S.dNu"*n1.R!ol1H6(I=uKFTKKgegHY>u`-b[l)N6r'^Vf'LP]S\27ZTkR6Ah\nhX",-VMU`#C91%,`AKASkXF8M,qr#20X&MTND_m.P#[b;Poh*14^N\+]Yq#_jD46?A/mSe7Za3]CBu@VV(-DU7c]^Ufg;%VQ@9-dk\.l/*<Br1`^G=%KU2#BM<!f(o,,m[Euq0eGt\q+Hd_/3d"7JiAI'`GFsbb3!Z0*h4rtq@AFgYeESZm4c(m/+;5u3*O%I;jL68L!c"6BaQr=SG6Xq)c%7kZ&)9kbV<31/!(D4rV20ib=CKN+Tj+>3mqQO&hV.#8+;M';ts!PpJte^+u[JhNFMBG<uk:m`/)@@EQRM/SZDpdtu.h^g)Dc-d6^%/1pBdh\'9F,Oqm^8pk23Cb,`e2Nd]hl`5bpUg87''nN:IBT#dQU6_("#RUn!Jk$m)BXU?(WnJAjPTh;e,47nWK44:QA+__pBuG$$%(pR,9%/O.m<_,(TBo#"D<g'Vb7eKeqQI4,@.L:?6<c<]!25<u0pGq>#/=L/7/p./6(<2%[_I:h.,4/5D3r6W.".in[J9#/DVj0Lj%=9O=cWN$!p>V>CYs*;PT\n@rW+J\=[-l2fmBM\ra!,DY/O5`[(AEd!OEo-ji63_^C+kfFU)\G;0Z&*<=]K>%%&fDf=jH(OA=;cX$%U@'Xm_A\:#6WQ?m9r.e6SQYOUl7-<Ui!sudY]CJ4Fn_o0a%1er*XI!6FPoFMY06?Uoibf7aJNTOdbl5(^P8G4^1A&((,&.0R[0eu%feOic$WRAp'T-$I>I9L:Q7OMKV_2^(;K]'%3PE!2]sG\8!AE,h"F$bO_J,IA(JGSrA<TH4Fk>_g3LuJ'!LPCZ9lRp2Q'j"qFtfZU%R4>1e8<UF;7<T`S6S]8;@"MjM:4Frg$,`Vb+c5A;@=]qb+KSP^0pjhL'c^sOkhMaP%p`F.U5Nb1jE0O+Eu#K,9*S851df5#R]3(D%d1,(A@/;VkaHf0*6>/lX,2K2`JLh%/VSsZP?r>9Pc(b'1#'-.J!nIhaKIWW3$;G%gW+7=?'>k12JkFN^B7)+<XGXeCe"tViM=<P2%=k'LJ-pl#nkX@:5;XCb4N+AjV[hHC$T0/E-Lo&"=>^N;m%"#quiX*5LrP69Y30M7`oJ%U\ciOVBQOn_)&#_,h-Oui%dsQ^S&hmBd%KJN\hO-iU99U2d`7AM"#CV$H='ekaN36`;+^.9m)+Xi5uFCO-%f?ENdg$IC=+<3SL\&[:jPR>#Db.R"`*du49hXnB\B2<_hUrAf5%,[UB#8,r#+:H\08:OMf>hjWCLi8XFCn_a.LTD5=&rqlH)s6nkCVbd6TC[LQ_:qlVD`BX-uc[Y8Kk?`Q+\S&YL\\EAnDQ"Gq[gZR;%rP/+lhu(<3^\Gch:OhD]O1ZccBFC'^h)"_.n,D(fII2AW4nZLlII:V6Gg6#9lcHYhp927(rI=_>5Q&FZJ,O"u^-(8m!4lMX["%JN%Dg_/Ghsd*O*Ze/GG9PPc3Nt^fhUcCXS__4h"1*s9".3R@QG&4a:`60^6`"KjE`<uN(s"r4aCPCNcD?4OO+C?MFcipBXlp:qT?2)D%L@c%;Vl&hu.HDDr^=3<JP:J-N9uL[VifL@t;qr28JlY<UG@IMj$K*'7c2;OV$@3/a&Soh*K*XLrFgk*k\gujH`s#I_H?X;N_G/.\%,i+R"K0?F\4Zc@>IY@]j&WdTtM.AQ2W<#G`(AV_Q?u[BNlIh-aX_9,O!djH=Zi*iMa]WgLmuT(UGdH,>$O,0&JXKl\jq3u+!Gm>F%R5IqO$I:8r=p0(bJni]knHm_i_c%;M]"h5FW]J!q%]XhB<!ZC8_4dJj#-$I0GWl.!IQi_qcSZ.<;XauV_'f!\TAVM4T10K8NN&EN%+BA@sRekj](.s3EebI^5h4Z;):E?./!)HmnWX@&r6feuQ7>%TeGSU=[=hqA::sBoMK`GrW^s"$2o*`b^!F%NkC'&=F]3W6;Icb%W%MNue"HQE)jHgStUNDT$.DchG:c"k\hk*p6nFo?G5.lDnCX4Q-MkPBPogT]YNHe6$lp9ci]\fQi0^A<h)n$oR39f5!n4$-+nZqXYP%Hdh789ie@.IWa,1p[9d?L*%>C-RU:]c]%;\P.,;<"#VOT@`>`6gq7OB%dUouoIGFSdC6jWD/XjOlX#!Jo(ZO4a+e^qhf*F@M\XjH%>'p!EA,f[!\,Z4*J,RL05P;"r5P[5[q3/;#k5:YG`n%cRXt"+iinDqlhUg>".eDDUrPb\LppG$ipYYu;?bcR407WDR+*knBc_'Q<%]C4>$Seb.PK=&sRe_C-%1]RC/VgeEiB7KW]B7Kd<VuQ^":O`/dhu5*PT<uG`!l8sD#!"gE](c1g:O`$C5Q.dX^\AH<]_IC$T)8'P%^[pOD^\;m"@<obm%TFrZhQZ];.@g=L%mTTDVge470<Vtc9Dj)2b"KKor[1Kij,"<H?8=(f\+U"a="CJhq<k\>e%bY)c[Y,GkFal2%1MHB<kFVLpk<Jfie,.ke^A5>T%"WP*HgK@4q"*DAdIT"OeOc6s?[D]Ahu3J.?YB+L>t<:EH%"-Gj4(-dqo!]-oKlu7gu=#0IHQI]%rl,93^,=NG+9UE(A,lA6s8=mJH2aYWlF=r/cTh$o:]=d;@,((L!/hTDYIVt=o33=8dXOITd`WrGbf_Y&pRhKXTiW>&fA?^5XB]mP%o0E0>TDHi/ISg4YKBhVaroPTb1>*tT75,m@mVEhkjTiNpe:3_dL]I,'^OPZI0'mLB0VJ\0X]HV@SWA3lLHdF$&2^of_@OBYO]NWA%J&RE!Y#o]"c1d[S7mHP2T>"EF!//<EIf/lRH/0?\rCtXHc$^TGDghPqc^'7j%IrFR^\u857Ep2,g7\]iG"o^<;ucQt8e#*Qp0Snk%lU9oaCM8@"hu@e`#!`!o:VCUcf7mHII/<T8k0Tb^%N^`"lU8)OY8(]lK/B[IRm'tp*B_dX.t-Q&J+N=TrM&XNUP8T-ZZ+OQpkmG^%X$6IC+$>%L/1k.QrWcg0n>f#G5T5G^Dr7ufs6e3^mq63?qW3W"qqbuCS_jqs!qsOc#Bnj_If*tGI%eaqM"Z;m[?!OemsY8X)p%\i%ETGa/qml/YqdRYVn]R8+I.hoZHge/!Lj._ZRsG7l6!LoJ+8tN/I/grRDRl*@qQK@;jf]bsm+ub%hP/VpM-VbE?$u#/Da%+<1^Mi\%k*qDrG&^&X:\bFYA%)dcB3t2Dc[P&4-/$KQ^[p.Q^#i"DE%BsZ/$?MSNg@D9f7!F8h^4;@[@rQGgRnB4lR)I3m^SB71(YaIeq`rp%^YqP5<PCkH-"iJbHGfCSd/#V[=M`3]"D7T+:O_L(5CW$S?bBL^N("Ou-1(Mp%3fEYT76?8s8MYO&\n(EHZ?qTWsT$K/P)P)4TF,Z%I,pK`qsr@RrNH7d'e$Pm/eUH<A=Ya\R^`4:8,`_7XND`F$Uo.*n];0BIbgLM>"pDCZ$XNGD0"8-d50hVKO%%5;E^];p@Z;2&4lMp%Jt4f&Fjo(!?\*<Sql6\,\B0Vnf3Q/V7]`0U:ejOpY5e8oIs@aZ$C2?V#k<],kefcjWsD"UpH1liX#)+(>`0.\M?Z#l&:I]e#Zle'%9.LAK%dB^Bml[!]&`TNj?e?T^N[e3:^&=m3VCN@nbk7@oEQ[kfR#GrXU-E8n9bFb\J]UY--mJ?*?QXj@ZDhWGO%c_BBBfqEJ*c"T%o@Vf)J'M\b2nf5AcTM6e938:/o]#Jgr::0N3*EZ2\Ng)a1KWA[kK;7\rSX.qN]6e-J,X/e:qZ@o0E#ndiA+4,W3gODeW2nb0@M9F%Kbqq>q:2ZTqI8\ife8Xm<06&;r2!;.rio??,[nGe4BCQ`aB06o*!`tL@b*VZs&?Z@RZ2f9chuig]]>j4YC?/ggKffq=`/Wp5Q?o/%D5P&.Zd#\FHO"K]VB>YOoW'XuXO.9U<3K"\5Bm9_mOQ$+r9AtHd7/&!`daajrI8q?hu8!4NLkS^C%SS!`*N:drf9UFGPbTInp0a[%dcc2WT0,M6n")tC/$j!_58UHL]4WjFCa'q$AY%J<f0g3eEF3&\m6*hYr7jNgd-+'@-9g@;-@Yr,C_OPQ#JM-?odFSio+0_C`As-,%lrfrtT(ta/KdH\8pb*muN:.:Lp=8:S2m^.Dp/sUrq<+B1],P$sZ%>5NT.?Q*$31Vpe_7\6KaZKHIP1Y1jfr.k67Dr(X2r[qr^*;L%ULS`OKsGQ%qKt<nIf>1rP\Ka,s#4#Vbr+*H^\pei-m%c0n,ME0.dB(g)aF8N+1Z[:90`42T04*re-(9\Du%28T6g5,TE"iPci<X:%07Daf4r(><m,.c:GJ<BKms=.=rGM9_)Xqg5h)b`962#;<9_;X2;ZtE@qLVp]7@(1m=N5EhN(FKp0T8HMQ(eREl^FoT'p8_m7S)+W%#jf<$[L[cK=3$M_+I=8/O(/b\`k>YL@<Z`l)?*^c4BC83G"Fjf59K$mAE_%-RE%LPnQ)aL#C'7oii]omL=N>+hg"2HeZ3QfhcT]#%X)GY]C$dL]gp2+jR[\5#?)I%ICTh)ne!aKY]7&M+YIO2LFgp8>G0Q#IXtS`e>^>-72m0^Qp,h_HJ'U:PhL!TF]C3?&[Th><Gf+YS%M^km@WTgiQn%Ru!%1bQD#S5_*iP'Y8h56ZB'i\IY*HhnKF5Qr5VTi>lBCdJ/rqhM4n2d`To`eCcY']UR2K.9[XTa-]D;DKhfPo/B%W2dnI\aoS9S"Sc\/R)F_GIFoemG,7IAa>YApYU<6paK:U`a6@@[TD7*s/+pqXZJo;YWLQ+4*PL.<UY4PD/3D:YIsk3>OGb2@:O@O%CT(O%(%dWbp9n"$Fi4&;Dn2!S$=2M;f6tN%D64sY<e)!"WZm?E<)pHs0%;>&FN*o3hJst^Hg?\M;-%hX6qkMF<*=%lZ$"Ooldr9#%%dfN?gjC&_fs7q).O&22=f.mn;Ys5=l+O:1oqi[/dOAA-k4ZDGTIrTpU)?u:S@j#IL8LV=RlB2J2]j)l\TZg*q_rG/KeD>;G1WnB%:<Q%rL0F-:9rkJX2=J3@J^)rri6WdMLoR1E<OoecgL^GMf*$c^27pG=9he*-DSH,l=&&^C+uo&]$"q`Slc\;%iU5G\mV%nYc6i\"%"jcAVCcPqW?\&2/ZUT/A^%$EWRV;J=GC.qIF4U<`266QC`3lX`^(h;%U*YrN;Q.""):Ob,QGGSB#l+M"g;`=i&RFuT7*<!4/ibAu%k-tSSs1kK`gNHtnDqit!Z>Id^#8#-)-sbS;j`RVB7TIk0f\F-AAI&(=Chqmd2TOY>DRnH,jkt)cc)mr0L'KVShU7?H>;gDI!,X\p%EOC!0j/TSiHc:;1=4i<m_?1amd>odn*c##qqW>2p!=OJ=JG\cJkO,t5h$1L)Lc(l4=!;a.)raJ6h0o$'GMS,@+i[K=LLF5-e!d\R%gj7`B\)2Ap/PU$'1-5WTFk<hVOUnKo?%6,d:.M@f=G\NbY_qr'b$:><?sHp4)QW3`Y%-mlX%]KU>\ce3Y6H?";$4^>PW-^9U&%ZR%SLge,,th?OZY92-prZL4M3`u/6mPcaoQMU%dMN`tK2%ctG:l=R(E3QMSHla,(6T)rA.0ob-.5jDY+.23));q*p!cF7KG6f*4MA<5%)$E?+GD]g2Wn$]I9p6j<nNaksM5JOkFk(W.lh"@C#LUQ58n6dIHq8<YOSpJkc:Z"?5S9tcrqauZF]"PkjnABQRZX+RBbkS>H??47%f!U"gprS`?O6l>h\a_TPZaGBKGUtaol'9$R)m?n2'0A+N4j`7Hgt@*llJhhgoFKgSY'7S>&)R)2?(<seVj0,He'`RmrMiBFq>NVY%l]6Pn@t4Jjms+I`;C?fqerZg(FrX/hqCV13o1sbrs*Wc5s5u1fpX/`Jq,N9Hf"Lk;9fiP(QX9^E7mHh&0E''q^\X3K54OJj4SHCR%,(huH>hgrc-XZ]3s7O,krK%!LNGj=4)diEXVuGsWhu(X=Y_4aC>n#K&rh_pYX&"0&.pr>-2o#@<T7?blht*^P\*;A2>5HS-J*2kW%q!l[XiQ89NjiK0'k&3KRp>=/fm;F/SI#g!=q;:&uc4><hmm$E^';,*ts8Dp]rnUqN*7F;L(iALs13r,lDgV6U5Pg^rq9erOl`IpE%+Z@iTGn!.9!H%k)jKJOE)rC:DJ,$H2roW>,dsKXBS]SJ*[Op)0j3_uJdcGj;H>Kdi`A>mInr5`Cp(*.C%diZ=\ZpCEY.80#"'`3O%h/`P,.P'o\F7fj(q-hOU,j2Ep'#Z9gE.JnCbc6VWV;T1+Hn<X`*5*o5M`LT90HP<+Zo!i?ap8"@eeH'>]CuWfq-7)GKH,K[ost`)%,I-mN4U.-kGW]bS0%dG6"8:h2;Mf#2CbHd%n9:@u.>VdcdA.(*afE8+R:HR!&kaU+XR2`T8MAP2NW%("2j--br@$+loHVPUq]T`$%nA_W_\$-aP:o/II2@gP&0GH$:@F0)Lg6]tE,,qM("rqf&?QW`K1Y[i0YQ'b+blbQ6"tnaYU$AV!$F8/]8d[epgoTVDZuc7#jBm*e%XsuG57>Q-'\TDC#D=+..fT\`Q,UrpTJ95PLYUD01BZ`hiO+O7?$CQ*?0bhl2(\4LsOsPC"FVQY;=O'oE9X6`1L>_K"PN7h!nPkMO%!a\E^<X,\<0#u/cCPb(@iuaRU&i^'j0(FF65rB3tP]9`96d^hOVA,s3.1X`JU<NYl`Z>[r9Lpjm5uDckLH&D:\Z?OS,=NJJ'8mFS%VX'=`=,3.B^l&7$<m!\)&Z!C4b`HZ)#6/T\HU':t'pXS9<Ak4_S^)-X5;f7!pU"VlS(HVK-*m;kC16SDmej87-9ke`UtK;Lo<6!]%g@MrZY](`0"bq:*AmW9?4$<*B`iO_o#V]ikbeep.'/0e'L/21m#E5[u/1)2KJ6@7R8chpE0H(:]CDnX/7H6XR9d=3bBb2u$Bd?6$%:[eZS_'f"_%A/B<`;q4fT*A0I)Gm2H.!qjuOHd*QlN0a?8/<)1$=GD30NGqk*+4/GZ-^;9"NJ:Z1CGo!*M0gW0TX#n$Q*r9B79lK%"]Y*BkDC!)q56h-k_bYWY$Sa.%f0>;G'/Mo)3C9IY&1c]*$2th_Zt@']Bbb_L#Mk"ZZ=U-k,sj-U[S'crOhUHjRB=3CJ)Ua?FsfJ%Du@un4oX"3Gaa*\j/\5jnF`^6mO6K][;/r@4o4]P54t*UY.RFm='k[DIt$WFWSU?bXt?ZdrTn#i55i>5G<VC$^AQF*^@c]2Sn]^Q%%[GrM0@(E3^j5b=:I"[-g$PBrV"2i(h-'[;Q"U-Yh4EmH.RWqp6e,Dl0N;,VBrOoH=+BSdVH#I.c)OL9*ii*T<Ia_a7sii"=KYr]%qrj6i<kN'jjlqiH\$!^gGZH]B5Q5cd9>SAjiG3Ata.9EHV<cO4^/-uu'']=^O2m^jnn[\4q;>3%mMl2sKs*\oFj%pC<ik/DI/G?l%DhhYEl@U=*?$jhR[C`IAJu7WWO!hE=?EnP,JbT+5oo%,rb3lYf<o,S'iMV*/;n_`DmlRak-*$nU5IFjIqSP[Ee56#e%9&b5?-Abf%1uCLKns;T><!ob(:HEdsRD1kur`YpN#[iG>Xn53B'Pt@)SuL-uCc/jEd(\jrgXdp!rpnD12I<Y7CR'nTbFa:M4f90UW4M5s4T0c-%g)0^d`__2Vo\I>d)dubnGU<Us0g^Xq\bL0D,^4p`3c'oLqS2pYc`Rsno.%Yn2ta')6eM>j=k3)[@HFLNg.ikint48+PfOJ:or7M6%B*AlGn,(:(&NPPUe;)m[?Dq9E\3#(#7:[O(Ij856"=?md[I.oV?\rU$,`Kj9&1Y:BbADH]Z8t;5N)V*@hU7on-)+t6%1k*is+mB6%nN&KSQ#+8E3T2"57`\IR!J4T77;*ppN;b'd\n-RP<O^=V=j]U:VF^JKXor1L&6#F@gG\"Z]^-#UK!5n#S-jZH[k::a-V'F8$X>H7%YGFsELh"\->X=',4l+M!4uo.Yi>8bG!h.MEj_prV8DOm]j*`U3Os)QmF!;M8c9*J[@H#FO+Ioa2`;\@tJV/u:p-\*"YT6GN@YgW7%EA_3B+1<DNK+ZVn,ogp^gV%NeDM(fB=='##`1`o.(s-&YfON5%-"Ba\r`[u;M[pObmuf=tV2$suVTKh!gh%H3IC6L^WfgWiKiUa,%<;L3CZpm*;N0E%Nj;J\8E)SEkX3oO14+6ZD1,s!kap^*J]rL.8B80C'e-^r-KnNkq?oiF9#W]R6i==J+lBSL^hAjgmmY*Fu`$q"b%[8]s5(ZW*fYFg1;Eg<+e++rW'^\m?:i;8RlqXA"i:,T.(n==1FH5bDU.GK=H\"r];TD?mT.nSX!lt4Elo7-N__M,K`f0I9a61#`K%gS8V9n++Sg?i+d):FkqJA*Pq4^?L-;l\+`LfiPoep&Fu!'tuo:kMc$q`uYpclQ*T\m0JMfY/KNIZ3kfN8dLWtnl^b^gr6>u$>DX.%O[:ahMbmQp92PlXJ2s6';YHuO[c\E`q]8?8md<Yc0i,/Eab":?Wb.\T<J!TL/fQ8gpq!8pGqW&aWa&f66?)[ek_Bd%>EW;m2@TbD%jdQhHY6eW50kgEXM,Z0,N)i]:U^G([D87u"0d['lG,!'8N/LCuI?Gp-/kAO<'N.o-7[GSoR^8%DTRA=699JlS`Hk&Vj!RM8)VpLV%$H;F.9F3;)/sS)5"'B#A_ak$,7W*eB#S=!Z6T+DqE[.C&MFlA"c+X511S*O0[hqi:/0^Q9m-UTBZ.$et>9HA_$O8OhntTShVqBJ1%dn,s:pRkO2_-4=n^(b8T`%plNTH/s"M9lCK-DYNW/\!u[WH@Z,Z)5lJK%ql@&L)Qr,))mbfe&BXMCFZl0UdR(@LBRkj#aD/6^fG3%A7A8%VM4@P.4R_Z'GmdJ.qJ-<WO7:LEPEFVMA4431FUa?\u$t]Kgl?mMp+7j`Fr2+Z:5):H+2-)QI*?H/1Pa8oS4-\J0?X-&8!E#%Y!k$VAL\g5d@t3N@jX$C_HDu>.[qu'K,TmeeKc\6f1f/0$7-+FBir#E`5r`jTr_oWmsl.Bc4+%o0b6UmB\mi.VM.Rsd`Dp]MICIn%8J*700bRC-W%>;,;'o4T=W5]?ctl=O]9%,B5k],mTWX,^UuEH>>6o#G3Jf7W1%7h-VFf,G?APEiWNE,+"/%6hEYYl;O>KDreqHO,%%4_'?8KrjLiY7PL<l%[U=5jQ:dD8OCS0!J,-k[+(((h/863Bd\f%qiEZY<9tLPGMs:)TiN8JVI098(0AJ4)V2q..sQ+sgAK8J]Ul%JImLq7a)YpA)7Ys)gi!C-=tE5XcU@U&lfZH;C(Kr5oCjT=`YM1;FCS"GZL)9*nSd\Tl_H5%%2'<>0)O3HtM6HS8"X&'i!-a$5&1t%OHS'sR_^6T#D[.*CPT*t>8l4<ab"!?,LG/l/S:D#7K^4X,RQ7Q5GsU:XH:]bWXE$9en!40.T8BK$5!EH@WL&=MT(ZdC5-rX+Min(%SQt)C1Yd\#c9rD*3-SX50>pp;fapd$!I,Q,*$s8CHl.@@b+'&*P)2pKL`>au>'PH)BilWdN/5'<+rcZF@N'>A!;gAs%'Dtk%21UV%/1FP'.h_I3>+/$l'%XN0'ki\W!,iIg1ta'&\uMtt_KVQNclI_HY"Zpf7/T[*.;]p[L1V>;RMSDcfki"#nqO,WBE219BVB8,(3+%4%X=-.a&4b5$8r.-\Ou*3E"2k]Ua^Tt!jE1'\9;Ef\bPJI"68Y7'8`s#,+ZgF,Z%Z^LB"Q9;W`kAB^TSiV0CKa,5YpmY5[>XAj:[,2%*gE1MOu$,q]=klGJd5``TQlSk/na_&e%U`3L%\f8Y"B=7&[=B&(H_up#K8N,@W)tLU>BpS%6^%$,_(a0Jq2B/<AT"CHPAM'G`&D:%r"nmrP"r(+]EG\\Y!PUS3!qIoB?aB-6I27(&.hJ''p`9>%\/5iT/lD,Z4;^0\4bda[gY]G;\S\#bg$J=q0:3A:)E`Ecoc9>Kp>as%1Q]Ng`aQJQ')J&aj<mtZ=sBN</uGIZ<8/^%!_fD5aqD$?Yh`(c_(:_Kb;*6$Su,62<K/DrU5hq`E%[eP<!Y2sWZonuFbLANZ4.46%i<hYEeKprl.A1)^jU!;I,<DJH;]Urt[pq'76BP"-%)=nGfeI1&A>0bWTZ<<_5)N-0ft9k;a9$9-lqU,M-\eV*<--iZ6+Wg@;Re9G%B#"MT#TjRd=,,k5RT;k2DGsP99fb))@S"FXZp^,%N'rmo%'cgQSIF2HBEM,!%I+bZq;E]i:R6N`Wh%(md1hRE,*n)[-Q#d$;G=WV%VGMnGQRo##(<ceZlK1lcF&E^+iE9suV#,_nJQUGk5o1"8"C4FBfmo_G'6JDH$2S<KjhR^XarNmVluNla&<OO+q;<OOU'Y(d.?E[t%+uBhd&:LkfD,E`1f$q[gN*4UG4+N^9p*-H[BnI!\:rMs/P#Q/bakV];ofWP#jZ;u!$'lSKc!f@ikpf3tp!fNqqkHV<\sW(J$?=XB%LSd1\UP'VS(Qqr[gFH94D_-tV0maRAQ<I39e%qeO\IAhdCI$,@q9d8_RN2/?HLmrO3]fZ4;Si5Lfpf8o1Yi=o$(\,Q>u9McRPLiI%f7G7:2LIV0l8gH&R#_Y;jY_6:h*"<CZX,MQ(TI[l^bC$=pim-MaGMCO\tUBH"'\,U0F/)PRcAX"0XXiB<5hk]nD\W#V-64-3@LBb%\cq7&P`X;]Mta^>_Zs<ZWBkG>MTQGi=Y\p:'KYkd<\<UOa4&XpcQpS/$SQ%'&r'jE"a*PXN\PHlpZ`Gj#afAOMIj_N7!9'\H?CRZ%"bD#P?-p1J3dA2]/Xcd/@"(@%]8]K,^rL)T)lp2oEG.8iPbr&lY2V,CG?.Cq0Lleh4mZEV(.FX1=@n7q&[_N1UCD:)p1>3/:rP9e%.5`#J_<4=i(tt7&^_[tE,gclO0s&(r-WTeiU`.IR%f&=`)SKOp9L+$;RH_8P,oIU5!a&p;,C:<-diRR?fI;nmde]7R)NGP#%`\qA%@js%Y'29K$@]k06Sua%`AL]13%rtBG<@VT38>XDs`og`)1"7ktd9INRZk18)UQP'J/h=JrXf=QF-;mj*$6\;4c3?;D:3qgM#V!%b%FZIG98/%j.$<?X$!$'oB_5'Aj*"jEpfI=ao(cqFH(!0I7WE)C0Cg*""$U`CbfsQ/\ViV"8qfRc6)WB,sKd"mZjK#[>BfhnAM]<4O%P&EDMdR$)@[7V#>#QmA5J3Hd`c=Z$K-^*npQCk$(*28oh:D>CC!h-$eqAcRaM4/*kIUVtMD?;KgP0n0b:#Ktf6:P^T-M5(p2j$rN%6`noB:9>*Y_Ca-?l8kYp.P1W96jGk4cPmk:>G.>W7%N'FPlh*2:k-:`L]4stB!h`F>$G_Pi!4>X"f.%hqk+@p@B:V66$O=@it4-X%Z$V9L&`Fi5P5h70MBQaRIeO-a=qHUdM3`us44CS2R\bp5jhXerYVn7nj[)=L()7ib0o,mIPCs=$OYK:V2um\j+Z#jt:^'dPa@]BT%'bV9i+^n/7&hOSlc@CGN4C')I$8%WSGm8=+;SYi<XI,ap/r^m.!t.(<j/D$-3Ue3qaSak+iO9V*Whc$Dfk[(9<HSFGnRdQA@,N7a%O'%R3^U>:T+j2k-[:3VL/\-PS^arOY3u$gd[FK.n6^jua?,*7+&uo\HBnQSp/CS;Y><)2REZ:guECnP)iO@dE<?&ap2-oqHA=moP%i?j:&C'@j&@)S<IZ!L!t'V02l8K!EHEcre[T7WI,_0e@We+d\2nS[hgQY+[6h!!i;Rn*,f<Z+@6Ai?!lAtN#,B$E0(YY2Y5!:1nn%$4I:f#eWMnAM7!0,S2We4D1rf,bB'fCLO\u3G4*UIQXs4DQ=m#?C.V_cs\ep`PlL-_V'/g/.Ag9X:iJZX;p3&&B9Iln\SaMQ'Eua%OG$7/(rk`$+Fn#]1PuI8,IJL'd=RXA/4X;SRYiCafM@)5Hn)=1\d+=c#&_duN?FIX,:)os`cC_m/j1K$64kh!J4bR3VQ[nR32#@J%JR9hL8Ck&Vlt?j*7!pl])BD3,=p$5IN*HR[)OD:%OUT\rA@OHA"=o]"5Cf*=kZDA.572\n%m5GB+G"9*)N@EDVN2(B;fZ2Y0b*q1%=UaeWP,airaU,ZtnIB's#RRjs=:pt:$m#PW)<j>]8>n@s[:kCh9k2HFWoO@6)Uc.rJ0mqj2]$*[R*&CJ4pZ/u>1HFt>4Su;kB'V!%fE:Fjm='H'C[=kY23`rqEq.Xi>FXr$%IOHqLM#J$8Y->:o'#Q$nT/k1f0nLUe!%mdVhB\b<+OG&#_t2j40uWk1P%[TN?f-VUt<jb%`M9g&-k\l6Jh5.,6Gh[h&bNcHl?8j1FlBL,<NPYgWo0neMh+8A=1(6V\jTQR7CiDQ_<kU;Dqp%Dg]/qhi=qddG\ZtJ75E8tK-IIP%]-s[?A>c0lK[;'):;p.sHgQ[J/lF.*4ArSe\<bpa>mM%*5W%OFLj:>K1)#EKa<;,e".A`L:Ig_`+DL=0.a]c_3NHR':(2AL"oYdS%5;oIMJ:h;4iM0#>M#Zr?2t,dA?=YoZ@t#tETa0Ze$\M&r^c'.,'TGT7cMtCD_'Bu`?]C73T9N\t"!Y8=%[?GmBG[%M9^8;9K%;QY%Ip*"aeP93phBhOgZX:u"^rg5><P6,i</EQ4*bU#gXp^Ig/hF)_\!D_JG$kIbg'&,R*Kh3G+qG&7!)#(?6fS]CRd&<G:KS6iCfC4^%<;L&2s$4_]bL+pj#f2:t]Cp-<N*NSiNV6\)&3^Y$+G16ZTF$[W"B'f8&heMlXg594UQJe,3aK9n:F$m?\m&^ndrr\W1B*k)S=t(&%-^D!-[$,5=28Od$/TsmrpXp3HVpH]r\@M]f\5U2<$CsmXqbSQ%.tL?33YfiYF(N^;2k8E?(Q8Q>;Ro*4=b>e]*$$YK@on%dG0.4(%=#s$kDBNSD3<V%Lgq@\aC\M2?;hnj;T<mC<YZ%ee9E]8%b_4ju1^=PhK/+")rjomipfl"3Y\7e7YFEH@E8*.\7Ls`<^hX^OfD%RB%=;$R*!B+b('>^3")J^UnGpe-:fD/%1l#9s2*/_[I&3hFd*b7L0S?^'3.cA^!/l@nmE+!ag-$A0Z4fFGY,i^.%42F]^'"\H%an,c6%f[s"1f9SgiQ"QkSKY;SGaNd3$c@Ug$4XHI]3cR2Ub+.neM$27,:Z,PGU?:_&f[rG7RS.9U/b"sC4Cp<.8V7GiRb;2gBLbPu$LePT%!iS6;3I'n%Gd*"L<'K!)Sr)29\O*6"a;#n>Z4p,`p12/iSHUd>-1;4PH:,dG7MF+lrR*K%;GpTATXl8_\glJ&bG8d(Of:l&IBeTJ%__^k^/Ec^`pW'n^;ajh_/<[i+cQlOFT#bPX!C:ZO&gmi+cGq'`R[`2'Z^E6#mj>)uSr#iu]PK'gH,SNN4H[K:<^I]\YE$n6;$J"*%Jl5$5o*@q361/?[M+la,\cjeRC13]G^c\e5jsa2W<[sm3,&!rU3M/ALA-(`.O8:4NOA8c@o*s?7g_@tq:TapMTebXuT]tR]ku<WB%XpeaGg8r(q?HSiSn>ccP<t/lUM_%KBZ=HOZ!#UV4kjXk+l4T*UJTU)e*#$ukIVnd:8LeG\lc)&Sm,6lp5DpNr`VHaj<H1;6p-oTG%\hCVBk^.fnX[>Z(Sm2PG6ft)=B__3*)2a6,/;bg!M(f+<N#PQ_%l`?mqXEXfJ[bRQJLi^2U'[^sr9KeQ)\8]-/pt\Z1)3&@2RkOq%@g,E4[)HQe%H6**X#me&j4\Mn@S>:_(!)k0hUG!Ne6guZ$fT]NCfqDQ%O2%Y;;$@*G2Ni-LE1@"r5b?iC`$Y"oid5EoqsFpM=c`Y%+I4/jO(;kF;COa#/OpY^3"62!Kjb0'jUttpVDIa4h#)m@F-K<S3>P3I]j-P_;pg5klk$`O-af-OV(\F28OP1pT?E/)957&lY0$:N%h'#gD?<mt.:sFm<(BLrA=M.ge((XZpe?:b_5Q;LQ[U!j4P*T96S$]D?I[Qhe2'dlCjqtV1,*<hK/7st+ZkAdD,nZ?@@2,)`(WGJE%/T!Z[Xa,uR.tfC.cZA0=<Nf?U*ZJhR_FSts(S'72n_CPscqB)?cV&Ao-K.<4=U%Ss;R@"\&L3!?6SfM,'tVK60)e!0o1]5ge\`%6%=ZZkt+fC3:--tLH=]@Q/CU?!_M0KYPjX7n/M/825JMHa\QcdSJ>dq]uB9ba0VIE/`(J6-kWoD0Jo&JcW7j,&$-Erf,/?3/[CK<g@%)DpM8o@6;<P1!0^[S,1F%F,(=bul%5^stgT<u]'-`MMtML2?k\Y:;Ih%DY%S2''%MKj;:a^>$ep'b/$qF]#D_10B0^JN&PZ[in)3%Wo*C]rS7#)ju*U%C+Bl*,mD[mM^nOeq/Oh5o-sSE]:65+.thXT39fbjlkmr7/djXX-(W2P.2o![dH1?EM'lpKh#1*.#d07573K-<%8kWEtDhjFAad%X0(j3F2TM+kZ3p5=MO"'QQ2<\b(K.&?UOkp0.]W%pBa<=,.e6Sjoh8R`uPS\P])RL<,\POUZ\>]ZW_QW2-d9!J#%.<QPo7e2DkR4>k_BZgh9TN@H$k[+BWW=5!28MBs>0dl'oe\%;;8:a&f*eo)Vgcr.tVqnOH33sX#IH$Bd_XaRtB^raB*1qiW7,hi:%W82,IOZ6cTZ9,KiqG=+G4P1l$\P2l9BbV',B#2GSDR-i$m6h$G!`E<:-Cc;`=hR+sYbc"j9nLt,i*I^Q]9f8sQ$Y/S=C%,YJqab\%]`_t#=QLT[^a57WL,mMXc[]sa+,il;2'>6O9=3$,AV-W?\mm;VkQ=ThQBIjfi0VMH'6'#Ei>!Ac]+n!&fr]"*d[8Ecq@YT5R<-JS%bc!a/0i3A*M>C.m^/>0AOY&a':5$*n!V:DdM?\8L294/XItN>A?^BX81Sh:B5tGO7=@W@RK`7^;7,F+oWQq;<mcr8HR=kue0i1tB%)F+E:p?^?]2HP^51cdE"HtZ<[lE2o9%W'^[%$RLF=]3mUdPe8YFAhlY0Nf*XV]uMo[]I&%deL!($g;o["Fjp99H^6DTSe8h"VBo*%hjEd/!UqQn]R\@h]j60%_ua8Q"4K\bddV(B''dP7fcK')<$6g'a[G"7+hDaI;=Z(T@=V=ECn49Yis-`]9e2iLRD2PGH&%:$?^]'J%'4IUl7csu(]n;N\)*h_<F7dO)OBrWd@gA-p[%EdoiQC*+@Gdan@dF=Q4PgAY*5V:\$I0D]rWWh]O%P3@+Hg<,9fUCiX`<c^-\f=!%_]\aX?%>HQ!+MC5UA;fAiJ\u;V1OUc8;uY$XKoio>QC+NqGf8!.KPI/4+FdFV*A?5jFo3]Ung>'Ubn*'*;G%0M?T7/Cg!?SJ]"BH%oELXP0TVmF0#I<L5QGV:&QQ3?,h($16sq5XV,507(pDB/Wj(;h0IA9KD"eJFK@)C\'0k^QlANIH][2Zq'6OGf>+@/U?A?.p$q-,W%8beKrl3Mp!4ihI-/;Nh:IOWaFno/_$g1Uh:2cEfI)TWPT<AI@u:B!n1&gIcZbT&Xd_PCpURV2ES*@?-teWF1LX,q3K2H(a-,Xo[6%dGV*eP*3iSd5a!j"O+gp@i^G2m%@Vn@L&4IjLt,N$o-Ja.J!nGljf5r=VtEMR4qmoWsQT$4fW:Oe*"C;LMnn>GcnLpYnB)rCdN\V%&6$DlK/#rOY9;jp#($T9aHqS*J]chb6bV0[?QJjCKVaPTZYgX"inW6uPJC$EHBXK8h_E#[$l1Rfj!efNnJUF$;rR2`U<F>.n&F"T%B>oB\YuG=m!a6@cBoE]K-[Is,$5\A3%7Sn(=tg+jB%b,&ChX=_U<-Gpqtlcu@Ube@$&S;3-W\'rQ>@f*jT4OU,fBRNbfNf/`D`Kp%mE9k'KO(2Vs4nIBG<c:4=2D,kH7RC[kmtE)C?r*7PEL_4jYOt5'+46.dX@NQ0L/;"PT?;apeZ20G#(?`he?/iB7u]42FI\V*4NtB%hK0qN32H.%i56D#S3uE]bb"JoSU:?XP(aITF%gN]r@/Ra&!9P_Uactf_G5A7Z,1$Mb5msp+HZ^P%mr,JD6i%+q/(pm52kB[qlQ"<%)Z-Y#h^V]%aDY[)KM:r@B"oo%&Gs^5`4q(R\Ac`%o3,I?&OqMagKD@&$-W4G.sU!_Qe2sA?fYb5K?iWX*8WV#69!Kr^q!]2[@M^X%%]8i#>Ne^eKJNIkn!9P9LAWWJLgROAZ8\>-s6NCpq%\'>?prF!1N6D1I7=&Y3jlZjj^Mcqnn?C<mRp(A8MiGUO^&%G@)dZUQ^;u&%=m1(Ql%=.1Skf^2FuGo4;b%//7>h/-"Q$tNS]f@;f,!IaGlPua`eM!5n2>jd$GS/%<XO';E#skKB2fQR_ig)_7)#/9G>lE:[mMrL%T^mjJ0_inY6;)5D4k#t,,BtUl/3<pnO75F9H,cDAK8K5F,Va,]j:b[`E<:*qFLVlI6]K`T]oa:$+8'Map@W!&A!X)3:8=?h'B61\%XtU29re+.j,F-$mdp`su\/ra^'(Hs),s]tU-FdL;lT[gHJhKG;P"!0o?*N:T:d?Eu;GlV2U&<01mO%1G/qJ\?ON#6D=[%ZW/*H7l%\]W_t'Ccq`RKf,=,p@n30qHHfDD;4rPdt00kmMZH#)J[*BKpJjHmg#A9@>A[c:c8I$9`8o*G+6jq&Dc=[42R?`B<e]WYM(^-Xms_%OsQ%"B2@J^NkaGYASWbWFs3$jG.Mjs]BTQC@ij0Snna_?.DBdN,[&Hs,s",eFNX;30o7aN5(7*ueXS#(S1S(-nPfnt.f$jh&I7=G%KJ-EIcWtmhQ@FoN+]Y$=?hhZmch\g_WiN^q2L<CIhch,$esW65]kBU!9.0&KaVKmH40fG0LS0Nu/`rB>(OTR4=;hI0jfhCa',MTi%)V96RA/"Ls;Wl#^'Ts/_hi]OGl=E2<b=m`'+_-3_=gtEiElf,kef,DmejHa;<lO314I2K-K+Y4f?`Z(O%@O)i=2SdqN_`FG@HP47%IIZ<_?o`n[dlF37K^FWOiCnVST(7M;ELR/orKui/V":"Qh#hY<FVk$J7+E60Un*F^O=i@k335-WYrP9Z>(3En<OpIP+pmV(&C73e%Odn"^6T>lV3JSs*M9H&4cTsWS,n+:=:&GUipiH8e.X"%I6:PWLT+`Q.9-1)_U8RV#q:lCY:q:pYdhL'gF,FLKj69)]-:G,V?UF7g%=d!(@E4#R;">)n21'/U?'='I)hFEor3%g&l2-H3hno\Nqn5ZO?dVX`lmo=r#2'pR8$o(Q.W-p*BoZ,t%aES\0FF;W+Dm%/g)NLU?%o8uUK(eW,YV(:W;$>8ueO]\]8&sE$qZ)9!3P:e-$80XX:&s5KoRu)nk&T]`P/2Ng#]CuWfq-9@eN*Si&Q7ru?Yqp'uPPIVbTd$K&%%'n15>nN5'kS=A!<di1]CNnEU4.9i.W,H&PT2YE[;]"d/G]eeiM!NJHBgJ6cBIY&lqjHjA;E^+Y"*)\-J70PRrOM\kgs4-<([r*9%E^Q8e"HDU#?53KEH!`%ia;8;^WEknmI5I;3Y_8U[URCb!,SuJG7MAn/=]G^4O*9VJ`8%t1TlhYW\&2jl*VeX)/k0$sg)![>F,3_^%D"'2>/q7o-im<Wj)C!Ug,^^KNUm'W&gr4AI\d*"9ZY;FgSs`<Z@7Q`eXW_@l?Ck,rftfM.G>kH*%G)*:eA0Wp&5Q0SW+oe,`c0j*%HnYA[M"c(RVqHV4?>L\c4$=91GGT^fWkALYV3Z)?ksC]-!)ZTEQe<FmAU/["MK@lr>77<mo9KS_YG%XG4dFF5m:M8h6/s.W.h]fl%IN4/'S]VBD"/nCBLY6Y_Q`0"i85I+2A'V6Ue1IX<:JksoeuDJ$*&s"h-+dO0m[X!9BnV2eBI5Jj_\=GiP*3iA?ZoOWANYK0]kCBG%?';XD6J#j_F7BrVo+$<$f8k"#fdRpVB:?nW7-kI<i.I*+3[.4-F=Nn&:IX9"D"ZWiOE`j)Nus;7(O^3!;V\D6#_^&a?$8X/7Yk"R%7P`F,!Mpu6aVhI!"Y+e_7<8j]ap8Z,lH]1]cS"`i$,P"_4R'_eRWtcRdd]s&7&hYYKllcb"!,KP;DG!B=(`1:ZSmhC6/.c2`pQ7T%Q)<]RbAGcb3e`eDA8rak1h@%L&jmoeh@)\(=lJA)SJ&5j$aB"B.:HQbWRPn1#AK*h*t+2^'U)19BFJcaLBI`'FG^!C41h$.$St?"%'TgmY_d5bp_pG3k8\"d;pC+E-5_JU(.7=LEZER.A;-Sk>TQ3Fk6nX*<O'!cuBVJ@9o?eueDdNi'7!pcOF@/MjTkT*<U@a*pHorq?%;q#[j/EE;075OHOT*tr?bg+!:N4Q]H<@nR0AFu''l]'+"@l_h.KpL3U[;fJWX+1@/0B'4JLG:"u((Eu;k?e.X=ql_QR&Q6"lq`ZM%LGA@&_3$#q%Q0>c6KceWBi<1p#Nb?h(%]ogB813r8FO9@VUfA^%e*;CnF5#XXh0V^hUWQ)Z#d[col+-]T$1S_WadflEW<hoSLrTB%j,m/]Mgfbd^V76gcdBS3KBe(0iJ4i^gloiMNIcQST\1lql=No;p7:N=gaR-ods3jYA'_<K1YFqE"*/`eo:F7s`XJoT5M%^%pIKPT%0%D$-NUQ:mp4Yif-B!Tca%iB!N4sl*%cc&HY4(/6*q`LecL,4(SF,/lP+-4RdPp=oqU@+;Hd3qG*H,]\Rh5=TQgAOH@8.TZNgtQs%HaG_RXSeaZH6$Ylm$\tTZ_o#e9"+H\CsEQu%)sW_Rdjnt4H'DRho(rC7SdJhi^CgTcW%&kauC\mVW6X;I8MG@Ia>/%[iHjp+HWqC%B.)$&dC67@qtA#&D<tsmcY_nfC"o.%0V!s;nkIB[\X(f[IoJMXdQ=:cFmeO4<joI1*8:4-l^lsM7gFA-r/Rpiq_q;n7\c)[p_If8%T*S5TOX77q@V"J&*q"iVh&krS1dALP/^sPm^,nH_ofU%)I8B&*.Aa"HmlYc*:Nn;"/_R`4?t[*6Ht[`Z0\WiH8p;Vn:MQHgOEci6%^AZ_pB\JD^[W,Oa@ib*rp'=i/l/:uq[[hS;_AGlX$r2PHp[mn.[J>(I:.rd)FkLtBhqVf8VU)^=3Yjg5+cgP*K=gMC2'[dcoGsE0%8P\TlockoQVllWUm<T]tc""#_.%T%=Ycg3qC[8dUel*G'7>D+\EA+go;mSHtBqL9t[rr5IU>L,7mls(;p[7BtQuj[IPkQ?L4X%7W%FnP3fq];9_:&?rbHWOkHgnD'!,rrc>^V`2Q*<fI.g!9[YirC40llLmR[Yi88NBM]"GcD?OHVi6gl0"esUOD</q^1#-SF;M,[Vb9V%a,_:p[C:(UX*\q<Rd2$K&j=l1.P#3*]8\To2kr:9;uJ'bIPB*GLet4/9[?HqSXG=2AhRAmPNff<Oo?2h:Xj5lHY_6qcJrGhT]`37%r\:DF=H@c;s1k4"B'Q>KEU`aUG_JgCT$bsFmF^+GPIAaP:8JbHpUmhX+q"ca2)TTdm`r9MoHg:SEPL(UrX=[(dSH2nT&.pVRbQ=T%\j)N7T#uYMFNlmOp_0'T:c=4+f_J@V]5XA4_j3I4Z?9c+n!$"`Wde:/[A2'nA9Nk(d-aX=#al/d)<&F"Z2G<4[U!_\&&:q'&F/"o%cA7Rq:DVG"3M/F\IJ@X)_1CI"rMCt`(lo-u`f_](o.7-NK09NhpMm*L4Vut'Wb:eak1p1p1c6L+m)+7(e'0chlGtU90T%j;EBIM8%D.1++qR/1=34!>SZ<B??6No9o\M'GDk`'683cN9NdmN^"c272q=EW=<>E`_J%rV^D3nV#js/Gs5d)h%S+&gP8k4"DIgfQ,\4nA+A%^@q?iQ3#FM`4!@*pZTHcjITkVq]Z.@k)g<Oc+@/ureL8jbk1?t+-Hl;l5_8!RcggPkk+\QC]M+6&eW!J\";Fl7dP-h[dN+mbRSj1%,E]ZqrG>JmiMdikmK4h,;GGCg(=&M4m27di*psK0+-er4A&m07M=,4n4YgDi?smgJ`[QiNijgKWD(0>7i$hr[GWtMW1p5CkO:WF+%p[9)]mRFO-j>blG-apC*mFE$M[!Q?HSlBVjIO#,rD1jC6I0U8KD&_-XYAM<U!LLnK.8kTdi1B)&`-sEDCN\@aT8*/LI##;rfQb"_%[.iL_1k,.3\$C/:Q@=,VQF"9Q?uL9#I-X*E0'sGAnW!jNSLqMco!5EqAoAVd':6P]*ajl=\0:jNO+cU>n8pU,bm3HdZ6%FopTCq*%6Yl!,QH)bFoL"mLLaPQ4.-T\Yog#?@:-W8'(sgsU*Y*Q6DpaEB!&R%[,Radl"ng>=5QN\J_>k:oc7"p"im+&kE#44,"<a$L'`Xsb%#!Iuk-PNuRKVoZH#G%h>PlWj"MlFhD,CBhfn9je(G.DR3(9adude[:+Jn8V1/m&D-"t%OX)l%uIaZCNT0ilRqg_CoVd".mift3PU%V+@cKOq<`F2i\UjeG2[LX<_6L+:G+fk#aX>;Fn+sQa2g_Rp_+t%\&L7%aIoHE2cD\fVqTiHjY'6TZQAm_qW._?>+YU[eORQTQFJ0%IHR=Ac`2.K</W9E9QZWR.\.Qr+jN1UOV1n'n3#]JrD'a.L5PVTV];g&bTlSgWtYZSW:?um)]@W=+Z$Qb%tJ(.ekKlU@Jl*Y5KD:#%O+enl"$`\[\S$&_\q_X[%j8:N^eB<pkT2m1+>pAnP,=_;#Fbt=d%"c$\k>!(+)0Rh0U<[6Z):M?g=Y,/m)33Wb1a;6e-VIB:hV/c%lQJk)_gn[=8-HE59JadW#0VQ=I2c)_[\#0f9c9M"_?8W:oToI.%e([lM@G69Ai%,-2#>sM:8iRG*^$X;8*Lnt]8'<08%V93qi^o[%iV"&Ue&9$CX*KF;'uScHj,4>Mn+>i>m_c_$6_M=nm4.@g(hA2L(?WTcV/.!>dA+V8`^BWYqt=ZG4C"n=DJej1IGG-g+$k3.L$WLE%oO.BsSY<&j=RSObqk4S1*C?$.LWYnbBG\m9JBeS`kSa7_ho(ZD8:,aJ1fBh?chA'#>ELk8Y&"N322.Kfh8YODTn"&dYYT?_*p>\0%I&o8U:2fTk82a6frH<sLk+q<O_\eE1!Ot$X5GDoZ8E,TW'r#6mflFALoGu^/d+().[f&KI^_*F/@AKhBhUXd=HEt"ChR0tJY*F4&%4LW<f,5]`;@gF;Ck$E\6]m0D$TZUkc*eXjE;rVm";U25ng-t5\f`4Bd'?IIuoRF(<mfM"-[L`!SKOV%c&!(j9I=io,$"T(jbG%+t%*\?[OaN!TX'c8BQ`qnAm%j1&*38-ELq"-hD]KOhAFs+4m5mCGEELkpnFh6AB1'Z$qfs,gq5F$_#DRP]T?2\%j\$VbcNG*Qdc]Ona%#a^as6e&otT5<pZEbOOd5i;8PHf,H^HE1^QkJr@rn:C*Ia$q]R3QS+qdCSsF4g_Jh[;0_tN)A/o&6cosJY)+YX[oiARW.t:#C'Ft%p.WZA2`_JZ,=(UO,nhI.O[ChWV]9U[ZM7%N4l7It:$Iadlct0DZp&^cEh3^oC@(1IE,lUI+/_#Cq``du1)N*.en'%phK*e6L"?=.%_![N$C]hdRi!5(!4ZJ_Oj$gD:+Jt#c3?(7iN+Vt-Au+r[SO^/C>Y[%W95Nm`a:Fj-*^(E%M$E07L]\1T;%PR2gGjC0FC6p_>D[q'%6og-eGg0*oHek7ggqAU"UKDgAMR)*P[;T<X8#ku`(Efr/-P7X8C`c8k%eOJ5jOUJtB6G!`kekPeFW5MkhOa5h'V8+-/m\>QHs^PH%f!_L:d(*jCU.4fM"0#Vl)FVNq2KM&&mqY/8\VJGm2S4C[55R%XB9iTXfXI>jd,V_q&G'p<no,D.@NNMKOP4b8YFIpX4e1nXh4[WS%,aLfA5YCm=c0*>7*QQLH4"'`^:[[I,1#VJWE,9!q>N8H&=CUaQGuEOXqf^)!>#T6'G'Ycuf'cRNT076TN7A5_F'.6,ATH[Zd=[pY%iJh?(n0eok%rUVR'2rQ?-:[kZR[X+tV@Vh$[6<?DqkHN8m02bfoh8+=:EtU/D)/EaLQ6M<LA/JA[+^Cghpo"[dq7^RLPFR0FMuLo%'55@Gmm-3u;K%@Ng>.c;-G0F0-k@==)!d],0-!sZ3hJfu4LoIXq$3\'o)R>kheeD"9ST@Va*,ld[)>KW)r5PKD;bG,mlS#<=I(h:%T\fe%Gae1-i>W^(6%FXX84%QFB$R%Glk<`:<`PIQC:a/.]k4Y>]).<IXL&S%&WpK+TDYD$:\s2LM@jtChQN=;k1KV1KD(MujmJTo%4gB,lqrQM_dn>nlE%]Ygolcp]EuT+_M<jKNQZSF0@geb*D4jb@EUMu_(G>@UH`u&MN7"!Hfnli%HTj-;_kaMmh^>;(NkQ1S/8WPt%ma&VCEMN91IQOt-2ET<b?8sadd8GD!rcKQP%NTi0\<FC'h\T=rG.6Y:6fU=Pn>EtUFEqO]NPX/5Fas4_nLfN'H&+=EZo.$i>2S,]%KjVMX/9g*a<[VnNFu\cEV*9"poB$?MpO.(\YBgE>Sm8oJs7RG!]Z&+-rVjOE``[6[*j'AAAF]<<q\@j.e,-]J^3DY&4BSRXClFb=%kP"ZI]48o;ZP%Gn0!/(c/_1(=%fST46'13b7Xa\0M28Jg8&WF`7ec;sAgh9Whp!b@caj&C0Aeg_J"T6UCUm/Y&R7S$)B*rBh%.I\%d_b^mcJ6Z>:-TiK?$ZIKok/Ad1Oh@Q^,g0QpDb_[SQGuj<[u)$=>,<7'9$t@Z:X?%ifcuYcKl3^_c>>MBt:\*9.Ie;5O)]EpUW:&%6c[sMF)/hm[5-sqg?/(Fon,K/^0/h,#)UNAh>N6+Y@,4CkJ(kf;T%)o_/Mn&TDgD>oN1Jt/r+AGrqcHVA7P',Z%pSt$%/Gqa&Cj5%ApsSf@;Tk%>_m.7cJDZ5;?&Z/R$cXq#nHTHO?!:>\22[&S"=i(ch>5u`I0V_J*se$BQ&@dJsY%(elI+^`%C!P1cbE;IGC4?hTtE0%+"nSh_kT8lYQssC2i)LuF!AL>:[-FM*ZPg8V7Z2f#&dSLebJI"gk7>?_3Kd9s7aWIDe!4&A$8aX[YVI6hY`g"kJ(.3/P7aRrY5`A%r.[/nme,/okl6u^-c]shRA6EPrt::0-e)hW9[d,4h4->^J$:p-G526!6r.]dp,;c,:Oi^plo93R^%HY\ki[D,(](r42,r_G\Yn=h%_lDiu7&c.=J]:cIpn@6V421jTXGhjk]qpphlI$3(nE'(*C&G^%pd(fBgW-#o^JR<mG%NZKC0SG#'s*sL7\:U:6_b-J5us7MM:m6)%D#A>6?[\28E6da"\l.&]0k3&SN:oXHHj[pDC]!r(B4Gmta]B"@EHUH?(I-^$m9MpU'\];?o_b/-kjeX#P1&^fo1M?6dJ^qW*1E'-%m['KHmCBok"!`5ffWPZ5&%?J!D9Y;l%.Bb,q*ro\QN4H@-?j1E2QkYYZ]@20.6RWEr+bcmBmHdO]D_`H+,^ru.m<J7,Q5ag*T3;/%IEZLKd7N4Fn+MU`'Y6r>'Gnp<1HNJ9i>3-;=#P[MRG$bqf7B\ds2X`U]_+!TRLX&cMGDGk*X4deTXDc9q*0A;B,=UOGMX-:#6u2m%#$hi07W\;?%kJVN^A"gQ#:$F$O>NOE?IuM/==M8(p0Iji7d"rLcfg+rHI,Z8]__0$XaFKE9[JDs$OJ4_q\,HsQQM4Y;r[m<AqlB2%hc*RD\sZXP5NlA=6WLbq:7&lGi53h>k?d>"m<u!SG$c2LNH0A,qMS,/D:kC=*SJ>Wcq*_4bb7Oj"9Rmuc5IOEo(Bo.nMtOPm2^'H%,g`Yu*6l2,*VCtbXo<QJ\=#JHM%5JUrc="#kb$2>5#0+gM9E%#Z<uWrT9QD<ji6!NO0Q^k^s2l6metUmMM@p,9D_i\QG<CCh*:d]%"CI^'pglNMF:k%u3n#b"M\9kF=7UMAfhoi-!q%B'lTj4WmN8E-Ve4bV"nj@[D!UNGp!`!MF5Q4aA=4.0Am>a_cejfJqb'H:NZK!c%m_$k9VEa`]Ish0K#K?aNLb*P%2a59-dJZ4;$[W=f?l*n@=KQ5pkP3[Q(r5(bj5mJRk\7C8<<f6A,<Pib[qD<G-IX+[e#g3ro+D$$%OL/D>5MA4!DYDC;Xo%'2AtHp^T-"\1Gh1a6[)pR*`INijR[P=c,aj-jpicRm[%t,*3H'!C4ndb[DNMN%%h;*m`?HK!r70TRg@>DR%Jr_-GLoa?\;EI%"=3!8W^K_bACbia"LDK,=h(G9?rB:cOT=P*OptRm^qYj"Ch>V`\,gghc(cq6bQ`%eQB?6\%(`Ku.+'3VTd[';A%Oq]hn"&%06hm^S0A+(4jmcKmWqB<[805D@[;^Vr3K>dC/p#K;nIYOc7>Ya'K/c<+AmSsfM,$\A=`;UkNplrZ+banV!g$>nsQ2CF:%gsb')_3d0G]Ue2u\a==1:WiND2K&i'$Nl;g+$I*COmU-2rC&eoX,i8<bp,Mcq3lHeYpWsH-)a%T\22R*@BcAsHfNH9guD*&G2mu>%LB1jD=]k(jW@=$pI@m'Z=kR!8FXE+Y/nlmr%CR\a3*u`e8YKs#qZS-PL^#gV;c`0Wo_p9#DIiWW,E!Kc5#L.W-l\1cmnYT8B*\C]%IK%(BpHJW/i@E/hfn-5G.bnZMNrLmUKT.:*i>+DI1Dq!pLk9ufGRQ?1l"Yb%j&;3?$1<q3%XNFglLgmuR[@I=ge(F=1,Y)QgXZsi%<0omA]9trU5uSBh1]CBB*6mY7*!NI^XHXN^f.u]k>bFnEgY1Z\?I<e&6(_Uk,b44iHPPR]Ht#PbLD%dd&b7k(h0)H2"RN,8?KtjR%Au.FZ1iL*4nYM,HR]j+j0O^9nlgs^`:#r"iGB61ll#81`:AmldA[GAk#^DYtf1HLn+'c>O8LqF@])6Ku_X$T=\3b"_1G$7i/<3N9%9$AQqOZJW+mGUMS!F.+oiQotaHuA0YmpBi@oQAR"?E\-?YJ4h+PF$.cUVuY4\)MM!6!m@@rMO&ch!"RJa?O"<\U&W2c8J4:fl_O\%3WA^FqW;L>j6?..roOk8cWL@a^#''nq(01e9:Z_[PO5.*.eCpV2%K*SZ1Oi`bJiDt'1%B3(V5r'4gt^sWng0b;b^H0#8'"?Pf+l[%j_I6nSu*=5]i7<h$E3HNUEH&S@A6n>:I/.8*$:il@N.<:q.MEmk)#fR\KM1hQY:U5G'WuaE:I2g<4$pFV`)V,"]l\XrJm9=JuPJU%-n/DAPngQQ2ige-??*_b1mn>$r(35`:r\;IL1[l'Ysdt0LEk1dmk:9%F"Z.KJD33dHFU$34<dL#3==aV":7N[=lpYa[!*4Q.ZVd4%VF8pq#3%R7p=,^k6uKo8[G5At8i<1e9f^80AJigZ\[gMb&lDb!:C;k*d5YYL-/-)Q0$S"10:N,YF7TXTK#MA.U@ES=#^<rKCQl9q%Gj>KZ9:a2Na7n<\rU]@$VoL"0I=A5&75:3am>1cc)"j#[(56Q(n)rD?P.bB2!)q'JAJc#ePC+dEkdI.T8:HZXj6QC(>F^!q0,&4=%"Q7!/K^)i+e:N(Y<tG>E.q!'g_l*7dJM`J/r8,ts]KEcP$gNojZsd3X7_c,-Y%Fe4TMnN>b\ZnEE>]$`=[Aa77e]d:j;^S"jJ]2t%-BC+#/ttb^\VNtHk@8M$Hi8i^;c@F*')@#a>i31Dq(sj2`T\U'E<[S#1(eUT,2_8n>iaDml1q?0H#nVIJu*O@l]4Bg\):kmc\qH%%5rp*K=/@N1DLM'M(hCpKo^5\ZB$)5n=G3N'#IV6KQRJ;AnP2.#al)%7f(R3^f7/`+!^6liOh@tf3GJX.4j55A,tpi4K?7BFYU`<p%hJ+Ye/Q^og:N=7M8MX^uZ.>I7VRMV1pM]N-\i[56-1B"!$5..MHLZrC$b2YZ>fjjUf.mMZ[Is4;j'.bc,*P^Nk!*3k?9X66foo?9%(7H[]WU8rOMO:R#<*i-bL`J?3C(Rcf]%MO\\fukA'H1feI1t(^g@XD(SKrE[V:K6OXc8WMlX`!(W850VGAOUL1=VM&L,DF-CQr#&%H(W%EZJ!afBN@fP7Zs@K=AZ)EfQ"63`)*aB@tdUG@@s-H]g:JrjrK[U?bIcXeQY@I]d<=$><uW0-1o_l6!ld7^2=VVeQY=H4b:>d%po#Rf2s[c02(sg#H7S3[[t;=t*r9nCf&g>+`a,\mgsoTF?*,F.eQTdpXX2cQ>/=JrNOqr_OKEu[!q'e0gatubXYisF.uh/E/%DXZ%\6C)&>s3TMB![B:/M1@nfb,X"X^I;0_k`GY>NMg9bbJWErjhjfYmdri<NeOAFeQ[9,0?aS/i-koRY]hRF('\R?'qf`56^8.AoDn&%c^1G$(0DR'm.CQC3,b6.1g8mEj5N5,I%elf5$]AU<Eu$8hLeM`7'oMK-=>2j'%J.d=3JH[6kq:q+8f0u,W@1u1Y^*o[!hA&b^@)D%f>^<=L.>j)^RP"b@86/`R,JQ;iP5/C0BULXqu"<,J*Cj]GB`=]iMUi]*WBf49^OmU]8+VlWU@%]J_`r+HXutjZ?p9VS)6C*qj)[l%s&nY/q3]h#*o/eZkT822$uLCWG`[]i]B_gGesl3<6'GN_ZY$YkVp0M5oUKjF_`,lV^g7DrYM/R#9taGQI@Zt@S/Zn5>b,0lhkn*K%ahq<Bl'q?gnb(t4[d^D=]\f*FS%@%'kM/QfMV5Hp;BHk7V=E--]]G"Se]`0N&&*S97dFurY@$/[Bop^WD;<hYbD9d(ju)#1)Q-AT%rRuD/c6I6rh7im8hBo4?mpfmSWOnc=cKDKP<uZY\Q7VLdb9-S%l(5UQ?AK,<o(lkVA1)`N-25o\=?3Kp%XQj<\R)6^L5cC[DV(2S%fn3%C&&,dBe^s.R\+LE8a-[^(#-Ck"@G_8Y2o]kB[=8]n$lgp4%r)QEN(b/)Z<,c/3416dhLk"gorPQ9NVU!8S3`_&^;nj!WLQ88%:US3gc+RdecAiSK]@9!sYHOPbB+DM[D!^>&YOQIUs-s<?>eF=#TBRM-o#\rE3eeYITBb@>q>FVAU-YoZ'Ip5#o5`4FJUtb4[f(1=%*"<fpZ5E<%ouHOArL?/d0-%IKVe6Kc3ci$)2s>:Yg1LnE3QYUnAG;.ohVU9(fn8_BLSeGT*nIY%*Vj_?0c^]qk7U:]iL+Vj>M4X4%a2_B$f/>Dim:lK=qfX'?XfOf=<NYfO7jDZK:2fgnEMK*ak_6H%HN#dKcm<OHi+C>!k!:NJj9EBnNm>^3O2hG<)a(H@:!)d.4Lo7G%#5pHZXh/(("s$GI>,f7//DiQM],+r]%I62*nTXs/[u6bBSR2'Y\oF/tk^p5tr57\`flK3ges2SYffu[0]:"<>I2O_[#@4sp1UX;M%_>15%A(oem:f#YGhg3k>D`5@[)]Hp?o]s<QYM;G<Id`e6nt;7_HEH(k['+8kPM(SkS(3/2m,V.>T[0Z%=b@>_`irgrQ?qD/2Yd08%FuZh:O?MgIo]"QgcAs'8KDsN7>N%kf^SKKXkLdLdj:$@oBg:JBa0Gs+r:Bijja1TK:`>%C4^/eNbh_4/lJ>'UcCi2_g>_M;C?D2G%k#bFRm#Nm\@l3Pj99NsPcJ139kbU;(+I]!BlPIH$W%fth\/\l?\op8"0o&%bUHrT.$qoFUGmTl;e8'*O\#93S3U$@a87JFO-PtZq%`1Z_BqF[7iNkW4J9R"r61i+bgPubnLXYa_i4iIbpHQ4d(N4q39@"b<$eu#rkbeAr1)@q^&jKO'9Y8<Od(fX-:qYE6so+^-OC3O.6%2uCpS]P1t)G%um$m<Q9'hlfTHiTB.DM,.m^T`=Xu,59^L*W=r4hQO]%jn%b-oP9?U'C/rfchX$TTRWaYbj3T7S+tP(oWruAle@ts%U.XV=GL'.;mt*!+Y=tJIrotB=]BB")rk:?4#^7iuqjc(6m4.k^oo[94,QHB=Xe/sp?P>N`oPX>,>qY;fm4J&c:EI0*?[iQupk`o"%7W&=eoV^P%OkR'mbLO;HXPX2J>8Xntc2I=>H9'iQs6IeD`)NsN)8DeF:Yib??iRcW5;24!HM>sWhhceVmF]<^A,8%NCRW\s(H_BC%<Pt7hb29Jhe`5cJHJ[9Ph>JiO_n!N7c>?hCjSl`*bk1,p4#Y]-oF4OUr+[m#Mc7O0RO8<S,^pcehg(]R^Xd1a8ZH%P5@5>#Mgi.l%XO5k6#$0?Y#JSe9s#I:>j4@qCN],1!_0Y79hDW?f@XQCEmt6?tmiG^+O%I7eZ]G.9!,H\;0'q0ZT0q2e6L@M:#W^b\mX2hG?@.W^%WU2F^cUlH>a^`f5joBh>qS9H=9h1n5nI=r,JFqKh%q;Y(rA<BWa`+oLn_:%d+lZ6[Mm"5c[BUR\II4"5UL@<SaViUmKq@m!HVj&'%>OJ/+M>Ya7nsI!heoYp;`KbY42s@Y1W3o,VZ8/Mj3PVI#HJRK9)\'s<IlOBpfNq,KiC]I)@tP73ZhCC/)r':",BltMrc88iI?:9)%dqDQ]95L^pEX/EMI^ASML%M!!BVc(3s*+0?-bF._K<>aG%a$Oq1am$%2CrBrrRe++pqcIt06n*rol&FmA_N](4?TXNT@;6QI5tRq%g1o?er[mY8Ef53Ho?!N`Q7:6F++1lllm`4.l,LcEA1mh-ZO)L2^[7R/NW(a44F"OmQ$)RAU$kcA%o#6C4UuKKe,FCF+.gHY^[ur*%(tZ_N7Q)LB,_r!uXNLR%DEQ#A=9K*<#\?Yt%kV\a=Yr`QT8;mZO8lpsW.t?*<@)6k1YW6U04:"jFh-\91X`-g;a/h\5X,D*O5XJj%K\S35Z*JuKrqH\P(,q\d[VAmEr#['B@9cIJRadnCP*hIpV6c3`6J[Vu@phc)lt?]H+E'8[b9%htCX"aXs,iK]b'_5*#.em-=/eY>%jT";4?uURA4jD<V2dG7E`3HBY6?kXAfW=Z,pVchU1lINd<R@-t4TD=AgJt'Y\d+_tAZR3%MXW*=,7D_!3dGFfk;2k'KUZlmPM=r>%A,_t4>.j<hr6:,*StS",3F.TM*]'/U<19NKilT?D\q/h)@iO&R=ASYISK`u*Ye`?k)-n3ss,hZ+5A'B?nQ9ufgWlQd[`;r3mC9(e%V5^p@0@$*`]"cX/X-_E6j_I3F6l&6)X&<jjAQ:\D[=3Dt.5nb.UO7K)BgGlAL2_pt\Kb[(6S_X2r-YH8-?lhYF%i@TqF0;W1=&8=%q*2DE>5g,Pqe9Rj^`3NAfr1+jR9m>.XKHg*PujR91u2Fob0jQMe^7ZJd<"qWGa?&>k^bpTs*Pnc*[t!#6(Dq6E@pK9Bue^*`II):%,=?Pk2e[U_(JNl/ekS1NAR<$8pSH*%9eTedjXkLR]6QUX:J#!Z,De7kNKNjq>V@su_TK0U47B:Lc+TK:aG`u+P%MGCk?^fHC+JJZ%KKWIU?$aYfrTg:>T?c)jNMl""/XXu`b\HQO\[<sN;b!RX.HLqZ_9l8_j\CoEr'J5oREQa7_8g;a@*uje/T!^?>mX2BUU.YS'([<I%/Cdo$6>:RK_$dI5m'p/SBk<F,<7gi(S\92ca5S)@`HaVem4d_kCJ&SpT76[5F<#XWU%p6P.>)mID<;"=bTHfODSjF.!BZc#he.6r%7[<R807BrOb2PQBFcspm10K\3#+Bf&]5ucV?WQt.A]s0&9YZ;5E`4b\[U?V8?j`=odeoK0hhkFH`'bjtVl.sr$^@)N6FQgIShqU;%AKjH2*m(seIP&HZrOiB*>WbWuSW#nm*ok;qAPFmme%\q6o8>1/OCQc_8[,flL<3sJ3<ZWc/9Y!mX\>bhP7/SZ/O=DAhQ+WIE`iUN%&i"pBqL8G?#"i]WV;.rgA;01>N2.^@g%t]Li)/sI'1fP#XtTd!>DbC-bSMm1n]B2#$28q=Aar^5=;>[RGnSG'HWWq8c"`BZA"+3r%3.GB1q01k=!aioMiZt+pFZ6c^&_?Z?Z]GmS&lt2Cg#Qt,9X4s4ahqjuK$R;OS"!r&BaQ$*dr3o5Z3n@"NO%]+:eODUAb@9s/UtXM%6$Vm.n:K:k-$<DQcRNq4k1G)3eKQO"_^Z^OO5$u;?sB)Sq@]kPa'ODSECsZF_DbtjL?FpP4o:?UV$R\'NJWfGQOp%!bA0[H\s9rB%nef]N>!/F_p'#O"^`>sRKVFC4F:kZ%,iR(sbJ_\&n^<ldq-%n9L%ib<XO5@0aa5[Z6'Z0cVA&C90>5[cJ=2%i?"n?AjYl8&M35N8%\E`Wq=k]Fb7G$lI;Is"9(?MR6A(?+p^O]AsX:-lF;OrE]Fdc+.24Jf9bt!+`[pAo3[.G"WFd?ZYc*Fbbbp(KjMU#BJ^2/4SLo+'e%qiQJ+Xn^&>PjTp%8@CDqq'I`jBpSli0;19Aob-cT<r-P/h@'#TN6YlcKWSOSnb9j#Q7bW3it?!qh,HK,_GFn.dn7#.)4%dMd$[aH%q2I$tLk%/AE2fs=`6X:,fI`EMBQ&)^.?=+FQ[HS!_9k"i,^%h.fp?kBg-N[)!q!B1#sR$FF,j9Mq1=:F50qVCWa,Dse,bS!Vj><L%>,H`5Vfe#cZ<`98g?3/5V>[l)m\eu#BQS\WI)Qu,<3rBOfHp1_WCVYBT+82='PheLmVbZX:WbR*=M#*J_>WqGi$G!)Q'BMX7-@eC%=i;jBn?&rulKi;192)clc"45RoR;T0o2jM>A"*1*";Eo)KMtejLM>U@3RL%"(Uh4X5OH'JE%a3YFlMMrGsCghpQF\#N7S4#X:r$W%E>R("7Nc!TDaT,:[3OQZ8:&[iqpr3qGB?s<R\eXhEc8k5QK7pP)_=$c?bSaMagqja]u=r*Xdc]G[i"sU8%r&N$1GaWhdYA:L4#WD%9;oPdoMbHA/A;L[_jnBHI2g2o_R&;b0onZJNjp<bs((t7ah'=j4;GD8jN7O:Y6@FjDWPPgf=.NMG&5\84$Rl=/p/]9b+S-2?gE:a%.jaTf-](^k1a5!(=t)KcGWi1XIXW:jY[!H4Vb9]4(F.SAV^Zm;0;a&4/9NPpCZD8`aq>MS0n4;9l^jI3\X'#Ze'*bk>?QQf0&J_Q%D+gG]^>4InT!Ak!e=#"aASo*o()#=U[l"aB`s32(GucG,K,'s=&GpI@o<#fa8moCe25u`UOWlE',7DqZm^$VSj"XK=OCuAVEc8_(%`u]HM\jsN,/p<<#RAYk1>Khtt':E(YO.fKjZ#g+S,%Bcb0m(AHFNfq1&4;dG-qDYG7LQXA6WY6nVa_'&'15h@5o5a]g5)FQNhD;!%$apX7<uaM-&1uO4$sdiU*CgK\+GR&/SW'[g4,,@V\?Q=N:pXgkL9<LfNodP.0m#.*jFRZDm=@`m[%6XfT-"B(E-<ZbV+aPN6?C37%iH"HdNJ*>iBkQ(PV"C-b*%5UerOriXm9;Y5jc+1%l*0^BIJP]=6e?RaBR%Q.Q3dc-q/c/8R1UbE``LYmYod#Wos(X&=l`iPod).j%BmM5Cl/SmA.4=\kM<1aN8m*<Y=A):QF/=-+@_rj*o'L-CJEjfo<tO=TQK\h+]%K'hBZum\g9t''O7a8AX\pq,/a`quWaUuDREiHN%Mm3P2bBp[SCIud&h=C6fiWf^B>:p[PK>^a<AnoCr,+9Yj.9s$^\-nUoI^-F??CF;HQK)*aNL#f8VTM$/pX790Tkl0rP[iT/8k'gZ%fBm:YZJMlSGq<enCM#Q=o:?V-')M;EdqSLh031`V@TRF]Qm*t*j1q+@?)?TV5+;;_[h-T(fe!-!2eKG>%o(4XJghJ3dm!7';nm\N%-8h8-U7$L[9mtqmHP'L9`@[IFk>sR%c[0LE'2sPmEUS!kf!,M.fBD<@0/BAhcC/6jq&PA4=PMW9VI?4\(E%5":[M9>n8$5i*KS/[%SX'qLobilsj^d&/br;b:KquGPD7;'VQV2F_e%o<cr'nuqinQNDnXoD>l<Z*:m"H?b'4pXaEbT)<YCiX3i[;<NQ5YJ&3R"L#/l_7;%-Zl4C^L%&)-CZOtimuo+:an4m,:Y98M+aOj;2ebV8XORU-Vn&FEQXJ;9"c^9,:D>GY5En[mj5DIGo=`Aj?G/sR<LDc,p=]p$'7f"%Sc";BpWVCi'CsdJ=c/:(4]`^%ZdP:f-U5g-ks=t+IJVd<dSNN6')<s&U.$CeV-#i8:!..gr)#/E3&*A,`<u=\.QaJ9n+>a.ECEeu%k3f/om(X_iW=p&8<OTuUl(pk4E*ip0N-sZ$&t[Q2;<r/@,,=B!X6j,%W.VnfmuA1#cots%8OX#qDim=&>/DJI(QmE&50muc,*Qa(%?S)k];_C$7+aQOqbqZc!q]8@PBQ7I+/J=B@rPm"dbN@$b88efF.#plH?L*Ot"3tIeB:q%M*Eq18?k]0h11=jgFC82=(Bfi]>F/M!%+%s-sA4?qbMlUXHBf>@Pb&MPMrUgNXlBKZCJk4k_7aSQ[,ZP3E.^EWZX58"\(F``<0=i:g4jPj^1\#E$V%Z%8`URoLk9'Rp4C"0g%o_(YMj5J^JZY1L'Y/iu<F7F4R>.7(S-0!l=14nWmEIC"l0'3TXHo'.6Gdq;@;%XDll$0_8=TUVs%i9St.cG.<\TkW[/sc75K1NHE%,O9?cFj)4r\r-AQk/ip#Hm6<hQ1BcJ7f.+JB"MM;SK0!0O%/;]7[ortaaVCNOlZ3[j>$)#"-Hh;:PJompuWP*_0,PXZ*_9P;TgE-%j*BQo39BZmnC$A?&k&+&m5b$s%N.aP7uC<?>r&5$$Id..nZc=S4FSnUL'?!bp:E210b_qqP7<oVBoRL\ifU44NW_[$N0h/qReDr;%&i_8.<h>e'3[JaoChRghF<XrLctM-fL#B;s`(j#Al7aD^n+j&;LpH0U`58.(8A44I.hP0Q1*ZCckH^&gTLl(h7j:i,?9/a^MLISu%Oc"Cgp*3J_9.(o]d8.;0cj>ssbHHs5,X6!Xb>(MoA+K9PA9cT^)(%]/ZM@V#6fH[i^X/aR';9B5kL/ls\Bin]j#^;C]=4G7[LikE%jriYk\:5b<0#O^Y%tqf2gW)qOB?*GmTum_lr5hBY:VUt!<Qep+O3;&+=qe<BXJ6TCZ:e=79,Nc<=ajtp(1ik4P2TF`(R/V*j-!1t%7G2sCQ"OBJd4!7lS!.i7-b8J\P*\OD*R2)8,5OaY\C%DJj;DonbNZ.d9D;dHc5(`058G2ehs>&eIsQH]G5Qc=3.GFf`]`Iii="NY%?YAPfSc.+8I-mq?T-%E-&V@^Zi&[mpa/:I?:@VGfXJdpg8MWd"H[ab<[kk:kU/sJ0mE=&2L2)*:#.8pk=!tVPnfmG%j.i>V\*NS>%6++`3Hr5Q&FmF52,&bj"JjGaCHtCZ8/Cqb\Rpq(E#.n#.^XpBGKS^8ET#%./2nbLo1gZ73b<oThS^Z?jid@9W"hT19ME6)4Nj*la%hp3=MJ,SO(Fl&cM`V'"LNq*E\h#+mN]=iWRk*NEe6$M<#G'p;XY]A:l08\j*-/3jiC+$(iZ'Nt_HDqsfTl&1P?CgCWL*4&FBM$[4%O8J!l>%B]IiGom(?q29W>%2D<g\jp=$12HpTpi?WjO^Y_.5<.1?*%F3c(%_%q0<85[?Hm:ZHA2<jA[R:>q2j"f9-m:qa,!5aX5Ds%S.i13^V4;Kj9kk^b2ZEa,'(6[bGtHjXOp(soeip1:jUT[eJUs>;JW%V>^:Wu]#cTnPj@a@[K'U<V=udnFJ#nWZl2Z*V$@.23'.pN%=#*!6S'c=\2SgZPZl`#/'he;SaN+3l\h%'5[\nO8d<)X1OYiPqJ#obc\u`''A-i!!1u0Ntj;+NTZJK<4]<YqoFBPkjWkRAYBY(9I%\rscj/O\'!g"M&cm%''3b;rq;oQE'[/k`]OI7H@49pZSfQ]l:#NG,oqP^`Ah91kh9VTTTI/(IBbdq,(WL,W)$d<*L5Rar2P<&@mP%Ct[KT](.r6:,H7NX5oapLSF#s[::dYdhTl)FY&t641;`Ld<&M3cmTopVTX9;8bg)F+IXp@4iFb[:.3PgGo>jC1gT_MV%_6u=dp!p%j.2()CDP%BR:s15=M!:6I-iG7A!$g0X"W%%lDFJ/?KiZ!ak@^\".rng&:86bXf&g82P70SQ^Z>a??nS;Y:a1n.(<"@,6KOb;m]1P%:IrE72AIc8U-L7p+XcP8Dc2E@Q":+FWlr@'VEQj`lkiHsV6\95;p'9ZaQ5)Zqc$C83JV2*(5lrr1]$B@66e8_r9#D\c&4/p@C<22%6?d:5\Pr'(Pn_>);s#^A]%gJg=J_0lmd_R4ap$4YEf_^C:Q>e<[<GYEa3S=sbS46[8sQr&C/MphZsDfhatUegmb0:7-Xtu%'Y5gh%GkAZ"JNR#rb^j)JLumYJeiMrfoXkrrgn0VgTqtHmQ,V))<ur'SC[-9!$pP=n#N`MC!adF=Y)GklV0R`&^(X$$pd,mq_!S?0-Sk$`%Y3@U"alP!gdE'!'a`o!T:!Hsb<c4kKpR\5KLJJ+t`OqlMWLEU7QhH0.Y+#3JQ1fs,cH:ES(HXN2n*<O*A,B%FW$kc0%U>TSaaQk4%G0T;@na+uq"9ig!WCZa,8E&^9m+baC^tQF>&BV`A]uP5&mG;@9Z3$c,NYF6\*2D2Q@:nf\Q+N=Y=^0RdhJ85aol0b!(QirV&*cJU%4O8fZk3];rOXX`$j45N5FB@cMSZ6'g5A]LI&XTBnK9cjEkInU'n64T+K]o8RX0[M/3fkXQo[@]cC=,[>KNT0&>OtiX-kXPIdL5Nj%8-Tr\/J6'#ao^IDKtAJA19\^R-ce!Z\`0r<X';WD<ttJ_"rRW$-7dkoUf(OJGbT5Do%K'N$7k5G:PK#fmc&4XA`?'@;rOmXhCE?r%[9hgpCfYUF5IDS8Hh%f+3I0=ol+gKfXLX]s.3n&4g2rqpXA)/Jg?mUT&7;r0)%PJ+Sh'6l'7;U$,6Igc,bB'E/#S:_m3b+62A*l,%BpN@_bN6,EhjtS$UqV_<6&_\^E+6&n6'STh"a/]pL,"r"@N(Up9kpEF/QO3W.DEkM[aV1Un6C"OQmN#17Aq$&m3,J)%$mU01-nS9%;iaN/qm1V1;+j2KGofAPSQKj[[O)h4aV`kmZLT@G_i/,_8&q>.6mlGKla?Yl@aJIcX[q&A\OYN!I!P(gF/c.!q=UjW0s8R-WMs'f%@4pG@.ehSk;Vq0r@pBcF%,EU06p3JiEMY+LNd<=8EKq:^*5oFX4^K9-+l[?aC4G2;YKr95*\R*AXR9)g$Ss#Sqbp;R,7aZfBq(mp%)Fl07CL^b`B0fcbCt_m*a7<TB+M>se?$4Lr4C"`Zf),,b>;]F"l`a+5^E;XW_[Y]4iOs]1:ZueiS-[$]L@\mSSDHGRGN_P'&Dg"H%TX:#V`j;)F<c+i1gHk8#""T_G?[6eHL8$uO8?QWY[r"JM1`i+Z2W4:!FTfrWPiL-KbkM"95q>rOE3eV2/.Ctk)>g=Ln(QiGcCdpN%e_47fO)2&BLq'dC6'qG<r'?ZmHG=##b&uUSj]H2-EmWX:3eD-So*8Q+4D;Yq]4fh\r&u%u9*SgR$r;l':HtbJ=k@]KWUZ8-q=)=-%M&o/6T&(9YCQd7rCaFe\n?GGdHfCB)]tdA_??@LL->?EG+aslX<AA:W3*G6YVS8skJPAij,l&TTC"KB?.05Y(-WMf5g=/6hl)dmL%=kKD%UbYSG9@?/3CK9fMV(/gu!.1iXTG9oO,r/9)&XCqc6W<>LV&VZF*kb`_?YHi:gg/*'(3?@;o$U.Y9Bf/ha\/[4/XfYQS[c'V%&\$!Ydus;oq8Oc6e`+^CE;]6P0jQTsF/fB9]i$'IFV>_\l!gQR2]e$&Qcj>M+r[H-]Nk/qkB*u"9XIYj@ObsEVh3a1T<)8>CONeh%8]u-:M^G.ugJ(#(Pq+IG?EBRGP0OeDTE&QXa5Ti=),I=MNL&iMjE$\Xa)pC#7ZtZ:p=3@MguZp<^K<?H?Pf27da$b*AB4B<EighB%9?MhDc?jD6*m(D[1ba':s#AY7+Bb_972ogkMBeNmMQu_Vb&a4L.1uT#]i8N(DCUXdVPL`ebL^K_C0M)M]^%'[b,OO6.L62o<mnM"%q*ct*f1X?jF\3lGU98KJQ'iCKCK<l:+;nHhcro@/BlD%\`q#@$AGkPpboLS':T($0>IR@J3_P/7B1[l!a$(@E=>gAfF<6UX!3oEV%J-Ffo-)(C_`W2n'afRr3QAkoE1E<hE"^!YeOKI*+NWP058qD_boRh!4$F"=T+Em,C;1R&C(A!N1N)coUJ7W3j6QPu$;1LZ*9#Ue1%n!.?GkuG,uPcoI'[W[Q!.;S_aMt3^G$NEXo^1J,53`D8=`/GB<..%i4X&LmN_N#Go9@l]5-]7KVf157>;8,s$/))MqVcjfh.49=;%Ef6B?#3T(\CHjc-C+"$hQ)s:Q.Q:>]Fo@Q$FW`VB?<t=sr00BLf<;]ahktK^A^pB'[L-S]iiUi*b=94_geaWAldm,?4&OV5fJ=e[%>d[_dY?<,PLCCbJ<W+DtQ41@8Fo@2aQEXYB\uoCV,,qSkT;VaQ=kBj%6!58/T;h.C)3.g`e\(h"P`D!QbQ[s%\phVd^VVr"2XC2S%??C>(`B$iIYLkD];?j.Q\phVuDPe6B-gLP>Kh4b0f3UVS%`H#h<7e=`(YJOF;:i#H6)@JjT6::nP7addXm;;sC+<6^eERHG)g2)l%A>mJJqSdJu[2bd4Km!?_`k?PkY$Z0K^CZU`XQrsSE32O([T1p4MVlRn`C-;u:Y57ihE[B74&FP4JC`TFbRW1`)_UQTF?R>bjlB%c%j(k]u?eA!uq6V'bOfI_K&GOQ$g\.Mp\phV]4>It"U97k[*W@qpP5)T_XV0W@n<2F_%%Gf?.t2DsHP(Y>Y$ZRcPM5#/lg_CFUlf#F%Y63i!<qU7C*ab<XVInL#d_6X%Q/YG+Upa@V04rj3<V7";6g`Lu$U^bJlAE#Uf<8<#ahb6JlhV>tokQX)PH=*%VQI%4?,%"lY8sS-%='X:Zja)<HMS`),bB.%)cNh?<<W/.Zg8aJ*2C5D(rUR7a[9D1cfY&eTMg`1>?a6A)_PZti\pbO[U/^e9c3m^fY2AF0QLPu24m"1`%YABu:?c9I[Wqq.tHSA=KY7MqC$6\`dod^ddL%a5L?,,BL=Eu.#?.UaDaCJ;cPWVu-P?#8u?bR'sA=+^3X@h(:.j`*??.Vk8an,[1%6$-rRI:h+(/%uu1UGt=N&1d2InVlem>EOlQFcc"\Oj#?K>@^],gm&#e2shABhC$/UA(VLR=S-nq4nYnr_$f"^*,70N6e7j'NR>bT%DObZ12e/<?qAWo$N47^#FKMWfO*ojOe&II:>gWiI<8DsAdjm:mn?I?<lMIo!^A_GU9],m>G7K?4`u]s>k$R8Yj^4Ku]e:K!:A;lL%[7UBZT<6i(Qf\4+Xd<>jjmMnjV<ZbllcRsq*7`VTYMJpKP'&t'HZq/b]slr?rnbECZsUNWhYc_%S/\aLrq,RGY2)h-:ED[TbR?\L%S@L<'f@`Z,Zhn]_At[Hi>]Qi/^TX^IIJiO3DEXQG9M!n#fZr`6rOoDj[?8qkDWB?lf9&XG?rh'eYK^jBT3&)IP1.2CqKhQ?^:nlJ%.rW,!cK1ODq0b>`[+lak)BV&BRHo;t&GGg1r:TI<$,u')?4gD4jrq#)dP'M/cht>SSS'A#@0oKSPPdDlX2B"bl`40X`LB0:IIG4e%R!mf$CZUAl_2El6mG>&(p8@d/?cO,aL@sl-p\qc$)Nghr6#^N3a69k;$%K@B7ug1-Snm]]=1,c3CY&6hTAh'lF+SdQC"mbVBJ-U"%.SD"pQF.7P:::'uW@iR6g`1;7c2*Kth'6R=IbceAr][kR48sF%V;_1*D(csUR]!N0O4-br?]RtEQC[G:lK@J+d&e^g3N/"o\Hlb/%5+VYXhYkTtRX98\-I8e7*hJ?BIQ^lS^M(I<pGE*@NXE1Cg-0ssbt/k(++uSift61\j*#8^pm41c[U\#'pQ>GsLH4Xd(s^8[rAcaX%*2[q1DR&Z6"K9q(%iaPg7:X61DO7bnL!f0U@rQ^)73<QFI25LuD+OWAJ%l8=(f>cb+1\CN_k4ruT2+43n:u#VLZeN;n-<7p@;5]E%d06#W.dUR4OrO#WDiUh^rN`SYIPttHhb[\JS(2I(o]aP/%21ti`/1)Ro];KHr4/TrIJIX]41d9uRU#Nr'B-P?YsP,8]RD^rV5)Et%ig(YXX-j]=gQ(XoC?L,Z78W;\06V[FZ,M)Bobg,,(8UtYAQt+eRFs6&PV7:NhOVEbr>M9^^A>CSYdVun(SPC7/5VBXY1:&!3H#<X%2^Ym-,>A)QO#uZ+@?:$Rqf^lAdZ8>'YIV?-^>$VFf@q3EV).fP9KkCaI%8L5D_K+QD>a1Y%+&eI;O5$Nj'DloFu[J\BIrN"E<@8B%#AATXI:)t=D72f;MS&SUPV/QsDc?QaIe1P90`,?j+&ZY^fe_%)NeM".nRLm!E:Imr@s*7arY70]cLUn-<ngE6IBmVUJAAtZ3KGtt%%L(&.IL9m`FD[!C'U_0HIFH4)H>;KL4kopITE"D`BnNh&`N-TeT8B-;R+Y_8Ip,2ZV5l8@bi6s*&]4<-e"GaKOI)Ka(LK%sQfT-D%-1DnRYp-;'S^sG^09>:`7$b4l62D>f##XY.>W6$^;=3m9UgD@!#!*U'="cq>UaM>)5[J4`Q1f]%NA%A.5&&aGoX^pQQYSAp>Q>DP%Y:[QtVN7?aJra@)-ZeRh9A-,Dl4\7DOZ:2@S2-t<kTR$i.YNVs;k&eepDq,j:+WB[qAWgP"S4fFj8LQI9bFuSf)7f-(3ZpQk^_^f%LR2c,o%\k@?%#t&I@Y[&<psWQj?,H2&RM$O`h7ft7`(D"(T[.U$UG#!rJ;"<b5ActL#+dmdR+l^HW#4+`AGY[deN5%_'3CQq!I:`%1uiZXqt^r@NaKhF[iS&`^<+Lg`nA`5[7Z^+hp&PGp1)Y(&99N#h,1Fc'X-p71.1iMZHVq=_58]fEe.CFLr9^@<LF2f;B>c9C0hOu%O#079@n\_M,pA(P(O6MQSZV7Q`BiJ'0VQEsPU#1S())k@<1R.<WOa54=0,:Vf2#&cRgW4DWY.lC)jsrUgC%T&7,j*/87k1)kCI;'%AHYmC#ud1=]-h^J>>*(AccbKMn#RaHbaSj&#B?8`&2P!Sn!OQ@++ofuZ4948_MTrmFJXoK_r6NHMqV9^#NG]<3Zq+^9@)mt!#];O%]Q/')dWi>2cJI*s1>(:mCh6RA4LLR\>oZOsB:]=PiE=!FP0oL7.mQKVl]G(.*p@)(U2kREKk:"p3)sgD&F$R7*m:(=51[3;bFt5f%kG+^RmCt&$l$=0R-M9kNaiIa31%=2H;?-Q8j/ST[DGA+-.o0eje--<ZG1Agb7o0))IH6=_kG^P>rqU>E>+P//O0<jA5bsrIIm:'7%SWQl5WW)]UU%V4OXkG]?\a$8_Sb:[g\WG<&Vu1gc>4pE1IuR,ml%r@GA,]S;iVb=$`/rIR2<Gu]@_g#TNVS?p(dpQN)Y4Ii0p.do%:F\*+(8rtfYS'm6Z5W<F.ku]eD=q"+M'8l-nb8YS@Oa^(a\lSe,MRdolj;tsn&H:S#&;&qUVur0Rpg:^"&jQaP0=2=&F_@Xd79DK%\2eW?GejG"\0/"cH&rOXf.pZdQ\WOVGf)BS`kIKfR>'-I`gFZN#(,Bm>h.9V&3KMa"S$'<]%AMO/=8Nife.N],B;TZKEP9'Xp51Z%j;q)mn1k4@`RB[c!&i$m/omrY^(?r7$[Ku->3k;+r-cn$KC><qQ.XO&-DpoF`6Ku0%0m6gjp2>sOll-tdhUL-opX^u=o:ME]-$c+%Y?S3>^MY.*7Oqgqj)Z`^IdhU\e9J[;ft[@?mgDom*tL;kmp-T4j)]S?PnhVO\@Hps^?OV^2Z)90dNjVdaL=OebSkh-'\KtcdpK[j%mbOGF=SSj9:Ff5$XAB=nb>[5,ircoY.Vt`@h:3HmXaB^7T0<,*&0d]"\7XIjcKSH%iSK9XfD1KHOcB%O"AQ.U@,G<D^5s7L6`".u%-]hp-p\4LT9k2LTS"1Fn5Hi*%IZQIrQpk5a`+Bj(8J-:;miIqQ['5LmQo0^Lh0f[fGk^FKln"g1h'5!ES)#;j[8$QQdlfU%??_HJ%*%c@F^[r0)^Nf9XA7CKg4hIkHOiZ!2$X*N''B=.&fJMhjr\_sCN4b4EET?@]iu[AJ5qmr^?[lt/aHqZ-XUMibXnhODr,Z=d9[X9S%>t>[8$PM+K"8.(2Mf>!giS>$Kg`;9$:ff>625:"fd8uqII]/;VQgPAornG7_nC,O)oRkikjk!c,6\6q0TbC!c0QlHQqP[kl4B9F.%>,d)?%MJl8N3Fd,FSP$OIb<3H:NPZkS,V37NVYi&-B%6qe+57bJN*1ZD0TOZ=A2llkaLD'UYXcF#6PpA!FGWdcNETY=<,W]p31S*%A+'nOeGb8E7gU40G^V+_oK3tE1&`-ZfY[F&AH0TOa+8l_jJ)<;Ym_#PZ!^QT%gs4WpsA!K$m4e4O'2Dfa3E$q#"]`Da.ZLOa7kl<%ZNE/`$S0h-h3+4eO7_r<1&1UE<2BWcriB1qfC=P00)\+*YKO%&^)s.IFa5YndJi]-dkB<SL?N"%Fa:)oSf6)WMEtltH%C_jr4B%]%7A7keA.RCc'RX^3s-XJ+5Pjr`Ptgrq?YT=Z"RX7ta+*/nXAfl-j$.QG<iV#RnK5:^j(X5#L77e8VnN;f8LKoOK`s+cI*%=@m4DY^%FYCdQp%g_[G,Q7llMHoKbj]0spV&U/)aO_leRSn,QeO00T*rkgrSNRaP_F#?p`[#k*McAVf($1`ij56qaUZO[n"KpS,e5;6OKK)#%-S/=,ibP%n(dei*/hhC/[(TfbE-b'l/ma8Ym&jt(k@]S0k]P*+.BpPr;Zt:gC#dZVoQEd#^_2<Wp&l]d`@a$8AN!1#c"^%*n`fgQ%A:07IO+pF]Qc*o:R*@U/AlGJXW+%T9AVChlN-)Bl]`7/SPbL!J3sH];k#cj>M.<J`j(fZkm$qmM%(l;.G&aptO`urj,'R@@%O//o%r[a4<>kBS,Zp"`6*FV2rg.s:fUj1#69&?gNb9.DWDEO\P*sp_([lhB7-cqYlH^iPq[/*+!2(:j\F"FZ=_$K/0jb:CkE2^g%o&>dk%+Z?aL8aXiZ7rnMPA8lYs`oHUo$1l]5'Ziq$Ok8e].?Xqknt-Z=Z"#&Ds2-%k,4khe,.U6Xir-b=3R/p@K^PL(Y&]nZ:*c`7PW/Pj%8gFY%O\d*VjR^c]#tgIL0^7ZX6]u3g"^^i&1,4gm9o."!?YU-NEKQm+iR`)2$3,YYmOK5e`>^U22TH63H^:J)M8>O/RV'T"+ZF*%%)[XMkV7lV8gQgQG8FLmf:brN2q0>#J'$AMu@5pn#-J\,"lg;bagA>DS=DYs/o;R)3329:dmapRsq;'g`39\$eN5tcqIYS-ZU!P,C%%m,26MYg&Q,7kYL!]g&CJ#4`'BU;bArG;#o=u?I`W`=Z;h7S5"UOdhOJ+N""EW+n32m3t09DkDOs+gWcI[=qs?&!4F+#]eXQ^'jS%gSGF'XZojdBB+':mgHU+n$c)R(U*l+RK2PbA,TeHTkgAqZot1m?b-GU2VK%VVOrTNIla>BSlN/#3VrcNs&Jlfs._fMks&AeX_.Ei%k'C<:9f%2bGN^+q!#?n_F*-1,!(-k/[rgHl3kD8'EphH7J*E"oqSsZZrN@iSCSU4m&$>.96g[noYN?\OQ#2sI:Uf\nLPk-C/4Tf`%Y8NejF?+Nh0Fbe?[O`>bG/5nJR]a7*n7jeSeTFlsrL2kQ7[It]oFJj8Io'@-g=T0F[64T<'Re4LJ7!@Th<:k?/Gb]N;TI;>6Xp2]%=J9Tt2;`@8!&RL#GpH*/^_K&-8Vu-1Y01ZUhkZ;a]k0?lO-)9VUQ8*PAf71kknuA-dqKGL=#4*>(.UU:#@4c59CQXRZte3t!AJ1>%VFT*Vr0lfrEc%B0knn<)X4;=:VZ@4(k.B96jR-;RIV'hATLO9!gZf;lNUOQqhELr()P!Fl]-9r(I<rXn;[!h>\)s*meR]UT,+\-h%`AMD=967@[\U9jLD)s]YS=2tFg#^T#47nAIem-+9jI+qn/=j6+[;dIX@8S,899[a/5b2)#1mUUH[U"gB9W)Is*noh"8oBt_'<iIG%s4.W_3t9)##=.lsT>mS(n4sIu*=)IP3551/oSI*`ZY#Z;c3)HaoSmM7%*LpqKN#HrGPQ>I3ZT7g9>B[r^/m*J_r)9!Q4863jT/S?%?F+akl11pED9tTLE"(I)jMl?+4?OP.E!Uks?-pSY`?QjSJZ=A*^.6]3qF$6,GfKj(ibtBJN;f[VEHGS3c-C;0U6@9Q3XHV$CB/LJ%RVibgd"5q+Q9\a!`//a209]/H[ci6IfBMk6R]gK2df^6rm1^.j%<Ag-3]mX;6G)KnKZo,3T'gsX?!#LnA8I6;9A__#U%@n6RrFk2%d>1VI/CLK]0!3\Lr3=Y-9=+5HbWU^ceBe8]@Cqnt743Wme(RKTQLA6-+q`GD:AJ1pXm=>rkX:u%a%/[4mLd9!0MM(cO0ORCAp"-K%'6XZZ`NeW#eW/BqqXg=j@c]Wo/FABj0]FOQBlrSr>E9?HUj_ebl<G\NFt>skPBKAR/as#$V.8"[Rp0T]9uG@R=UlGk0dNt15_tnE%Zk#P0ZpBY6]'I`J;\tgQ:8\SPC\[*!,YMdOdge/kCNS3N@/.kH.=/]N?g8510h2Dh'Dk0^2LXZp/n+QD7$sc9`+V6V.!/0RhjWJO%6paS,l)j:d)tUn7BP>j<e>7j3+#@mUcjVMq'<j(*.>%Z>#aj?Z4ZQp9Q;()A_%<70IE[bn`$8U8L&X#d_ZSh#FG:QN3!0s&I70Q\%O%fBdeq/p)O#WH)M44f=qk,>><9P!N+_#KuH"j_r0Q`m@h+0S$b9XOW&nY7aiGI:F>)?tQ'>b+n\3lUYNQ]>9mOd$X9=h*=0I]$b%&)>=Ds+2WGH/TC1"jpmkRfLi)@aGhQ"C.-.).Ak-^SJ<@hBB2pBtmA@hTNJ2<^u^3d,1^GR6'iia3A!G^qhJa`#NS,(FUE!,9S86%`rutSbbeD(*atpS\.#W)>*&+)`"c#:*Sj-b+qlt?bQ`L=nJH1YI'bYJYeX+g&6K`B:;\(U9W"pG_1$&f$+YJ]&m%UNKFjH%);ni;%]l)5f1bh]PP#gePTZ,9r*SUZ!=,Vjq&HV29-E[YSU[LIbKTSAG$S\,B=Mo7`7Vh5g,WE%sVaT0K&9AuD0nj`?:pF[H)UR.Ab(-0X%VG*dZ4%/WgOYtt/L1m9KfJ8WF>c)qiU4*ArD=@_e0C^u@'cCIP(-%X.">&=soJmq"blBOVIBe6ZGWUoKJ1)sf).NSeFb:#,O*-r,%+e#\B",I!2)N^QkFA-d3FKu[iV6_GU9*doj$Fu>(N@$<3%[+d>i^!]TM::aaCY]./L=;u]#ZlF@7)BleI6()TBZ\lB'5.lcH;^6a%+`9ahJ0Zd7>E,Er?&,@P46$u3O9fULNmL8M+;8\r699a:&r92lj4[tqFDp/8^eu:-&Wu<;3#mfI<srk#0dau7(@;jYn[:p^jnR%S%BMh#K>:7Fc&SYDYo-9a73ftuS-K=IW%)T%1i1;7GTgNcQE,<&.E6DYj#0qnCLA$eUd:R[TK\08EpA-+H7;TYGde5_"gt#cd,@\D^%$k.,D#Ju"(JSEgVh'3io\gA[:a@7*E-+Pe=Fe'-HW+3F)9tHT5`XmG.2^@["Uc/TC#nMhc!V(TF_@@E5&3'>s_'Ykh96WA"&_lEp%\X7KBC-F@rU4,-t&qEYp@n6cFbn/d*-7%-gh1BEsU^K4tU'A2FBK$C-Ooh7I\8N#3-O:QEJa\E2)C2WI4(q=+l6%R<X@ABtjDc35%5@e\gn7\T_)WVbXVnkbgf9o(ZKFe6A_K\sHmfXaF`IO[t]$NoKRP8kR+!OY[c*CI\nT>q5Lj2Kn,)?9Mc0\,AAuABqZg!M5q9c>-%j,@Z*,d7QZN3LA;dQ[U_6mAR51ej<[P]t/[N<(<%4"Pm//aboVF\Tp:?$8f$K3[cR%\F1ZIB5(e*emce+GX"I7@i2GkJYInka+?P%=*2^@I!Ugrr(j59dVh/kONSFE/\poPr,;he>):Z2WT$<;"m:4Ar!`EWG1<@F'@3GK@8<e9;B@,f1bF!Ie0?1ZOYD7iQtZTk8-^?t%hr-BB*E10Ih82pX$r'lGTdg_rofO=b-?0Be"55<\OgchIZ9lPSg*)2H1s^#Dh%r!nY)PL:jd:-D\-tNiE(u,M#2WmS(<QS!j^&4:%UrLdhFhXK)jTm_roLR\Z>SXVJbnE,?h*fa+mM?E1$dFmR'h2nh\NXn@U/qRY+[[4T#^!_h=9)a2#KLGd/4:>.:HCu*_tA7HL?mhD%;eSL,g+I1Ecl%M\6JRWdCmS-D&dW063&NTC\?;2hH8@X*9"%^'d4l/,VZ^QP6k2Z/o157Bqj0!/Wa5`u+h0d=[n5l9FBbsibSL*r%Vb?#I(Dr$$b`L/hiN&Ca(a5\O+%`\H,c0t.5EF&JZ?N$%a)Uos+bT(l6qlqZTaAok1n5$Fh@uOP-p%2M'nGsf=qH)elnBPN6!8j"%8`)P>OM?>J2@0W<M?F3(F"E@T00k=<fT6^0">jIq,c'l;gL-;31`9JfNQVY&,!ec<"Ii-RAquE2TYgC^>ID)js'/WqY/-g7UI-s)%Fi9jVEQH"f&#m?Wktlr`/s3r\"@:97%(D;OaR\>?RMshl$6l>b[#po`Ll`Sq'(<SP5/SHWB!f(A/QbRIa[@8=b36iNYE/a&Jp9%:%ikooM&1l`N6u<C1-s)*g/i$#;;8.\h7N/2-Jda.0L!p%G0c_JCMa#Z_^iHroE.@q!6&[LC[Q;[]F^QQ>J>o0(Pb@?jQl1ho_N`^c%<GKl5PfX(Oj\$e,P0`/5">FtbjJU.,L6-Al_eEZ!_Crfl.fDl<f7]TkDGhAeI!M@(O*0C*6&"`6OuK''"2QOs=YS(lFoIt,7Y$Sp%/*B7i1dQ*TQib-ZNOmi1(@4r1Igg/1+@%>$^;d`+(hWQ%futR0dNJn\c!h(sGtb/_YW"<1HR:_[!fKNBotN-$UhcYj/;Q,3ckMu5%*"3n)4=Ce`LDhG%kRJ_sa>CI^FcrWs-3tb]Bm(IZer"<[XR18.&?q9^(dDERKm4%IS^\.m7OqrYL'&IP^cbC9&.,,Yk1FG,Td*h)%"I4]ubP#&KK!?40!YRs*3ma-C/7L66Mq7"tSKD3A65I";UXX,4+!?0^Kl)q^m6Njm+H@[G4Rntmfm">GAdc2+BM/3di>TQUiF,A1%(m<O15]a8[W5c&/fbb/66k>S-(nu+Jg(D+H6O7juU_)0\6Pps]P^",(K!!f.":N"k5rlFU8JrbDbL<s9Bq-k_d8[(I#hsSY_.MUV%*DeNGfO+cUmrSgCcoq`!km!mNFR%[9"V#2lliAP+Y+q2u_[Q`YdMI$3bDc1kR!VN>L(8+g\@aJl@iGioD2,%,Qj<KlM(4/ii8?/`%comDGH8^ii<XDm-YoFR^j@o\[$Pk-eP9<9H*^OTcA2%;NPel6[o(aE$!^hTK::=U7_M45Diq%IYqMi67"GG;;0Rb"hI@0CQP9C_0%/Kd7!Vd9K<LbI=![A%(l?#U81G&50G7sDmXBne7e_hN^\84D%h#n*%0UpM,_fT:.u#i-hrA+6qE^7[:'nk$c(cQH`E\4-T2l7tKk%0>,2)3d;QN!\IQ"Je?_C`>]SK7s>E#kNg$q$<m(T0b'%]*1q(4^'AKJ@9kQ-_'scaV$WVC(iTS-fMthMlj.3:L+mnj5bu4o`$a]O%%EVum&>.X#>Hri1b4<L(_d_rC_VPt-jN?a*X-KblZ9&i-X@S`TbPqLH^VB.(0DkYHLA`QYU^8OcPAn=@8FG"&%F^AG-4F?AHWh9'%,JqqQp>U?)n&T`)J/-_=dJj$e`(]COL/4:L!('A<OOt]^FT=3>gW)HIkO43`>WcQTTL"/6*hHe2Y[E!t;&FBhSdRI[4Ri4dJ*5e8%"g\7te*'U.i=dIpju\;!Lq$OmZCs;*!>mM6o!;`^%=q*.(HaesM>))oAlHN\nCh?h`f5aj>@C^4LA,rTIN]XT4sdReW0M8LecCIU%\9(Pg'@.`t8ctC@0p=L)\T4o&65I8X2"1L)QNR]j%VYs@@DcV).+8lkOYG(5M:o*UCM6)Jg@H<#T/6YIGeC`kB:opRVG*VM\l<Vg%g,TNf@+12S$UYr55_7:AKP*Ms(Vo7s+U#3`GIf+A`aTj@^,'`VXrn;%P1,X[!e'9#*81LbODCjeQUK(K8^AaU:t?(i9tDrV1``TY%+]LS],HNS%kJO>m^lctg^JcP.M\4W>\Jq0Jc[,r+W[e(Z#jHrSL+p4/I-`1@,+[C"pG;TGa];?XM]b7i:Db:N<jWTr?of3tQfXjH%a/j$6]jcdM?Aa:O`6/>)jEId!IU!Tp4F`4e0@BeGqYsWR5(:7Zg6Ju16V0A&K]2/iQs+?8Cbc+I/*te@Lc!f)@3/IMG%;PP+#dEW%GVW.@<q&7l>TZluIIXgZnJe=f`*fsA5$YF%<25Ynn;sO"4=jpr+2dTd#715.(uit]_J#j(o90`S^ZC8!l<#R*OD%)Kp)2kpFNs4`%Zo$=c#DipsMQ3ol6CB1`"Y!Oih@oCm@Y!jU&M&f+=<G/T`*faNqcufa:pERi;MHuAl>FHCW=(.5R$K>5ho'l?n<T2O#,A+(Z/BFC%k7GLP3VTa*B)cTBAtC#"BeL2T[Q1[O!_6-RfWTlMGjXYR@3pbDQT]KV$;*i`9uRag&:PDu@t,&h5c.uKVm'Z8L/;f9bqLG;B0$)&%l5M.p`s:Qcd^3%fhNbTus&.obMYp,0rtd-T,CW'"OO;^bL'<u]*<==7j]33Vm3WsO\;RLp+:1CD8Y>>Z*'qG)9m7(Ygjj">CVhp&%__6^uFD1u3-Up5l)!pd2](45TAh-.)Fsu63H-?O0%@ZRR#>NG:+U2q./"!NC4$o6D=)U>\0ej[RY9tHE`Pc.2S-!._RBUS*p++B-%s,D*t2pNk4^a-r.+)(:^dmt!!$rJs:!e=CM+m@K4B\!C#oSAq=RTTJs)>c$OVc<\T:6>;)Qj;XpN1:CeUI>;>;CqmRfc_FoM&6C]%f`-UR!`$d;r1,4=57LkS!Kn9VTDI]\C@VOph2(CpQ,].U0\X*g+\"f64Ro913C,0KE3ULplUDF?"'m_LGUmru$eL_OnPp>3s4nLJ%QbWD/i.jq)/kjqrnRTh["2c,K*!5S9GhflL,\:OdlUiu)4Jna`*($$W%Wt:s+RF@ULemSN$kb7j(^q/o[3H&1,;u"8^6TAP-(2T*%ccJPmKo_79@DZYW(p]2g9!;m51HD1h/E':j83DHbC!as@n0ipUH=.LBCq+"@%#GAr#'BUlK:HA>&BKMb!EqW;,k,53a,VeNaWWlN%VD8u>5UIEn^k-!)JnW*f2dZ+6R>C=i6k,!'-I2%7L;gHlad+S<H5IF!r46jmnV&gCZ3@#9k=XgC1l*SED[K]_!7?0V4aFKOCS8!e%,N^1agb@YID#((f*l0%74<arp]R;klH'X\p*JsJD#P$]cMU2Al&;"l>;Hl/9+hf`ENl9F]ak="9V0]C7ZFBt"6?VY#0nb*3qZ=pS%W0.scKZ+d\J>KbGMSE[VTerfBZa1nbaC,c3As1,R1)NrYH,WmUA:(aG#N19]EG#-IkDP<0d3KF4'i6<<)sld!3]XG6;[X@:ahse6%A;e/^'!a"D,\3l>!_NhlKq_NpE2A8oR,k+Mm;Vn\fafX.g;(u=(blR<k$a;QTj4I<[Q-hNC<NW&L+Ot/*5s25KS*)c2N<$a8N:[;%G8TX'hnf.#;.0c8\0HTk^k4auiIme;?p&8#/g9RH$Z9QkRL$L`&4$ELCekTn#ASklHI.]R@GV8:aY/`!"J<NW0%kknjTj[G1cJU7%J`g.-c2&b!(OL%P/'B%W?21rL*:<l6OQ.,d'k"?U*pn1XU=m-%M@^rS:CRTYFs3tKE#.BpEa@>p'o3Wooi7@hHT?Cm9MZ4_l$rrD%gTVqfbnME)R-k9ddGTno0%T$&80Qal%#;SSiTC2sa$sLU]j$L=5qiOLmQo>pQNr6$*=WS$LmB.o%TT_(So`hB6:;D6U,BHM]=sI2%$U7>l(@,,/l!Nu@YP@Whr:hdkr"VHqMB@>eO2'\p5:q>_VN96$+"HO"&VlM(_Xo`&*_(Bbl!o\pI1."SS'&;LKAkW!LFDS-49pE(%"(Gqu,MsD56QW;r]95PY\grhA&%jcI%o/pNfX?IC[Q%=D$oZFObb2/T2:HaP@nId%H6qm]dg2(i2He+d7_neUYrOomkWMmCi`KIZ%MaY"\<*(@B71s'%LePI5A;Rntb%^iJVfbi+AVagNHR/8^q2cK/Pl9a3I[;U5]aWdXe*it"3Fok(s(c9Dn"!Uu;(1[Hn5)^R"=.4`%,0thIG<q?%6KG,-Eb7k\Z=Wi-r(AF6YFSd]h`#NT\sI6t_XDPjXJK,V*=IW]^]:#4hM64A3C0Ag;\)6?OhqVO.%:Y9FkfrHEIJr=%A?_c1U$pnl[Lf5ELh!,SBNdrB<Nh'0)j0b4\VYD>aHp>q-fbk;5T3@fA75nFOf%;$83#UdQuWAMasfYP!CIbj?`<?13un)\ns?>)%Y<KQS`)M(/`6`"&4if&1]=MrnjK&A/dK"N\o_Z,MEQ'eHAe(W45X$,#YmJ/:?M0CD+ohas%/<GHOLpL)9jL]]P:X-b]EVM3`%G4a%%O[cA&UU:p0Gb4RiVY()SHW>u^*]#cWP5APHXeQ)X.4UVA1ppI8E]&;G0T2s7:]3rs.EkRJfN7j/45j`i6uEZXG85YR]=D`MG.Q@%lUuZT1HYt">cDYq(5sh+;Ll:*e!8`H;cju`LIR&94$eH^c7EXJe?1BW,YiF%I_[;T"^PnI!$RoTiS7[[.FP_(+(p2@*ei%0n1"V@%+>JrB<=0+sLgg]p!>F,I`R[I]2j:q8CuLdtLeNWG73_@PADcrpOfj?O17.r(?0Y%9\AAZ,mfF>$h?oF0pq#HtlJ'CDW'IRLC@.L>%"@H'!c'=#!p83_U',dAMa6!J"DR#-N8TTE;8r?IOVN>14Bmu70h^g<L@nIB+lJan]n>56#Vopd=9nP!2hddr86];"SM.t)a/PVb5%khbj+GsRrT6S(%hSSgl5`,]r8iYf;20%pN][_tQS,`G])UQ-%OY0%[Y7aNF&W%a%o$pebtL4jA$KZKqrEL?488#/k$'+ino:;M)N%p^AD](U,0c:L=>uPi4/+WAQk=;Y*F34.L,56&!KWgd130`hnhDKD]L4qQHGl6EP3;;I@@\RV!ZTCG+N00^MtD,d\bPQtNph$Lql>%87rUPFD5h#6q;JP18P:kMT.F\9;M9hO`9]FI8NFJ,-W@=l83M8\Pgr(Gle8f78>cJ^fLeQoV*]%BnTPqe;NPtj./5sM25ML.1Bj"%\ftmRB?a#X6AUAd`>i*W^`7>=F&.T/^b1aG@dnV#N3_)/c86`805X6&S8A_p%d)#J1`J@r>%)E*L"&Wo"KO?CAjAtPW0Js+8^J+m%B):k5"e-!-UH2:-ac1l8Mt[93g-'W*oQ4ZF31C)W2(;a@,IlE'%hGin2UX.1>89JhXbpN&<["rJaN,06(",u'cVq&H=6tmjan2<u%6?XRUGS0@p",e\,WU(<m.\7;hKhu,`h'jU3+r7(mPj,t9)FJOsGcp!R801&@,S+<,Oup)`0qs)jiRh^Ah+cPMpf)hsLY2ouqs[FF%#C",sZ;P7A.k50nQ'OVpos$eU0RP$"RE&`;QKAMla+rCET8M_QNu:HF,O_8KeVM!o%R9MDHQusO"X+O[3fS!>#[#Vo1e4PmpqU>q%(4l#F`M)&,'muu@\3U360f2D_8`X]Om&s)%Ua,%[%-nn&oX0:L-6"t`@75<UYV0f(HhG5mc655nl18FjXtJ_7/<S]BAPL%lHm('[%Xs"ki`G5^3,)@iPKYB7)nd5GCfZN.=Qj1`6(*7H>LuXB&Fo!_DiVn$DMO8^O',NCm+u_,eM@0EOV&fn7Z44`DfCc\Z9GqP8JK@n!%ae%4:)4i=c>&76[2W<=$[XUPIb7nr8ZuJ>E^i49\e/,;.*&@dDWJ,0%(7u<QLh"4&fQnI8JhV%pTo"kES:T!%@ZCfiI3C98@i7p2%nh%uS==4Du5(I&(*DSpA256l(a!f5mMPQUO7+q>H`YmmBQ_l93W$?DHpECS0J7.\SCAXqE13dR3(5"-$,ooLq&gD>*an[r"_rDHM%Lnk.L3h"tWTHKSTD8bRVE`5o4?`Wc^H+"l(R`7SO]hfiT&?A]5.>,M^6f10b3Ec"'7pChm8/DJ>+>5%4C`N6!a'b4VVJuV]P[G?b%hI<TT.d._fj>mAmaRI!WeW-#7dSkZ)nunT$\?1PaeW*0\C*=Aa6%t^N8+/KOrR20ASnsel(0S*,)^=idEBXU2`[NZb4n^IJ:[g0O%$Ib,`P6Lo(/kCknU$R::;nb]+E<D7?aqt-fkt-9X_!@NAK#lWiKW3jl/l(u:',r0L7J!9)8`\#ljqkk.Dil:H#pPWX!g']diKq]I%.^3ULK:-8fU2Rs".V",cOLi[X$.2LZ_1HUo1U&0%`C\Y=659R^3#$mO\>aWEoAJ-n(:$;KLM.+pT<:*Ri<7nX[3n[RFmBpYY=kG(%1GpmQ%c%aYLF)F0?\:d5^;.&r+N!"A-\Yg:9FDn+a!n6+e5ZH_l8#fC+[7II5+9(%mjS8GdK:-1_9%I%d5dHt7lK<D>!r;H&;"P.%?+be[XcUNA7e2&ASi]K2Ju]St+s!lT%Qe9AdQ41IFkKX/AG6rH3Id-_7t\rqE.WA2-V$?A>s)6;*CWT*cBSQ,jH;GqR[!&n"T8gY%8.\_\\toe#g5&uX-DKbPMI/L11'Y[I+G<.ONZNh/i[^Vu:;AD5lMsEm+nHk0Yn,$J@3XZe5^V5u+n-7Vat4u3(Mp@g!/Ga`8:f+Y%[ZOAl$!m[hGgkh@q5>%r2C*]:2J.-U_#kpsCG>Qd/B-NbQR+i235n+pYrpnY$&dKtK&^tBeB:FC@@"m](MCsgeR;ZJm!.bM?(R<3%_V9VY(?]Lbg*T_i_'=mPq/KU"huVJcguaMWW.GG'9MPq)a]D=AEeDInD?rHHSuHE3N92fOXN*fa-[D,!d/aJTLibpO)JYMp_3o0F%6)!Y7+WkAp(+#aZId/dMGI9*J.I`L^qr!63AUA55#=uK@Ek6KjB'kK]5PA$n;fN'T\Bi\dU/mS];1T$E['kMm3cBq[3Mo2n:("-K%-,5/OU"tgp@<E0PY<Yp7_Vm'+F;17j>j$DhVJm_MdW-HJU'KO0#X#gM@^$9'\I&'W`Hbild'L6t#NT4$\rcVoGDQqL?JsJQq7JZp%(9D?WBDgrZ=Z@n@#p=!b:H3l\I22Z1C]t^"6<+$XKLA7VB!*H"1IX/DS?3>#%(#MA;`HG?*n)e7;0XBV&@oN$HHAm%R/Q-!J,/#0%55:HTrdVrn<P(#RK*.5s?sF4Y!qSNLmj;HsGr`TLB#$rG"@RA;][GMm#:;$nSY.*?1NJp<R:r,NckH>p`!_UoM'S"n`W!t+[ZseD%_lXtRM,P.>VSUKd:)f.l(8q;YN7eoZZV\i]AnK%CQ=,Yo4AB?VGC]o0,[t?tb`Y!sHKY$'OJ;seRu(c5W:=8.dUHW/1SMi7K4oTK%<BXc"%/CT2N4pEgOIMYuXQgG+EhQH!-Qm<Hfn<%D>/CT63L@_1`2KVCCIlNbiqWrsZ]Lm/@3,QD"YSg8mV?!"H;"Zjij:^q5?NSK%TRr$`LnJuf=qB'gf3^f-)"A.[+7!(=j*DUt2WA9`Q8'Y`2dqu.!-DJS34T$BATRAMcP=#+YaB9(-kX9JfMGag;2gTDh7;$c-O_kc%prJ'SWX+qZb:oh+T(,r8`$)XLYP9(a@V.Q<nq0#Sjqn\#1:^k[gaL:R(l(EU;(FbK4.OOPQESFS"MkIdqB67n^i4%)VM>O:f48o0%Datj#hf'eGQAq5?f2>eW=/[Wl=.$-7#^7`e/qW>^ed8)U1Dq$o;4]>H.o!=;rMBA*<<&<Ms'MW!K\K\=XXVG*'XoXt0M<7d!lk\n%L:G&(><N!!<o#`ko+<MO=GH:a%9]"_`sl1)hjj%XSNX)74pr?chc3VmU=M/8B#BOa0?um#G"[SCL+-Ohg['#X8o#CW!JmFj;*6pr%O9!MqjfsQB>Ue*@&n!WsH*!fE_D\M7s'/4T\SD%`_-;Vc+(.ufF+kpfP*1=1#\+DueTt5P_79EBg(@C\MiG``>*#-p/Yp>pAn?hZ%Yq.mXqoCLF.nurRp)juHLgYrYN+`CIi94H\F(_(I1hf,g0[IPFZBF2T,:iX>0a&6B!9*k5%"XaG?,;:]=]9;C)DB6Y_5g<Icg]Vl%n6<CA=gh.>4P^K0Sd`LMq@bAsJ4PZ!:*`PHH#><cWUVW!rh[X7)q:6K@g9D;f+UUo?b@K_`[-DNRZ<"o]UfBIA.&btIYJtL0@Qf#%ZV_ouL"i'aT$,](TgrIse1e`A_lR5SIf&*rYb4&I!lb.7R])2t%[4f.'Nd>0\pmI<Q(%;3*+k+p%)YO9pI%n\]XPcq#<Y@*YrID^%9FPIARV3E-@iuM&eu!#3+T4C"q(J:>*18qm$JU0bfnJQSKcr".=<8T>k6edc3bj9Lh]:*t*DPkicN7WPFjFa?61P)p?*HJN$/GoA%2uuB@8O+h"g)@Na[_]q9/]h7&S#pI4:lu;C%L2VhY+!KhK+uT2`t!pZkGUVh!9nsMiRS/@Xua]>^ehn)3[.G0D[1,Im8o#cE%p.k%eVn0mW>0%m2#Fm:=+@J"_@G,SM@ALU+dZt`l:eu%30>s)`!?Wadc*TgAZ".,55UCJ'*/Lg"D0?RaDF[X9BcJ9+V%qp'F3T^,1_n@%6NpJFZUCt8#_o,tG%+XR8o;Gsdf<%)<cK`aN<JG\.E$$^insh_osR7.$:IW!KeNs186D#-J88W+Sn^/K;KGTIX0gl:0-S\gW-?@/%a5IC1#Rf-QF7,3Q"'\M[*WgWFL<"HF4B%X:#%:.3Wh'JVe^P"4nK,I+R3i`1eqKZO.h3`XR5:INC_^r$V&r'(lk.Z%q`BGZg[Lfp%b3]Hd8%AWiLkXQP/r*=)VBLT+,+T[?0e--QdWktRV"9Bh=;'cs"@3'oW]\0%[VJbXLGrOqgMZ6:ajeO1%8e?G(9rX>NljjcQC9F4%9j#P;0:59m=("qONa4\:TTWt)>t!?^<q9]5YW.Q&YTt;^Z^NG"P\+,kes>;"3@lE"<jJ)gRRO(+=H(p)#0:+>_0G9Nfn#?i!64.Q%'i?1&>ChJP3cJFS>FD_Z>Ei^NKs&4&IC$oOCp>uLlbit-:`rBR9LXP5.".op[($gJb4:Q$6<LEZZl>D4!7OC$9c0r@$jd36Hm/s,%AdG]k\KiiW4Gneo(7,Rg`&"AAC3$in&U%89];(aH/d`5r"VQOVO[F`n=!+U0`2krq1rtKDa2-3")h95r(p":&UkRgQku,;'jeP^.%".+p@ge4%$,m9jndJt/mE^^`gFDg@$EOs3L!LPgD4orPj,q*+SH:+oZ9uOI(n7_">-\=mUr-BZ@=b_1B?K^#`*3::J`M6n@JM\si%\:>RT1K91cF&<SrKX(,,+DfA9PI\^k5r@R"%U20W;oBA$5o2cdV@1+TCt:.#/n^4`&f`+sJBN#^rP5Wj+]kE/L1eM0nXV"1q67+(%@Ku;gFDuW&,I#F(^XPf$NaNI@R9[tYbCN+>VPK3Q*+sb4P.rco?^]uY9_)73q(%[,PtCtt,l`(!'%KO9>4k6/[5m4tOuo&=b6;OP%S65>]P@kuT#Pek9Y/3"ud0>ei[jJj4+Di!>Ss/h%QdIdG8\cVKf&W_)U6[BL%!sf2@VUp6=fs/]`keP]EVZkt@@DRu6)4*FqA]Yi%H.ltkaMs\PG,5a(F^B4ddLd;m*\(mW/0P?i&mSV_.hW"QGqgmL-6>mejPPIO7/sY.b=R/KIc,UpN.B&rW_>Wi(-Qt5:S[1;e(>Wq%hr4UC1]@'n/EKnHG>NO_V#:SY:(*2j6/!ES^hFt_Ce-QN,\#`<r@S#&e,5P-.l6R\X,@n$*#9Y0TE?OYB;O\2.1IhgER7)t%6toN%;3c))5rWABcZT<(>WW4=Y`T82S[0Cdf;qIp!*?=p<A)Pt*.gugS5V@C=/bEK+^q-XM%Ft:L)<ir,WS5`:h1D59m4btBn8SfoF'(S%pf"rI6)7aigu<!h/oho2mmtuZPpnaXncj',f;K:>/'p/96,A2WL^=EqA;l&a2;Kj[j;'@(ROeMR^tm>cg!S>:'Li33![!Nu+FnIE%&Z?QUgXS`/M;od1XD*Q.)Ru>4LLWsgmEYefLl<MI_rh^>ljjt[X<LpR4*jA6XdfNQbm\#*)\n9B`3m[q^mSP(+[^2U0Z;k<JS/i\%m/a6ja$\7@beR[A:PeW.SDqDKOZ0ErP49*>/*eobg>ICL``(#K#5$+rhM-m5_S\hX5"J7udE%Tsc7R*C%4=sl5:=@#GGXP]19r*o%ac[^5fFM1#k[RcAE^Z?Qc1$Boa87=6fZ(U$OV'n.Uu!P)R3E:_HBO-F3(^O(;dql.Z2#UC#sP#Xf6`H_S2O.*FG\'N&O?];\MS1,%Ed[Qt'tGW,`HRR\rp!A^PJ4*5GfT?&[1uqrYQplr<OeID!&`&oR,6aDeiLbM*\&U&+a?>:RA:]qqKT?.+H7cUCo[)>S:s=4@"_/e%__`SAA",gC;^<Ko,p?"`0`m/H#5s1HLG/c!m)4+Pie20O"QqWOl&'"sJe?_&,tnt1-Zk2IUK%.+hC-<'_=V1jpe_?R.:kud1_L@>%PJf^k:,:B4VppMgOQ8#K"id(b'Ef3gTHpR6?O'/mi<qKM`eR04,0=stdnMKp@,95mUc2,@6DabRDk6+,G%(c;!^VEo)"gV^)D@mp%"8l6p/X/Cu*?@-PWTL,j'G@mW5k5XD@Nq[&>4K+WVMSb(lu*496:3P^/*%FX5deG0%4$@dffn*E%tKH>J/o6lN?L^N`8o.$8h218%62[AA#e;:1)gT>rd7c*K,AMik!Q#T9H/9+m'Sn:7Z1q)2*"dJ=4]u0T^3#=QGb,*g"1p#SFA0hG<\rR042F>["$/lM@6ceN.VF.:%AK.%!'kopq1+<?7Rg^+W&08RqSNa\:Q@3&tUD`LC"(sAHD;U4Ym*^aBVJt!E)i!In:.@0rX:q.sNa,PnTRsjT+Q6WU0Y(9?'5kQm%X#L,)02M##&?A5fFg+f3[YX8Y2h;abl2K2'@P\D8TKt*\95I\_.7</6<&P(T?qHeD'eD;jRNV]t8!"#",?TKXkfHmbaZp&%1VT-/%-;3?OqsB<G?KF_@#8bR2At(\QfMtW5%g3"32hX])Xs#<eiG^(ZO?D]GqG2fiMQd2'0KJhA&B!HdB3-d:gOKhDWR`t]dCN*1q'+</%DgErWfqs-RK</o655(@I+d&/S7BgohBsrETnMFe3UFfp5*;4NHf@L@;SAQF(3HIA'L1HU=@2.<RQQ2PJScqPY*%-\=bfj[\UfM#3%VEQTq@o*LT:a+j>kJ@ZOF99O@$sRr^iu1TBD7`=fl`(La-:.!qmm7kL!8soLe-0s>JVIu7Ra0V_#bY=8Su<2A2$1pYG8^5QC$R&"%ZS7=7fjne'0NU[=9@4K$^la*d57^s1+A>h_/o4n_MD*HrNn?ke>jS=!6L!-M'F?f98-EH6@I"ee'a/a83i$0%Bc-t$#idmU/rL+7%Y]=4I\S=-#(iL,9mKX<i5,<R3Bnc/?Wg+eBn:_EbpHt;MNPuV-XuXZ]X*6h*BY4=sm<9.<jsmM&(sKQ%?;>T0j<1g3FX.+NkXV9]%.M4AS6NXZXM$YVUFW60c9jjcTC^(Af$Boh-pBb!)!TL0r$p^&fc8D("nQBZYRqFs$-fZ*3&SK/E3.$i(!FM0HRj)^?gVm9RN"i(W%H*C_Pk*2f@K3q`AFchR:j7Ea"=jK\Gb)^M]32;BF+!R9u7<,!5eLQY3o"<E\:)>Kr$_2=%/"N*F-3A_;kp+t+%+MP,G;r8<=mHWB%n*jj"9PJVm<<L`SPk4DV&43!#%@DCP%2+cNGU=IS:pe=H?gnM5X@31C^5hIn\tC('gXm\P![Io(dsH%O][X[SR&XfZF0G$?[o`%-%:QH<qs6Z6tclh3F^qb`:`qS=sD]aIO%F3;G?!Vk@lor*iT]o;)-oLohs'O.[*DOKIie8K<9]lGiM@c#WOd8K"_o@R!B'61%fKP'(%l-id[_VG20'Cc1]b\8028;h""i8>M1^^d>rs3o]4m:_Yf<VQms*U75^\7h'D)5k-S>=J[Z"Yq3'=I(fo2hUYmN7DDT+iLu+hcb$"%WYroD?.`*Um``a3mb#Rf$bV-m]0N"lh=#g.5]VF:fQJs*V5gY@q0*D!](*LD"tPEk6(YVIF-NrMI=k2b<;!]N(EJq8m'r`;\Ce;e%.Vl;mJ;Q=tdm?0%h)WSd3C@rfQVtC.P#E+L+658BNq$l$hJ+2ZLrb_$m_J\R<9Z<'TOG335.>CcH?2&6UHR6F"hEa)_;K-__f`tj%[%rg@*B*a[+U)3$jq@#kn>I%^5gcRknAlRC$=I>9l2uFkG+i>J"bhTtS(Y@$7:d0p@hhCN@Wo=;aOP"il.$=/P<a\E04C1l<9+CL%4(qp#+;]-R8VUo6)iisWFP<DQDb3e`3Yech#[2HgnJl$_@%G8InO_?421%'CDmVn61TA1\(,HsR7G9d:8M4jIEhm3P'Lne#/0pEq%r>b;=44]#QS+0[j4dEfedB4daV_JIa0>RtrI36&PO!7QNQi,CiP!H=OJ-D8tAiEhT!#Min[LXUEUa0HT^"k4l1BKK!0c%AC[3k(K%3#!+[>'ki$(@G&S@\k)#YXcV?';@5E-4S94Po92LP`ULK8<>IWC-7#6;%rP1o%r`g+B#[Qrk?XSg:9LDPFL!52*]lO0le4gE6&57%$et(u!;=lHqZcM\m8S?9&;7,@#;Z8&h+<1?WpQWDES/l(i^)=W9&rKO&V:U6bC\0ACsM_e.<C7ZYKKr%md?dfQccpZHmoA-1i4dN%8i!\A]>Mbt-b`D!!)1Y>-^AA;Ft_uaUp/FD6o=T`CfJOmOIg]\7+n`SH?Uh(jfElTUE`[C;3JGE"f"cV#8re?(mLURJ@<lj_BBJ!%d?G$883l!_:mGf6YVZDlcurUQ;5on%Wd_"j2h3]hgM.<hc4#=JKps#!&HT".Ab=]%PH[km4pBhb$'%O+Ir6:1,`m[%9S_mWH5)k]%(_`"?6+G$6s6Wo(I(rb<@oH<c;DD]3>t,_ska>Zq<IaYh@S[>CC@Yl]j)Q^oVI2Vs,#6+*]q!,%=s.5$O7(oKJdmI<fQN/N\SZ,:%E/PfNYM60O&H)oOW?9uZ9pU#.lSZ1[i0YZ=TVgsWCj/A/5uHP[iKPAm+1[*$cm<&LZ7#oa;Xp'b#E=sSo9$7+1fdhK`@IE9OfTHu%kb[gcS&.FJ1--kpWOn*GA@1sp=d<l"YS'3&(`AfPXF!C1E\o7GTci/;InK!Rp,HV'"r$V5LZ/'Y]b(>cQ=.)llVLbu,*2rh\VXJk%6rrZS"/uF(7I?3uigPah@b73Y&h37eMFd*EPN=d`U6(cE`CXmIb=Ds[K_'57A3R(^"QD_'o1[!F!pM2@4$F'>J=+:0)HYDe/o&IZ%4=:,Bc)#0H$F\/)LTLjfr]m/f@8A`h-sk;CZUW$SobL.@k]&mhZb*C@Y[&5Zd]c`Rk2kC3eYOITS1:eo`Eq;qE`9`<DhT6)Hc'uW%"%;L;;<Kcpg?J+U[L_-B#GL6b>na&>:(jXc`VObrbr>u84'fMM!I/HnB[-n%3AM&k=RJHH-E8JJ@c`\#.jpKF2I(&`Vn6ori1m'U%W5?!)fakmK'j+#>?D%]@3SLE0QjV,+pRG4--EED1=Q*cOYt-<a5k.;h=l8&o,?-q0-nct9XVM';5ujap];BU<i&n<sQ0uOUQrgE@%T_qhA&;nH>Z>I#c<J:dUP/6XNJ5D<K27h?k/FPcuS@<(/;7n.k>c(\h^_S(O%O2mPF?r0$aoeiFIAk7KkuNpTW]%XK3kn(p'0;4i%^^+rL-OsJf[&keL&g=&>M$XMp5?i)IUuS:=>)rb_!`"&>*saSrGWo8*0)ToZnbLM/mB'Cka=)h.hY)9)oh`a;Y-.ZiGZ$!$^)4]-%Wj\g<[&9$^MSPG7d2>0ADS"0s=CJS1VQSru9<sJ\'GR*YU=Lu.r?-ms^kBMJ+enE:Nh3rPTM$<l6kuc>a.G!Fmdh>&7&L'a'g-eu%JuD4/6"*kGR8i_AVeEp3Mf'cjgjsc7b1:Q2B6I]]QF*Sk2*mEUD8pV\J>0Y4l*rjgT#nIi<D]kQ<&";<p!liijXrNT'ru\sk-5Ir%:`\@`WcfN'&!fp0Yl*JL(Emr)/Zj\PR"ss.">&:MFhsmU./HJ]6H3[ijpV_UKI.H9@k&5,7Y3'e;';8*;LZ1s!UXq/k:qQ1l^`,f%+A?JS:o4(F==L21oVe6V\SU>F;OfP^V(eL^T>B_HiZ\)r]%0u66h_3J&l_":10M"B.*<Qf\3pk]Hp*g7Zq14-Y@1UPY?.#J=kWiD%k-jI#[2]@/LXa;_L]>IAWbi$;X)EuuSV.4_Kg%VC3])KIi,:Ureh]mLGla4ifqjYOWE6BaV*Th,=sK7T_7N#JIIO(5o.8Z[8V`>s%7N("iW_[l:q<9$F:t)pTpFn\MN&RB.\(T_VAJ"]nT&*0K\mrrINMBFV+)*h1G1#E3;qcNspnU$cRm#Pul@[_mRM:2;Bas\uS8I=\%L,Nt!/J`I9ROgePS>Sch6R4O$HqrYso%C-?Z"!EsY,AR6HOnYR[dg.9f!I'+[E_K?G;miPbS7Z"pD:4;*TU!J7Nrb2_bALX%MD(^%TO_,NF=Is42mM:am_9O:!jDp,+G.\K4`:[>^"TXth!dYK,]jVAlrFG18Xd8(;Wd*gW=/URgpdBkCQA;SL.MGd\=SPWYIPSAn%!Wh%iO10/3%9&*;rujI:)dNRH8q#__?_n&6sJ\^.uV>7U6+0`$BjokI#*(kmi\_e&'F8,W=#!XJ2eM8H?Pt-i09K!b\<m.eOh3j;%Lg/%^U?2MI$'Y]1u#^k,S^mJ^HDiDK)2sJ)8huH/AbhfdNVs];,JPb9;RsB??hS?rSWFA]?uL,rr\[*&A2tnQI[j%='_-3?Z!,d#8269%"BVKUE02Q'G.8gM=_2GJhU/0aXYWWPU"K,fNj([!fT2GK1boBdE&L9HH3KCrUQmj&nYL*0]ef8BdG*?qb7QI2*5&p5n7V_$,Nksn%_Nf\FX9*?s`HQDnkitG]\40\dXm5UR1d_"SAIukJ4@(<"p;"mQYQDps4MEWXN4&Cl4u7sJ>'W-*[B]mYo"]O0iTsI1c:&oq5k]_%%Wej1nNc>BeZj@./A70P&I9P1RWeXk!D6&h\7H(%>K,0'o:\45;0Yo]WS^<>WU2F3Be_T](OnQE/a_"2ZU+W^;NAKIiJYX>eB21FO%iusU3)U4"7FmZ%$-%pG^::K'k?jL)jH7$6TlY6S8JPFn>btFkUeN.@+;5BE0@WM_s!6mRfGS9j6\=Go@J&#/]7,R&J;Qe;dk;#Hl%V@^4L\uD6^MKZo[0%n'YXgi0_*i;D5\X]40O\\;0/tPtDc_Kd[a^LMV#g.'c&=]:1l`b\f>m_lf4d'X[=H.FOqY6)5A[O%shI$F1%k[a>=,XjW9EL"_P8+TqZRqaa!n,3i!BfNS7f(ShX^H<%m\4!@^+`FHWZ:KB]7;.HmX>@UEbX(Qj7*1jVRBMee-+2C8k\A@u2RnXa%^*AY2Eol#E6E:4GIm$0P_;jBU$%?SM.`-Ml[TI2(m\$f==lBEs9R?*s)].af%L=DkT8=5*Nsf6SS1^5A)X0+H\"dEuDr-N^YeFga%2@rVZTo[>AXJ<(`]SoikcFOe&ipVhGh[CaGGWjNoqWn[Y/VP!lpse]0oRUq-;m*i>p63oqM%J:LbAWZehY,c1LXdChm.)JY&:^Q"%iR&!c9UXg]<p%+urJ=Y$0"XIH=c$&>ekp-j[,VhOV]*;YWG^OKW/52\o9jImCQ;bmL[D$FLT>,AWHFB$"?.bsp57L*M[A7fTc2s1%g[u7RX"eM<'O*t,/"J@?\4)g;lQcq-1PT53Db-^eW2^ao_3L\!P9RI,On3a-m+KJ5K@H4F3_=,>K/,Ni:mJ8<;M+<\37uui'lgW'%G!blUs)"l[_A`-@T_^'Wk&I;)UKDGQq';j@WH3N;;P)ai5&O0h@;IMi9)ma+r#rg)k`12/+hoe5(S9M-Y-j\9B!k9Rm";XAm?tN"%]);D>_ej`ThY,Ii:V`3D>,8PSK/0>\p*+6m_JpP/Y.6,V'R[jm8@H-W2:;eH9d\sA"]ZtC.4MX`5>pKmb!lk$R>_C]mh2HsaHC#d%lOe/fX:ZrNAeD0X%C\lf1Lap>JkTZ-0Y'/8KGGXC&bbX9dc3,]3D81"kk6J[fnKV0qgH"K-!C5#o(:hbo#Olbo*GI$8D0ab.Y5Yj%Yt=qB,KSp2;:dm%DcB:O9gc,tU[!:><&]19GUYYIF$5^,kJrpH[aH;j-m68]8/86:K$%/9<>'YqQfRI21fJMjMB`rD\5hcm`^l?L%gpE;l+\H>#fE=_FlaiZ*S+X'9jONZ=]#n1]U4s]D5"QXIG4@S_"<[_`,b0oT!!asQU3)S_W)JRBGnHdq3$+V^_<rmUm)3t%SV'2D%8G5'Z+G90ZO5ok=O$l>td"oR!?]O*UDF.*`6s&K8W?V+4;RIM+?)>&:,1M;1,("@M)NOCT)o=>,\]=Nlo7Q@0o%,p4WOculHmU/G%-!F1Ah*F<T9"f=^-c)+Cdo(.tJfs]UA.>i.+=OD*mC-#6a;[ESi7#</UaTiO1D(`fp*d$uDIg4-q`=OXAt-;nIIAKI;cSN=@'Se%%Z@MB2kY_m-iB2bNWNbkTT;dhT)=?jF':.XE9PTnc<II?=_e"+*,O$ZuUq*!$)&Q"jJkLtQ8mJ3Lh8ku0q4UR9]<a(V-fIQ*cRD"G%;AjMrTQ:>O.s!i1jD?]@NQu0g(OudPK9`1d/k\&-*WqkQH=Ui-ZJ4p:^"iJ=I<H]-dR%QCp;86]8;GB[De6bmZ)FT*GJr1*S(p<>%O@rC:Lo'-+&&OO20G>G6SuK/"OJkS^bp!9lG2T2cEm=Xf"sKh&)$,X%o93-3+"tX!085?'l6;O#8sNt1=L:U99\K#0bA$,ANJB[C%j=J/)R-c.f;TI4JbblFRWZN&9-L4Q5*'&('e+dpk%8DEpd42@>7>U.g<Ts<k_:u2pOn'aqQ;A9M8b[M5G+-S$FHs-q<,_ZF\'ELX%mcjNUd=mr^k)_L<)"o3aFo[*O[`L1/DO\&/-m0T3Mcpn17I%lQ9$o0AU9d5Hm1U<.`\PTZ2d%J>EGa^la<F<qgE[6ggh^P,M=XC+%g)QZOO,VqU7UD'fgmSAB.qs93pa0_-k0ah^7Q%8kWs@+j(PPm(Q5))gESrjjPt>)$[mfSj\_5-0hT[]*$fC<qH=dSZ\+49-cYq4.%djrPNVNjGTb0\laGD]?]U@=FT55$*%.Gnp5&st>*SFoSGa^)#"6<=^G$(!U"oXL#SP.l9<"q%H+hp/1MQ*Zj/MX[G>(57aMB@=/Y%\s8?dE`Srnq!_0/D$/ZdmW0dO8t)M!FQ1%.JJ2@lF$:\V?#aL7Z3XsuK2dn_A2QqGFI<RKKjoFVW>r6kl]FA]e]8U%0iFAS.@@e5%.O.O]*4D65f.JTFo7.50-`-3\Zf7s;Fhm1klIX\3XnF6^6;Ci%6,5O5-21@SeKSQ,00X9L7#Y>p7LD9jL!UMh_D?Hq"N@!5=U`6*%QCcN*HRsOT@[];`<8<_<6-pTSN.YMT=1MT%)0D]JX[F?R(?)X`mciP&\qo[(+T")1!nSR28f5Fdp>BuU]gG+r6l=Dska^bX%bF-?%PP6IiWC[VQoV`7dVIiPc^.fu25f<Z7#^qH`@?^OK4DptKL"t?8P/1uKLHjW%4o5b/a[,c,\TS=9R'4c2)\'R;"F[IeLYr;sZ&VFe%[fl_&id&u)*]F_*a.P<kFbU?\ruqq]8^?)rKCC.a7+:P4B5h+;%PV+TK`7h9gjg*&NC8gH.7t#@m8AWI^\7U!+P=/sriKi0#Y$'1%GFI(8-7N.2B&![8;V6uaM3VBA*@),0fRZt?:BD;\NWG!\iu,K0?s-sV@"B\VicZr^[7F<Gl>.`<Nqo7g)?a:Bl-"CKGF!bA\\_[U%m<$(eOk,Y"\Xq'c@dr:p$W;)[b0TTD[6k,uOl1=R'$h[_anI#sH9Qsn6s;*LAE8Ru_D_6c,.:<T)QcE5G1*e41^G.O[/`F_l2=W)%Nu$ot0OOV8DIlVfIXIRuC8.QR7VN_ik#.p:ZSf2QL-qm+Ocg\t3u]&jD7l'3HAI&hA1m!=cF2H%0CtUZrR&WCiQT9D4cKNFPq\%j%)_!k'5gBD5rR@#oB*SWl%M76Xo6Q-0E[M0DUQnF7?g8pC+giUM2WJHS1_3U1Ro>bg=hW4Poh=iCC?<F%?<B!Ynda?sc3aBT.#Y2Y%OuWS%G(g,1Q@W1F`=`tkJYZaSo,5u6O>BBOoClcGPEb(F.@R&APm":A+;.SU-](p)@.bE@4/$2N=O3L4Kj(Su<le0_]fE?(Ui"nN%e2\\_H/p#?<_977$[,.tDG"nqVV&[B)]?C,3ut-H`MLUDb/XK:kj=NME=6BOIsVanXAT!%Bb"OXZGt_8[#M[lQ@M=?pF4:iZBI>B%JE4=^TPt?4G@$&boksYDHY2]IC4+Qu>A\T.6l0%(&gWXgVi;Ce<:O00b[^BT3%fgK!DC`CkfY]>nZin&nI9\h0V!C\<8YZYnEuMl%dp[`\+Ji#O'e2.lQVm'g:`*8VALo!'+6=B>/\bD3-UG7_dBuu-+>aBA!1f"]Og%ON4(;bKanSIT3,KMu].o&%`XC!C2EB&r:8(kW%:dQ`F8kK*5,M%,0@%i)\K',G=^","#.b35=r-\ltdVjqlaIsb5rum/g&rg,O.<?*3G'S9Edd;R4HNXPpM0l"[3KrJbK<Y3XcbCog%%4XMPUL]_f_DrjU)h^lOSkb@b"?I2)g:*ZaD"q&Ygf(uL;sV3SJ#-Z!-cSV&@C:GJSo+2g*41!3`d=-ab"7I#E#)oKi$AS7`Cq8S%]^oH4#WL<BUmbWX0Gi@Umm>hn3ZA=BfSLO`PAZO_dkn8Z%G?%YT^8Jn,U]R`bk?-cVuCfD2Eg@Kl'_G)J-9i6e'Qhd^Xq9q85%H=%Uh]8"dHlshkEhO24aT,[);UpE9Z!%$-]+S9nZ(CpX&@.U5K7e^P&ApGI79DP50T]f8S]=N!Lmkgd(q`1cd6&5)PklRg[C,3Dkq(1%2^M,",D01!4+@U,EWQO%+F:LZC2:e5/Kt+/RuQI14'A8Pqi6o3p=0r7G&NRGPf:!tM*]g<b9ZbG-K&7nnZ`hM)nbWfZ]lLCYoY@M%fAG>M^Xm?@UeR#>U`fhJ:6hen8-rCAj"iuqo]5oBaPe]Jfa*rN7([Ah`#rolStt6'>\sCBLUc!gZjf*04%7^VJDQi$,NJM:p)kqQ%@ZmSo0\W'a_YEg;,\I)-1OT8(Pqh]D>7T'o,fgN[b9fegZ3Pqt8dSGui*P4b#tao7BkqKo%8#Qu:>:`I3;N*C/koo?L6g51f2'n_%ET?)-amkcu5S25OOW)DVgRYZ+)B"4)6S),:1M/.Y+QH,L@!cMjAIY:knnLSAeLGO:G]([H,'>aFZaI"CL*AC"Y`ola<!6npT:pL\%V!$.J,YSq^P(oD[>8`=>RanC=bhfF6H@K!H0?3Y$BH1p1M6Q6%Xi;;O0]aJu?%s!W$jKE]m#\RACg1UoaTn1Mp0(.NdE-+_7`=r_%Gaa*Z"C@<cgl?%T_.L@QbUL>oe]?G$8YjpD_q&(_pt$dK,[3'YE=m6g;^S=Z<^UM=3pHRj3Ij@rDpEni24lo*VB)ceTF.AQ%H,`X%@)rc.S=N04%T'Fm$plqc(ofUQ#TZlQOp6PhT_u@:6BWN$;qT`]Hj#T;k;1(2KU>M+Ua+9D,k?=B@";+7JHINDH2`tTL)<C<*/teh%'uDZ-B*%];?SF]%em[mig%1EZ1Y#$XX-MF7kOBkQr4U%L5@fMS]gf2";GQWs(jWX,<m=DD@#T7Mbe=Mh^TU0(<hE=gni6OIG0l;E%#jpdCs%eMNWhfs7SG5,tjg:)#0j%]B5(umS0h+k7L!8[?d%.>B34:!^1hb8cl%r4[185L*Jnm:'<Bd8S>qVQ8iEbH_\7P@rHj_;W%*%smNKGIhFIYa<3?(\?@4H\&@%YnM<d4<@8@s43]KI%ImgcY3kB?BoT4A[2MJY,I'0i&,C5]O.Yn5oBO!&kH1+ZXSFT=BHHJ.jT2%Y;"sBe+n0Xmaq(+j4S>=KtktOk+@q,QAK!=NXCT.ppN@D>.%ca_!IhD*S#obR$!:T2VqAP*Df5$%?\3H!=/lJd9U$Qk8aal3<7^S%pskXE:''P<'F#8\4nckq82;>\)(.B2-:,3#L<l\$omtR9;^\3<2WiHlB?D$letf:BNkUgIE:D-9\?_j`HUP'rWt,hA:k?Yf!CoIR%BmF)gJIitiDT5R?EXA2>G*aldG8@>L1ucpKaaC.#C2Gi"LS4uMV->ZRm@LNnVlDM(L]_2m%]%fV80i`TBh!>C\Y/Z$h8tqXACf97%Q,&"q-'2sJ@lso[G[D[E3!k&l;Tdf]kSd,i;"`<Ll8Mu\Z5m)bb0kYMk[<F?VpI7'Hjt[tNgd7OFY5>fquS@r`Q",P8)5Tr3Fi$%%SEA"!6IOh_$<URoJ/o.ri$#Rn;MED\;Ql.aXAi0[f2MKWB*lm?f.l-Bet7,K:14;USurW(SM>>bi#&hqHgc&g2,S*t7;[[?#H1`D%JA$U%IAn1\1&`l5=hmW:AW:;VD2WEBL(4]m\0L\1ka7Znk/\fJa3M4VA4dWm6^BTbh:n/4,84M,:nUW3_Dn%q^]Q<SQ_M#*+d5>c%A'qEO-=UBB-&&@l?IpB_YtX*n`A/(5$<BDm;OB_Y44AF/Mf6$bKM(5XKK6t<Fi1QD%mcP?`OY-!rMn+uX\TEOO9pN%OE%9k6&0W6%rCf7nQMVDS>,%`$PGieT#1nZ"0Nid_@-%rS"EA"b:<@F?FYX=E>g7r\bKd@3c%E**ZI#09hhGp^\UjQCn8clYdY3nt5(iq\4WV(g%#YdZ[?,dQ,1H8Zm*7YXsQ5kNsr)1QS;5^o0%<$AUGr_40`oqG^*A*PH_BRPJ*R6de9tm8p/u09q<_P9Ae<,F+='cUgc<)C^Pqsp0%/NYr;go0D6WO`9X^8`qn>Y$a7/r_C8iJQHfJUD`^TV+gk-.YL#6f+%&pk*()#j&UIs5G,_Xdp>])3OCqAGGHr7HFuj=#qd-&s+uM%+=N/$SuX=P?iYr`2hE\Se^(6NcR,`N8Pj6>"kF=MI7g=<>n5HbC-$haZflnJ:dr>?l!fXlZ2E*bdJ((3:ail6]pns]WJ0ECZU7":%KBi;&+_3g[%<<<I[8!6$HD)aLUbDeo&\0p-agLjQA:,`^%L*]jb$IpLcQOf(-FF*N>.Puk=PMb=%Ka%*oKkboa3h.:"Bs?9-;=k(%l,"4t8AK7FZf?rhH7V:&MS\g%ENg!t,+p-60Zn4YY$ZfAdC*MK$]IrUE*RY?pKgYXRk5<(.1tP.&Q?10PD5e%$KTqjU:-.)_d.3^%#DiPNq,^_093<fHMc>\UXYe:d&EM356S8jUe2WVTS$(D=iu*@>X[E5hi^4'o^fBh`lFI6RO%"pH.-\X]!a702o7`0o&=k!Zg7B!/%A=IV1^(rBE3nOp?KRac,JuBtDn-B1>!!l+h4O`,!+<&8DbG94'6l@mYJCa):e8^1L:$,Z^P&(Y&1V&I-H[olAelJ&/WH]j,&Y[ra%NUYmRU&N!2">Ejg]PNI_&S<Js3l!5OQlsE5M`<7VnhZ.SHu1j"b%a=uL0+UF)W;ZtRE0fIn8Z5bnOP/<&j`hs/7k@"LBKl\S)TWC%ZesH\45/A(Q4Mu!<M[P-SM8i'YmlqD4elGE'sBmlMIJlD$ipf82L2]BqI#$i6E3il)r=mrjI9FK,eJkP$VA/aD+sn[WR]YabdKjc%jL?So.q/4n.,73rLO(2B_KWN(<+6"7067i&,7/,Kn(gMBV"'EP9fE!Gqj\BI,3rlAd\X4T;m4N)m\o[j#h'n_.C/4o1(O&3N#IFA%5G/9seCqGkf`qshbDJciEdET.n*YX06*#oq=,BnjWfn\@Mhi%\nZngIH`.pAn>sdMlcFOTA`Bqd`Z2SWSG8n\8nk&N+iphgT/&&%%r.)^*Y-%cq^0hAL'MMV\>fF%FDugq\bXIQpkoeV"<O#4mDu<uI/$HZ2a+-dE*"[cF;.B(7+]Bg1kZL80*cgi5/[m7^M$4L*&q,$t%+9>;,aY!.jHdI<a6.le_^89`jRh1J\cGPm,%LOd,56M*5_D76E1ipWYC1#<KS#m;A%WWD:OG0BWdS6P`,d^(X*L4Nf,:IdlfAls4%McqU\QchMGOqNG\M)F\G7K\hmb(Yr]8>TM-Z]Ht[.1)@o#^[TF_,>Et7a3MWCH[VSWB2(C+S[u)Uami,LHIpQ"1acTAU#[I,F%&Z%ih:0&Gs)/+eDW't"MS__OA/^h=VR)2/oS(0G[9NuI/6YJfN$2:?dIl(0g2>2(p$%pQb\V_D86P]?*%%,4%"d0*J4>"<``*Y3YutB%]:3b)bE^V<J9pe5!.<3pSQIofR_[Jj*Qh$;?GDh]WUk3e/)QO"4!0gL-d^7_&O&c*`eT?Z8N0I0`sSW6r0IH-B3E-nHU3JuQ91aR%Ti&3tr^mM0pD"\[Fs$uE)9V2UEJ=S,Pqo]ZH$_;C!5sekqg(<\CnYgA$1eOtDklhK&1WACbl5ImQP=gpGRk.n3Mg&'"3[%`rf_1n%fS;`,_m[[(+YtV^TEWf`G7&LQ=d%dQ\;bDWjV%/4-9#g4)%D:^91g"4>0YH3j[\fqZ1N=*%g;g<gJ;BLg%DEIn<RXa_V/1`$d97Y%DQ9P&oos!@]YjjW*jSL*B'%^"fa6n0WRk7nlTmWI\?4Ss0.6A9C_0;he)fS"cR<QZHbiGr^hBS"g\HhnMVas+;c+7rC$7g(o]UX+%8]k&%Ho3U4Ekf0,1Y\Ff_.ZfD0kLu>dAF/I#Ttjs>B9fq5,d;s&",BXKiqg`2VMC_%\/+ZMQgPcA>6dYEDd43$\c1;=LM`Lr1MYP%gPXf,b1Fd-[m@'jf-udMXD5L3SW#^)>D\h;O""KKECH-c$LbZua>[=tq_6[,_T03S10=pC:_ZZJY._%J'ZEu2RU+oT@JrKs_Ut9Q%eKADeK#iJi&0[s'2DX<$?FI(]gk(TOm2O5i4?CmsmH@qD@A@A0!FCr""SU!IZ3;.M$AsE_>mju?(d%uE")=Orl,M^n0BX+`>^_>J%ahj*ZX>j]p%J#-j;[T-Jat=lGC7\>.ROG<--HJCCrPpI_e@qHp[p#Ii"/52NnG-T&-&r%`9*UbZ4709!r$_7l"K*=cof!uMA]/[.%3Y:M:.!HTb-7QWL^'Y-><)q.66>=<1\9_!_lWQAe]nd,$HJd<QU/B4?b1W=qO/Vk?g@d/]8@7XK'8&.=7XPNrfA<u.gKmQUKq>^/%.GOdEpU5?PZoQsK'0elgDpAr3?^S2N>>F$fk_Ej3h62<9J+W;hkJL*qfG<k]f*-M23`RnOULi3NOf2NeS6?"pnY+&;eYM+.D+nnq%UtcuSDDngLrF9)rK8/cDbG7)7"b)a897ug-DY7X+2>]M*Gr7@;G:"?@$6X2GGGFhkB'#kam#Jnm5oBuWClT=_.&>8X.It,N:j]W-%.C0hK2Yt!g)WOuX>GGN<RSV2"c^%msn**sUme,2lcea*?e%\JhrV8CeHi3G!5CS(]T&8.<J+iE5hgb7Vo='5ImbPX-p[RkD)CKq-%/,nLsDk[0ibKk\5mbn]6I/Ek$&)Vd3Vhb:egut['J%tioHfWqY3Z`b'3*VO,%UHcVdHZdF:mD.7&`j/>_Z&QH^MI9TmSBIo7=Xoq%%rf!brUY(WG<Ge?qr?Sf]BS;OL\U@sLL:)DGk`<:rT1ZcGPejFn(tN8m:`!d*uaf8B#OBb71B15Z`&HL8B9b9rph$(n14;>?;XP)%hPo6kob_W3Y9/%.]X?UA5@/Wk]Cjd*5Q(Lf]H1p<]Gb.)nb6C>p$j+gJ,/uF5CS(UeTYC"a2`rg^\NWMkMmZ=^H?o:q;Z[KqY'O$%L[Y68g[CiC=2s9-I.?gCqs/J+"4r[g%0~>%AI9_PrivateDataEnd